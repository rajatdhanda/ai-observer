{
  "README": "0 issues fixed! 132 remaining in 3 buckets.",
  "generated": "2025-09-04T09:26:54.265Z",
  "project": "/Users/rajatdhanda/Tech/Projects/streax",
  "project_type": "fullstack",
  "detected_features": {
    "has_payments": false,
    "has_auth": false,
    "has_database": false,
    "has_api": true
  },
  "issue_buckets": [
    {
      "name": "BLOCKERS",
      "title": "Critical Runtime Issues",
      "description": "Issues that prevent the application from running or cause crashes",
      "color": "#ef4444",
      "priority": 1,
      "count": 58,
      "issues": [
        {
          "file": "src/types/database.types.ts",
          "line": 0,
          "rule": "Type-Database Alignment",
          "severity": "critical",
          "message": "Database function missing Schema.parse()",
          "fix": "Add return Schema.parse(data) to all DB functions",
          "category": "type_safety"
        },
        {
          "file": "src/app/(main)/feed/page.tsx",
          "line": 0,
          "rule": "Contract Compliance",
          "severity": "critical",
          "message": "Entity 'Comment' found in code but no contract defined",
          "fix": "Add 'Comment' contract to contracts.yaml",
          "category": "contracts"
        },
        {
          "file": "src/app/(main)/feed/page.tsx",
          "line": 0,
          "rule": "Contract Compliance",
          "severity": "critical",
          "message": "Entity 'Session' found in code but no contract defined",
          "fix": "Add 'Session' contract to contracts.yaml",
          "category": "contracts"
        },
        {
          "file": "src/app/(main)/insurance/page.tsx",
          "line": 0,
          "rule": "Contract Compliance",
          "severity": "critical",
          "message": "Entity 'Insurance' found in code but no contract defined",
          "fix": "Add 'Insurance' contract to contracts.yaml",
          "category": "contracts"
        },
        {
          "file": "src/app/(main)/feed/page.tsx",
          "line": 0,
          "rule": "Contract Compliance",
          "severity": "critical",
          "message": "Entity 'Course' found in code but no contract defined",
          "fix": "Add 'Course' contract to contracts.yaml",
          "category": "contracts"
        },
        {
          "file": "src/app/(main)/feed/page.tsx",
          "line": 0,
          "rule": "Contract Compliance",
          "severity": "critical",
          "message": "Entity 'Payment' found in code but no contract defined",
          "fix": "Add 'Payment' contract to contracts.yaml",
          "category": "contracts"
        },
        {
          "file": "src/app/(main)/orders/order-history/page.tsx",
          "line": 0,
          "rule": "Contract Compliance",
          "severity": "critical",
          "message": "Entity 'Invoice' found in code but no contract defined",
          "fix": "Add 'Invoice' contract to contracts.yaml",
          "category": "contracts"
        },
        {
          "file": "src/app/(main)/feed/page.tsx",
          "line": 0,
          "rule": "Contract Compliance",
          "severity": "critical",
          "message": "Entity 'Cart' found in code but no contract defined",
          "fix": "Add 'Cart' contract to contracts.yaml",
          "category": "contracts"
        },
        {
          "file": "src/app/(main)/crm/page.tsx",
          "line": 0,
          "rule": "Contract Compliance",
          "severity": "critical",
          "message": "Entity 'Appointment' found in code but no contract defined",
          "fix": "Add 'Appointment' contract to contracts.yaml",
          "category": "contracts"
        },
        {
          "file": "src/app/(main)/insurance/page.tsx",
          "line": 0,
          "rule": "Contract Compliance",
          "severity": "critical",
          "message": "Type 'InsurancePage' exported but no contract for 'InsurancePage'",
          "fix": "Consider adding 'InsurancePage' contract",
          "category": "contracts"
        },
        {
          "file": "src/components/core/image.tsx",
          "line": 0,
          "rule": "Contract Compliance",
          "severity": "critical",
          "message": "Type 'Image' exported but no contract for ''",
          "fix": "Consider adding '' contract",
          "category": "contracts"
        },
        {
          "file": "/Users/rajatdhanda/Tech/Projects/streax/src/types/database.types.ts",
          "line": 0,
          "rule": "Type-Database Alignment",
          "severity": "critical",
          "message": "Schema 'database.types' not used with .parse() in database layer",
          "fix": "Add database.typesSchema.parse(data) when fetching from database",
          "category": "type_safety"
        },
        {
          "file": ".observer/contracts.json",
          "line": 0,
          "rule": "missing_contracts",
          "severity": "critical",
          "message": "No contracts defined - AI Observer cannot validate your code",
          "fix": "Create contracts.json with your API and database contracts",
          "category": "setup"
        },
        {
          "file": "src/app/(main)/crm/page.tsx",
          "line": 31,
          "rule": "typescript_error",
          "severity": "critical",
          "message": "Object literal may only specify known properties, and 'salon_id' does not exist in type 'Client'.",
          "fix": "Fix TypeScript error",
          "category": "types"
        },
        {
          "file": "src/app/(main)/feed/page.tsx",
          "line": 75,
          "rule": "typescript_error",
          "severity": "critical",
          "message": "Object literal may only specify known properties, and 'push_enabled' does not exist in type '{ email: boolean; sms: boolean; push: boolean; marketing: boolean; }'.",
          "fix": "Fix TypeScript error",
          "category": "types"
        },
        {
          "file": "src/app/(main)/feed/page.tsx",
          "line": 140,
          "rule": "typescript_error",
          "severity": "critical",
          "message": "Object literal may only specify known properties, and 'alt_text' does not exist in type '{ url: string; type: \"video\" | \"image\"; thumbnail_url?: string | undefined; }'.",
          "fix": "Fix TypeScript error",
          "category": "types"
        },
        {
          "file": "src/app/(main)/feed/page.tsx",
          "line": 154,
          "rule": "typescript_error",
          "severity": "critical",
          "message": "Object literal may only specify known properties, and 'recent_interactions' does not exist in type '{ likes_count: number; comments_count: number; shares_count: number; saves_count: number; views_count: number; }'.",
          "fix": "Fix TypeScript error",
          "category": "types"
        },
        {
          "file": "src/app/(main)/feed/page.tsx",
          "line": 178,
          "rule": "typescript_error",
          "severity": "critical",
          "message": "Object literal may only specify known properties, and 'alt_text' does not exist in type '{ url: string; type: \"video\" | \"image\"; thumbnail_url?: string | undefined; }'.",
          "fix": "Fix TypeScript error",
          "category": "types"
        },
        {
          "file": "src/app/(main)/feed/page.tsx",
          "line": 192,
          "rule": "typescript_error",
          "severity": "critical",
          "message": "Object literal may only specify known properties, and 'recent_interactions' does not exist in type '{ likes_count: number; comments_count: number; shares_count: number; saves_count: number; views_count: number; }'.",
          "fix": "Fix TypeScript error",
          "category": "types"
        },
        {
          "file": "src/app/(main)/insurance/page.tsx",
          "line": 25,
          "rule": "typescript_error",
          "severity": "critical",
          "message": "Object literal may only specify known properties, and 'userId' does not exist in type 'InsurancePolicy'.",
          "fix": "Fix TypeScript error",
          "category": "types"
        },
        {
          "file": "src/app/(main)/insurance/page.tsx",
          "line": 178,
          "rule": "typescript_error",
          "severity": "critical",
          "message": "Property 'premium' does not exist on type 'InsurancePolicy'.",
          "fix": "Check property name or add type definition",
          "category": "types"
        },
        {
          "file": "src/app/(main)/learning/page.tsx",
          "line": 373,
          "rule": "typescript_error",
          "severity": "critical",
          "message": "Property 'media' does not exist on type 'Course'.",
          "fix": "Check property name or add type definition",
          "category": "types"
        },
        {
          "file": "src/app/(main)/learning/page.tsx",
          "line": 383,
          "rule": "typescript_error",
          "severity": "critical",
          "message": "Property 'instructor_name' does not exist on type 'Course'. Did you mean 'instructor_id'?",
          "fix": "Check property name or add type definition",
          "category": "types"
        },
        {
          "file": "src/app/(main)/learning/page.tsx",
          "line": 413,
          "rule": "typescript_error",
          "severity": "critical",
          "message": "Property 'media' does not exist on type 'Course'.",
          "fix": "Check property name or add type definition",
          "category": "types"
        },
        {
          "file": "src/app/(main)/learning/page.tsx",
          "line": 420,
          "rule": "typescript_error",
          "severity": "critical",
          "message": "Property 'instructor_name' does not exist on type 'Course'. Did you mean 'instructor_id'?",
          "fix": "Check property name or add type definition",
          "category": "types"
        },
        {
          "file": "src/app/(main)/learning/page.tsx",
          "line": 426,
          "rule": "typescript_error",
          "severity": "critical",
          "message": "Property 'certification' does not exist on type 'Course'.",
          "fix": "Check property name or add type definition",
          "category": "types"
        },
        {
          "file": "src/app/(main)/learning/page.tsx",
          "line": 436,
          "rule": "typescript_error",
          "severity": "critical",
          "message": "Property 'access' does not exist on type 'Course'.",
          "fix": "Check property name or add type definition",
          "category": "types"
        },
        {
          "file": "src/app/(main)/learning/page.tsx",
          "line": 437,
          "rule": "typescript_error",
          "severity": "critical",
          "message": "Property 'access' does not exist on type 'Course'.",
          "fix": "Check property name or add type definition",
          "category": "types"
        },
        {
          "file": "src/app/(main)/learning/page.tsx",
          "line": 462,
          "rule": "typescript_error",
          "severity": "critical",
          "message": "Property 'media' does not exist on type 'Course'.",
          "fix": "Check property name or add type definition",
          "category": "types"
        },
        {
          "file": "src/app/(main)/learning/page.tsx",
          "line": 469,
          "rule": "typescript_error",
          "severity": "critical",
          "message": "Property 'instructor_name' does not exist on type 'Course'. Did you mean 'instructor_id'?",
          "fix": "Check property name or add type definition",
          "category": "types"
        },
        {
          "file": "src/app/(main)/learning/page.tsx",
          "line": 506,
          "rule": "typescript_error",
          "severity": "critical",
          "message": "Property 'media' does not exist on type 'Course'.",
          "fix": "Check property name or add type definition",
          "category": "types"
        },
        {
          "file": "src/components/core/client-card.tsx",
          "line": 41,
          "rule": "typescript_error",
          "severity": "critical",
          "message": "Property 'salon_id' does not exist on type 'Client'.",
          "fix": "Check property name or add type definition",
          "category": "types"
        },
        {
          "file": "src/components/core/client-card.tsx",
          "line": 41,
          "rule": "typescript_error",
          "severity": "critical",
          "message": "Property 'salon_visits' does not exist on type '{ first_visit: string; last_visit?: string | undefined; total_visits: number; total_spent: number; average_ticket_size: number; favorite_services: string[]; last_services: { service: string; date: string; professional_id: string; }[]; }'.",
          "fix": "Check property name or add type definition",
          "category": "types"
        },
        {
          "file": "src/components/core/client-card.tsx",
          "line": 42,
          "rule": "typescript_error",
          "severity": "critical",
          "message": "Property 'salon_visits' does not exist on type '{ first_visit: string; last_visit?: string | undefined; total_visits: number; total_spent: number; average_ticket_size: number; favorite_services: string[]; last_services: { service: string; date: string; professional_id: string; }[]; }'.",
          "fix": "Check property name or add type definition",
          "category": "types"
        },
        {
          "file": "src/components/core/client-card.tsx",
          "line": 70,
          "rule": "typescript_error",
          "severity": "critical",
          "message": "Property 'last_visit_date' does not exist on type '{ first_visit: string; last_visit?: string | undefined; total_visits: number; total_spent: number; average_ticket_size: number; favorite_services: string[]; last_services: { service: string; date: string; professional_id: string; }[]; }'. Did you mean 'last_visit'?",
          "fix": "Check property name or add type definition",
          "category": "types"
        },
        {
          "file": "src/components/core/course-card.tsx",
          "line": 61,
          "rule": "typescript_error",
          "severity": "critical",
          "message": "Property 'media' does not exist on type 'Course'.",
          "fix": "Check property name or add type definition",
          "category": "types"
        },
        {
          "file": "src/components/core/course-card.tsx",
          "line": 73,
          "rule": "typescript_error",
          "severity": "critical",
          "message": "Property 'instructor_name' does not exist on type 'Course'. Did you mean 'instructor_id'?",
          "fix": "Check property name or add type definition",
          "category": "types"
        },
        {
          "file": "src/components/core/course-card.tsx",
          "line": 102,
          "rule": "typescript_error",
          "severity": "critical",
          "message": "Property 'media' does not exist on type 'Course'.",
          "fix": "Check property name or add type definition",
          "category": "types"
        },
        {
          "file": "src/components/core/course-card.tsx",
          "line": 109,
          "rule": "typescript_error",
          "severity": "critical",
          "message": "Property 'instructor_name' does not exist on type 'Course'. Did you mean 'instructor_id'?",
          "fix": "Check property name or add type definition",
          "category": "types"
        },
        {
          "file": "src/components/core/course-card.tsx",
          "line": 118,
          "rule": "typescript_error",
          "severity": "critical",
          "message": "Property 'certification' does not exist on type 'Course'.",
          "fix": "Check property name or add type definition",
          "category": "types"
        },
        {
          "file": "src/components/core/course-card.tsx",
          "line": 128,
          "rule": "typescript_error",
          "severity": "critical",
          "message": "Property 'access' does not exist on type 'Course'.",
          "fix": "Check property name or add type definition",
          "category": "types"
        },
        {
          "file": "src/components/core/course-card.tsx",
          "line": 129,
          "rule": "typescript_error",
          "severity": "critical",
          "message": "Property 'access' does not exist on type 'Course'.",
          "fix": "Check property name or add type definition",
          "category": "types"
        },
        {
          "file": "src/hooks/useClients.ts",
          "line": 39,
          "rule": "typescript_error",
          "severity": "critical",
          "message": "Object literal may only specify known properties, and 'userId' does not exist in type 'Client'.",
          "fix": "Fix TypeScript error",
          "category": "types"
        },
        {
          "file": "src/hooks/useClients.ts",
          "line": 60,
          "rule": "typescript_error",
          "severity": "critical",
          "message": "Property 'lastVisit' does not exist on type 'Client'.",
          "fix": "Check property name or add type definition",
          "category": "types"
        },
        {
          "file": "src/hooks/useClients.ts",
          "line": 62,
          "rule": "typescript_error",
          "severity": "critical",
          "message": "Property 'totalSpent' does not exist on type 'Client'.",
          "fix": "Check property name or add type definition",
          "category": "types"
        },
        {
          "file": "src/hooks/useFeed.ts",
          "line": 44,
          "rule": "typescript_error",
          "severity": "critical",
          "message": "Property 'likes' does not exist on type 'Post'.",
          "fix": "Check property name or add type definition",
          "category": "types"
        },
        {
          "file": "src/hooks/useFeed.ts",
          "line": 44,
          "rule": "typescript_error",
          "severity": "critical",
          "message": "Property 'likedByMe' does not exist on type 'Post'.",
          "fix": "Check property name or add type definition",
          "category": "types"
        },
        {
          "file": "src/hooks/useFeed.ts",
          "line": 44,
          "rule": "typescript_error",
          "severity": "critical",
          "message": "Property 'likedByMe' does not exist on type 'Post'.",
          "fix": "Check property name or add type definition",
          "category": "types"
        },
        {
          "file": "src/hooks/useFeed.ts",
          "line": 56,
          "rule": "typescript_error",
          "severity": "critical",
          "message": "Object literal may only specify known properties, and 'userId' does not exist in type 'Post'.",
          "fix": "Fix TypeScript error",
          "category": "types"
        },
        {
          "file": "src/hooks/useInsurance.ts",
          "line": 37,
          "rule": "typescript_error",
          "severity": "critical",
          "message": "Property 'amount' does not exist on type 'Partial<{ claim_id: string; claim_date: string; incident_date: string; claim_amount: number; status: \"paid\" | \"submitted\" | \"under_review\" | \"approved\" | \"rejected\"; description: string; documents: { ...; }[]; approved_amount?: number | undefined; rejection_reason?: string | undefined; processed_by?: string | undefi...'.",
          "fix": "Check property name or add type definition",
          "category": "types"
        },
        {
          "file": "src/hooks/useInsurance.ts",
          "line": 39,
          "rule": "typescript_error",
          "severity": "critical",
          "message": "Property 'type' does not exist on type 'Partial<{ claim_id: string; claim_date: string; incident_date: string; claim_amount: number; status: \"paid\" | \"submitted\" | \"under_review\" | \"approved\" | \"rejected\"; description: string; documents: { ...; }[]; approved_amount?: number | undefined; rejection_reason?: string | undefined; processed_by?: string | undefi...'.",
          "fix": "Check property name or add type definition",
          "category": "types"
        },
        {
          "file": "src/hooks/useProducts.ts",
          "line": 35,
          "rule": "typescript_error",
          "severity": "critical",
          "message": "Property 'productId' does not exist on type 'CartItem'. Did you mean 'product_id'?",
          "fix": "Check property name or add type definition",
          "category": "types"
        },
        {
          "file": "src/hooks/useProducts.ts",
          "line": 38,
          "rule": "typescript_error",
          "severity": "critical",
          "message": "Property 'productId' does not exist on type 'CartItem'. Did you mean 'product_id'?",
          "fix": "Check property name or add type definition",
          "category": "types"
        },
        {
          "file": "src/hooks/useProducts.ts",
          "line": 47,
          "rule": "typescript_error",
          "severity": "critical",
          "message": "Property 'professionalPrice' does not exist on type 'Product'.",
          "fix": "Check property name or add type definition",
          "category": "types"
        },
        {
          "file": "src/hooks/useProducts.ts",
          "line": 53,
          "rule": "typescript_error",
          "severity": "critical",
          "message": "Property 'productId' does not exist on type 'CartItem'. Did you mean 'product_id'?",
          "fix": "Check property name or add type definition",
          "category": "types"
        },
        {
          "file": "src/hooks/useProducts.ts",
          "line": 56,
          "rule": "typescript_error",
          "severity": "critical",
          "message": "Property 'price' does not exist on type 'CartItem'.",
          "fix": "Check property name or add type definition",
          "category": "types"
        },
        {
          "file": "src/mocks/products-db-aligned.ts",
          "line": 756,
          "rule": "typescript_error",
          "severity": "critical",
          "message": "Property '0' does not exist on type '{ id: string; name: string; sku: string; barcode?: string | undefined; pricing: { mrp: number; selling_price: number; professional_price: number; cost_price?: number | undefined; }; inventory: { ...; }; attributes: Record<...>; media?: { ...; }[] | undefined; weight?: number | undefined; dimensions?: { ...; } | unde...'.",
          "fix": "Check property name or add type definition",
          "category": "types"
        },
        {
          "file": "src/mocks/products-db-aligned.ts",
          "line": 809,
          "rule": "typescript_error",
          "severity": "critical",
          "message": "Property '0' does not exist on type '{ id: string; name: string; sku: string; barcode?: string | undefined; pricing: { mrp: number; selling_price: number; professional_price: number; cost_price?: number | undefined; }; inventory: { ...; }; attributes: Record<...>; media?: { ...; }[] | undefined; weight?: number | undefined; dimensions?: { ...; } | unde...'.",
          "fix": "Check property name or add type definition",
          "category": "types"
        }
      ]
    },
    {
      "name": "STRUCTURAL",
      "title": "Important Architectural Issues",
      "description": "Issues that affect code organization, maintainability, and reliability",
      "color": "#f59e0b",
      "priority": 2,
      "count": 35,
      "issues": [
        {
          "file": "src/hooks/useAuth.ts",
          "line": 0,
          "rule": "Error Handling",
          "severity": "critical",
          "message": "Hook missing error state management",
          "fix": "Add error state: const [error, setError] = useState(null)",
          "category": "error_handling"
        },
        {
          "file": "src/hooks/useClients.ts",
          "line": 0,
          "rule": "Error Handling",
          "severity": "critical",
          "message": "Hook missing error state management",
          "fix": "Add error state: const [error, setError] = useState(null)",
          "category": "error_handling"
        },
        {
          "file": "src/hooks/useInsurance.ts",
          "line": 0,
          "rule": "Error Handling",
          "severity": "critical",
          "message": "Hook missing error state management",
          "fix": "Add error state: const [error, setError] = useState(null)",
          "category": "error_handling"
        },
        {
          "file": "src/hooks/useLearning.ts",
          "line": 0,
          "rule": "Error Handling",
          "severity": "critical",
          "message": "Hook missing error state management",
          "fix": "Add error state: const [error, setError] = useState(null)",
          "category": "error_handling"
        },
        {
          "file": "src/hooks/useProducts.ts",
          "line": 0,
          "rule": "Error Handling",
          "severity": "critical",
          "message": "Hook missing error state management",
          "fix": "Add error state: const [error, setError] = useState(null)",
          "category": "error_handling"
        },
        {
          "file": "src/hooks/useClients.ts",
          "line": 0,
          "rule": "Cache Invalidation",
          "severity": "high",
          "message": "Mutation detected but no cache invalidation",
          "fix": "Add queryClient.invalidateQueries() after mutation",
          "category": "performance"
        },
        {
          "file": "src/hooks/useFeed.ts",
          "line": 0,
          "rule": "Cache Invalidation",
          "severity": "high",
          "message": "Mutation detected but no cache invalidation",
          "fix": "Add queryClient.invalidateQueries() after mutation",
          "category": "performance"
        },
        {
          "file": "/Users/rajatdhanda/Tech/Projects/streax/src/app/(main)/crm/page.tsx",
          "line": 0,
          "rule": "Hook-Database Pattern",
          "severity": "critical",
          "message": "Component has direct database access",
          "fix": "Components should use hooks for data fetching, not direct DB calls",
          "category": "architecture"
        },
        {
          "file": "/Users/rajatdhanda/Tech/Projects/streax/src/app/(main)/feed/page.tsx",
          "line": 0,
          "rule": "Hook-Database Pattern",
          "severity": "critical",
          "message": "Component has direct database access",
          "fix": "Components should use hooks for data fetching, not direct DB calls",
          "category": "architecture"
        },
        {
          "file": "/Users/rajatdhanda/Tech/Projects/streax/src/app/(main)/insurance/page.tsx",
          "line": 0,
          "rule": "Hook-Database Pattern",
          "severity": "critical",
          "message": "Component has direct database access",
          "fix": "Components should use hooks for data fetching, not direct DB calls",
          "category": "architecture"
        },
        {
          "file": "/Users/rajatdhanda/Tech/Projects/streax/src/app/(main)/learning/page.tsx",
          "line": 0,
          "rule": "Hook-Database Pattern",
          "severity": "critical",
          "message": "Component has direct database access",
          "fix": "Components should use hooks for data fetching, not direct DB calls",
          "category": "architecture"
        },
        {
          "file": "/Users/rajatdhanda/Tech/Projects/streax/src/app/(main)/orders/cart/page.tsx",
          "line": 0,
          "rule": "Hook-Database Pattern",
          "severity": "critical",
          "message": "Component has direct database access",
          "fix": "Components should use hooks for data fetching, not direct DB calls",
          "category": "architecture"
        },
        {
          "file": "/Users/rajatdhanda/Tech/Projects/streax/src/app/(main)/orders/order-history/page.tsx",
          "line": 0,
          "rule": "Hook-Database Pattern",
          "severity": "critical",
          "message": "Component has direct database access",
          "fix": "Components should use hooks for data fetching, not direct DB calls",
          "category": "architecture"
        },
        {
          "file": "/Users/rajatdhanda/Tech/Projects/streax/src/app/(main)/orders/page.tsx",
          "line": 0,
          "rule": "Hook-Database Pattern",
          "severity": "critical",
          "message": "Component has direct database access",
          "fix": "Components should use hooks for data fetching, not direct DB calls",
          "category": "architecture"
        },
        {
          "file": "/Users/rajatdhanda/Tech/Projects/streax/src/components/core/client-card.tsx",
          "line": 0,
          "rule": "Hook-Database Pattern",
          "severity": "critical",
          "message": "Component has direct database access",
          "fix": "Components should use hooks for data fetching, not direct DB calls",
          "category": "architecture"
        },
        {
          "file": "/Users/rajatdhanda/Tech/Projects/streax/src/components/core/course-card.tsx",
          "line": 0,
          "rule": "Hook-Database Pattern",
          "severity": "critical",
          "message": "Component has direct database access",
          "fix": "Components should use hooks for data fetching, not direct DB calls",
          "category": "architecture"
        },
        {
          "file": "/Users/rajatdhanda/Tech/Projects/streax/src/components/core/post-card.tsx",
          "line": 0,
          "rule": "Hook-Database Pattern",
          "severity": "critical",
          "message": "Component has direct database access",
          "fix": "Components should use hooks for data fetching, not direct DB calls",
          "category": "architecture"
        },
        {
          "file": "/Users/rajatdhanda/Tech/Projects/streax/src/components/core/product-card.tsx",
          "line": 0,
          "rule": "Hook-Database Pattern",
          "severity": "critical",
          "message": "Component has direct database access",
          "fix": "Components should use hooks for data fetching, not direct DB calls",
          "category": "architecture"
        },
        {
          "file": "/Users/rajatdhanda/Tech/Projects/streax/src/app/(main)/learning/page.tsx",
          "line": 0,
          "rule": "File Size Warnings",
          "severity": "warning",
          "message": "File has 559 lines (exceeds 500 lines)",
          "fix": "Consider splitting - AI performs better with smaller files",
          "category": "maintainability"
        },
        {
          "file": "/Users/rajatdhanda/Tech/Projects/streax/src/mocks/orders.ts",
          "line": 0,
          "rule": "File Size Warnings",
          "severity": "warning",
          "message": "File has 693 lines (exceeds 500 lines)",
          "fix": "Consider splitting - AI performs better with smaller files",
          "category": "maintainability"
        },
        {
          "file": "/Users/rajatdhanda/Tech/Projects/streax/src/mocks/products-db-aligned.ts",
          "line": 0,
          "rule": "File Size Warnings",
          "severity": "warning",
          "message": "File has 826 lines (exceeds 500 lines)",
          "fix": "Consider splitting - AI performs better with smaller files",
          "category": "maintainability"
        },
        {
          "file": "/Users/rajatdhanda/Tech/Projects/streax/src/mocks/products-enhanced.ts",
          "line": 0,
          "rule": "File Size Warnings",
          "severity": "warning",
          "message": "File has 984 lines (exceeds 500 lines)",
          "fix": "Consider splitting - AI performs better with smaller files",
          "category": "maintainability"
        },
        {
          "file": "/Users/rajatdhanda/Tech/Projects/streax/src/types/database.types.ts",
          "line": 0,
          "rule": "File Size Warnings",
          "severity": "critical",
          "message": "File has 1232 lines (exceeds 1000 lines)",
          "fix": "Split into smaller modules - AI loses context in large files",
          "category": "maintainability"
        },
        {
          "file": "/Users/rajatdhanda/Tech/Projects/streax/src/app/(main)/learning/page.tsx, /Users/rajatdhanda/Tech/Projects/streax/src/components/core/course-card.tsx",
          "line": 0,
          "rule": "Duplicate Functions",
          "severity": "warning",
          "message": "Function 'getDifficultyColor' defined in 2 files",
          "fix": "AI might use wrong version - consolidate or rename functions",
          "category": "code_drift"
        },
        {
          "file": "/Users/rajatdhanda/Tech/Projects/streax/src/app/(main)/learning/page.tsx, /Users/rajatdhanda/Tech/Projects/streax/src/components/core/course-card.tsx",
          "line": 0,
          "rule": "Duplicate Functions",
          "severity": "warning",
          "message": "Function 'formatDuration' defined in 2 files",
          "fix": "AI might use wrong version - consolidate or rename functions",
          "category": "code_drift"
        },
        {
          "file": "/Users/rajatdhanda/Tech/Projects/streax/src/app/(main)/orders/page.tsx, /Users/rajatdhanda/Tech/Projects/streax/src/hooks/useProducts.ts",
          "line": 0,
          "rule": "Duplicate Functions",
          "severity": "warning",
          "message": "Function 'addToCart' defined in 2 files",
          "fix": "AI might use wrong version - consolidate or rename functions",
          "category": "code_drift"
        },
        {
          "file": "/Users/rajatdhanda/Tech/Projects/streax/src/app/(main)/orders/page.tsx, /Users/rajatdhanda/Tech/Projects/streax/src/hooks/useProducts.ts",
          "line": 0,
          "rule": "Duplicate Functions",
          "severity": "warning",
          "message": "Function 'removeFromCart' defined in 2 files",
          "fix": "AI might use wrong version - consolidate or rename functions",
          "category": "code_drift"
        },
        {
          "file": "/Users/rajatdhanda/Tech/Projects/streax/src/mocks/products-db-aligned.ts, /Users/rajatdhanda/Tech/Projects/streax/src/mocks/products-enhanced.ts",
          "line": 0,
          "rule": "Duplicate Functions",
          "severity": "warning",
          "message": "Function 'findVariantByAttributes' defined in 2 files",
          "fix": "AI might use wrong version - consolidate or rename functions",
          "category": "code_drift"
        },
        {
          "file": "/Users/rajatdhanda/Tech/Projects/streax/src/mocks/products-db-aligned.ts, /Users/rajatdhanda/Tech/Projects/streax/src/mocks/products-enhanced.ts",
          "line": 0,
          "rule": "Duplicate Functions",
          "severity": "warning",
          "message": "Function 'getBestDiscount' defined in 2 files",
          "fix": "AI might use wrong version - consolidate or rename functions",
          "category": "code_drift"
        },
        {
          "file": "/Users/rajatdhanda/Tech/Projects/streax/src/hooks/useAuth.ts",
          "line": 0,
          "rule": "Export Completeness",
          "severity": "warning",
          "message": "Hook may be missing exports: data, loading, error",
          "fix": "AI expects standard returns - add missing properties",
          "category": "api_completeness"
        },
        {
          "file": "/Users/rajatdhanda/Tech/Projects/streax/src/hooks/useClients.ts",
          "line": 0,
          "rule": "Export Completeness",
          "severity": "warning",
          "message": "Hook may be missing exports: data, error",
          "fix": "AI expects standard returns - add missing properties",
          "category": "api_completeness"
        },
        {
          "file": "/Users/rajatdhanda/Tech/Projects/streax/src/hooks/useFeed.ts",
          "line": 0,
          "rule": "Export Completeness",
          "severity": "warning",
          "message": "Hook may be missing exports: data",
          "fix": "AI expects standard returns - add missing properties",
          "category": "api_completeness"
        },
        {
          "file": "/Users/rajatdhanda/Tech/Projects/streax/src/hooks/useInsurance.ts",
          "line": 0,
          "rule": "Export Completeness",
          "severity": "warning",
          "message": "Hook may be missing exports: data, error",
          "fix": "AI expects standard returns - add missing properties",
          "category": "api_completeness"
        },
        {
          "file": "/Users/rajatdhanda/Tech/Projects/streax/src/hooks/useLearning.ts",
          "line": 0,
          "rule": "Export Completeness",
          "severity": "warning",
          "message": "Hook may be missing exports: data, error",
          "fix": "AI expects standard returns - add missing properties",
          "category": "api_completeness"
        },
        {
          "file": "/Users/rajatdhanda/Tech/Projects/streax/src/hooks/useProducts.ts",
          "line": 0,
          "rule": "Export Completeness",
          "severity": "warning",
          "message": "Hook may be missing exports: data, error",
          "fix": "AI expects standard returns - add missing properties",
          "category": "api_completeness"
        }
      ]
    },
    {
      "name": "COMPLIANCE",
      "title": "Code Quality & Standards Issues",
      "description": "Issues that improve code quality, consistency, and best practices",
      "color": "#3b82f6",
      "priority": 3,
      "count": 39,
      "issues": [
        {
          "file": "/Users/rajatdhanda/Tech/Projects/streax/src/hooks/useAuth.ts",
          "line": 0,
          "rule": "Error Handling Chain",
          "severity": "warning",
          "message": "Hook missing error state management",
          "fix": "Add error state: const [error, setError] = useState(null)",
          "category": "other"
        },
        {
          "file": "/Users/rajatdhanda/Tech/Projects/streax/src/hooks/useClients.ts",
          "line": 0,
          "rule": "Error Handling Chain",
          "severity": "warning",
          "message": "Hook missing error state management",
          "fix": "Add error state: const [error, setError] = useState(null)",
          "category": "other"
        },
        {
          "file": "/Users/rajatdhanda/Tech/Projects/streax/src/hooks/useInsurance.ts",
          "line": 0,
          "rule": "Error Handling Chain",
          "severity": "warning",
          "message": "Hook missing error state management",
          "fix": "Add error state: const [error, setError] = useState(null)",
          "category": "other"
        },
        {
          "file": "/Users/rajatdhanda/Tech/Projects/streax/src/hooks/useLearning.ts",
          "line": 0,
          "rule": "Error Handling Chain",
          "severity": "warning",
          "message": "Hook missing error state management",
          "fix": "Add error state: const [error, setError] = useState(null)",
          "category": "other"
        },
        {
          "file": "/Users/rajatdhanda/Tech/Projects/streax/src/hooks/useProducts.ts",
          "line": 0,
          "rule": "Error Handling Chain",
          "severity": "warning",
          "message": "Hook missing error state management",
          "fix": "Add error state: const [error, setError] = useState(null)",
          "category": "other"
        },
        {
          "file": "/Users/rajatdhanda/Tech/Projects/streax/src/components/core/bottom-nav.tsx",
          "line": 0,
          "rule": "Error Handling Chain",
          "severity": "warning",
          "message": "Component missing error UI handling",
          "fix": "Add {error && <ErrorMessage />} to handle errors",
          "category": "other"
        },
        {
          "file": "/Users/rajatdhanda/Tech/Projects/streax/src/components/core/image.tsx",
          "line": 0,
          "rule": "Error Handling Chain",
          "severity": "warning",
          "message": "Component missing error UI handling",
          "fix": "Add {error && <ErrorMessage />} to handle errors",
          "category": "other"
        },
        {
          "file": "/Users/rajatdhanda/Tech/Projects/streax/src/components/core/sheet.tsx",
          "line": 0,
          "rule": "Error Handling Chain",
          "severity": "warning",
          "message": "Component missing error UI handling",
          "fix": "Add {error && <ErrorMessage />} to handle errors",
          "category": "other"
        },
        {
          "file": "/Users/rajatdhanda/Tech/Projects/streax/src/app/(main)/crm/page.tsx",
          "line": 0,
          "rule": "Registry Usage (No Raw Strings)",
          "severity": "warning",
          "message": "Raw query key found: ['VIP']",
          "fix": "Use QueryKeys.keyName() from constants/registry",
          "category": "other"
        },
        {
          "file": "/Users/rajatdhanda/Tech/Projects/streax/src/app/(main)/learning/page.tsx",
          "line": 0,
          "rule": "Registry Usage (No Raw Strings)",
          "severity": "warning",
          "message": "Raw query key found: ['difficulty_level']",
          "fix": "Use QueryKeys.keyName() from constants/registry",
          "category": "other"
        },
        {
          "file": "/Users/rajatdhanda/Tech/Projects/streax/src/app/(main)/orders/cart/page.tsx",
          "line": 0,
          "rule": "Registry Usage (No Raw Strings)",
          "severity": "warning",
          "message": "Raw route string found: \"/orders\"",
          "fix": "Use Routes.routeName from constants/registry",
          "category": "other"
        },
        {
          "file": "/Users/rajatdhanda/Tech/Projects/streax/src/app/(main)/orders/cart/page.tsx",
          "line": 0,
          "rule": "Registry Usage (No Raw Strings)",
          "severity": "warning",
          "message": "Raw route string found: \"/orders/checkout\"",
          "fix": "Use Routes.routeName from constants/registry",
          "category": "other"
        },
        {
          "file": "/Users/rajatdhanda/Tech/Projects/streax/src/app/(main)/orders/order-history/page.tsx",
          "line": 0,
          "rule": "Registry Usage (No Raw Strings)",
          "severity": "warning",
          "message": "Raw route string found: \"/orders\"",
          "fix": "Use Routes.routeName from constants/registry",
          "category": "other"
        },
        {
          "file": "/Users/rajatdhanda/Tech/Projects/streax/src/app/(main)/orders/page.tsx",
          "line": 0,
          "rule": "Registry Usage (No Raw Strings)",
          "severity": "warning",
          "message": "Raw route string found: \"/orders/order-history\"",
          "fix": "Use Routes.routeName from constants/registry",
          "category": "other"
        },
        {
          "file": "/Users/rajatdhanda/Tech/Projects/streax/src/app/(main)/orders/page.tsx",
          "line": 0,
          "rule": "Registry Usage (No Raw Strings)",
          "severity": "warning",
          "message": "Raw route string found: \"/orders/cart\"",
          "fix": "Use Routes.routeName from constants/registry",
          "category": "other"
        },
        {
          "file": "/Users/rajatdhanda/Tech/Projects/streax/src/app/layout.tsx",
          "line": 0,
          "rule": "Registry Usage (No Raw Strings)",
          "severity": "warning",
          "message": "Raw query key found: [\"latin\"]",
          "fix": "Use QueryKeys.keyName() from constants/registry",
          "category": "other"
        },
        {
          "file": "/Users/rajatdhanda/Tech/Projects/streax/src/app/page.tsx",
          "line": 0,
          "rule": "Registry Usage (No Raw Strings)",
          "severity": "warning",
          "message": "Raw route string found: \"/next.svg\"",
          "fix": "Use Routes.routeName from constants/registry",
          "category": "other"
        },
        {
          "file": "/Users/rajatdhanda/Tech/Projects/streax/src/app/page.tsx",
          "line": 0,
          "rule": "Registry Usage (No Raw Strings)",
          "severity": "warning",
          "message": "Raw route string found: \"/vercel.svg\"",
          "fix": "Use Routes.routeName from constants/registry",
          "category": "other"
        },
        {
          "file": "/Users/rajatdhanda/Tech/Projects/streax/src/app/page.tsx",
          "line": 0,
          "rule": "Registry Usage (No Raw Strings)",
          "severity": "warning",
          "message": "Raw route string found: \"/file.svg\"",
          "fix": "Use Routes.routeName from constants/registry",
          "category": "other"
        },
        {
          "file": "/Users/rajatdhanda/Tech/Projects/streax/src/app/page.tsx",
          "line": 0,
          "rule": "Registry Usage (No Raw Strings)",
          "severity": "warning",
          "message": "Raw route string found: \"/window.svg\"",
          "fix": "Use Routes.routeName from constants/registry",
          "category": "other"
        },
        {
          "file": "/Users/rajatdhanda/Tech/Projects/streax/src/app/page.tsx",
          "line": 0,
          "rule": "Registry Usage (No Raw Strings)",
          "severity": "warning",
          "message": "Raw route string found: \"/globe.svg\"",
          "fix": "Use Routes.routeName from constants/registry",
          "category": "other"
        },
        {
          "file": "/Users/rajatdhanda/Tech/Projects/streax/src/components/core/bottom-nav.tsx",
          "line": 0,
          "rule": "Registry Usage (No Raw Strings)",
          "severity": "warning",
          "message": "Raw route string found: '/feed'",
          "fix": "Use Routes.routeName from constants/registry",
          "category": "other"
        },
        {
          "file": "/Users/rajatdhanda/Tech/Projects/streax/src/components/core/bottom-nav.tsx",
          "line": 0,
          "rule": "Registry Usage (No Raw Strings)",
          "severity": "warning",
          "message": "Raw route string found: '/orders'",
          "fix": "Use Routes.routeName from constants/registry",
          "category": "other"
        },
        {
          "file": "/Users/rajatdhanda/Tech/Projects/streax/src/components/core/bottom-nav.tsx",
          "line": 0,
          "rule": "Registry Usage (No Raw Strings)",
          "severity": "warning",
          "message": "Raw route string found: '/insurance'",
          "fix": "Use Routes.routeName from constants/registry",
          "category": "other"
        },
        {
          "file": "/Users/rajatdhanda/Tech/Projects/streax/src/components/core/bottom-nav.tsx",
          "line": 0,
          "rule": "Registry Usage (No Raw Strings)",
          "severity": "warning",
          "message": "Raw route string found: '/crm'",
          "fix": "Use Routes.routeName from constants/registry",
          "category": "other"
        },
        {
          "file": "/Users/rajatdhanda/Tech/Projects/streax/src/components/core/bottom-nav.tsx",
          "line": 0,
          "rule": "Registry Usage (No Raw Strings)",
          "severity": "warning",
          "message": "Raw route string found: '/learning'",
          "fix": "Use Routes.routeName from constants/registry",
          "category": "other"
        },
        {
          "file": "/Users/rajatdhanda/Tech/Projects/streax/src/components/core/course-card.tsx",
          "line": 0,
          "rule": "Registry Usage (No Raw Strings)",
          "severity": "warning",
          "message": "Raw query key found: ['difficulty_level']",
          "fix": "Use QueryKeys.keyName() from constants/registry",
          "category": "other"
        },
        {
          "file": "/Users/rajatdhanda/Tech/Projects/streax/src/mocks/products-db-aligned.ts",
          "line": 0,
          "rule": "Registry Usage (No Raw Strings)",
          "severity": "warning",
          "message": "Raw query key found: ['prod_tools_001']",
          "fix": "Use QueryKeys.keyName() from constants/registry",
          "category": "other"
        },
        {
          "file": "/Users/rajatdhanda/Tech/Projects/streax/src/mocks/products-db-aligned.ts",
          "line": 0,
          "rule": "Registry Usage (No Raw Strings)",
          "severity": "warning",
          "message": "Raw query key found: ['prod_developer_001']",
          "fix": "Use QueryKeys.keyName() from constants/registry",
          "category": "other"
        },
        {
          "file": "/Users/rajatdhanda/Tech/Projects/streax/src/mocks/products-db-aligned.ts",
          "line": 0,
          "rule": "Registry Usage (No Raw Strings)",
          "severity": "warning",
          "message": "Raw query key found: ['new']",
          "fix": "Use QueryKeys.keyName() from constants/registry",
          "category": "other"
        },
        {
          "file": "/Users/rajatdhanda/Tech/Projects/streax/src/mocks/products-db-aligned.ts",
          "line": 0,
          "rule": "Registry Usage (No Raw Strings)",
          "severity": "warning",
          "message": "Raw query key found: ['variants']",
          "fix": "Use QueryKeys.keyName() from constants/registry",
          "category": "other"
        },
        {
          "file": "/Users/rajatdhanda/Tech/Projects/streax/src/mocks/products-enhanced.ts",
          "line": 0,
          "rule": "Registry Usage (No Raw Strings)",
          "severity": "warning",
          "message": "Raw route string found: '/products/loreal-vitamino-color-shampoo'",
          "fix": "Use Routes.routeName from constants/registry",
          "category": "other"
        },
        {
          "file": "/Users/rajatdhanda/Tech/Projects/streax/src/mocks/products-enhanced.ts",
          "line": 0,
          "rule": "Registry Usage (No Raw Strings)",
          "severity": "warning",
          "message": "Raw query key found: ['prod_002']",
          "fix": "Use QueryKeys.keyName() from constants/registry",
          "category": "other"
        },
        {
          "file": "/Users/rajatdhanda/Tech/Projects/streax/src/mocks/products-enhanced.ts",
          "line": 0,
          "rule": "Registry Usage (No Raw Strings)",
          "severity": "warning",
          "message": "Raw query key found: ['prod_tools_001']",
          "fix": "Use QueryKeys.keyName() from constants/registry",
          "category": "other"
        },
        {
          "file": "/Users/rajatdhanda/Tech/Projects/streax/src/mocks/products-enhanced.ts",
          "line": 0,
          "rule": "Registry Usage (No Raw Strings)",
          "severity": "warning",
          "message": "Raw query key found: ['hair_color']",
          "fix": "Use QueryKeys.keyName() from constants/registry",
          "category": "other"
        },
        {
          "file": "/Users/rajatdhanda/Tech/Projects/streax/src/mocks/products-enhanced.ts",
          "line": 0,
          "rule": "Registry Usage (No Raw Strings)",
          "severity": "warning",
          "message": "Raw query key found: ['prod_developer_001']",
          "fix": "Use QueryKeys.keyName() from constants/registry",
          "category": "other"
        },
        {
          "file": "/Users/rajatdhanda/Tech/Projects/streax/src/types/database.types.ts",
          "line": 0,
          "rule": "Registry Usage (No Raw Strings)",
          "severity": "warning",
          "message": "Raw query key found: ['course_progress']",
          "fix": "Use QueryKeys.keyName() from constants/registry",
          "category": "other"
        },
        {
          "file": "/Users/rajatdhanda/Tech/Projects/streax/src/types/database.types.ts",
          "line": 0,
          "rule": "Registry Usage (No Raw Strings)",
          "severity": "warning",
          "message": "Raw query key found: ['claims_history']",
          "fix": "Use QueryKeys.keyName() from constants/registry",
          "category": "other"
        },
        {
          "file": "/Users/rajatdhanda/Tech/Projects/streax/src/types/database.types.ts",
          "line": 0,
          "rule": "Registry Usage (No Raw Strings)",
          "severity": "warning",
          "message": "Raw query key found: ['claims']",
          "fix": "Use QueryKeys.keyName() from constants/registry",
          "category": "other"
        }
      ]
    }
  ],
  "stats": {
    "total_issues_found": 132,
    "issues_shown": 132,
    "visibility_percentage": 100,
    "by_bucket": [
      {
        "name": "BLOCKERS",
        "count": 58
      },
      {
        "name": "STRUCTURAL",
        "count": 35
      },
      {
        "name": "COMPLIANCE",
        "count": 39
      }
    ],
    "by_severity": {
      "critical": 75,
      "high": 2,
      "medium": 0,
      "low": 0
    },
    "by_rule": {
      "Type-Database Alignment": 2,
      "Error Handling": 5,
      "Cache Invalidation": 2,
      "Contract Compliance": 10,
      "Hook-Database Pattern": 11,
      "Error Handling Chain": 8,
      "Registry Usage (No Raw Strings)": 31,
      "File Size Warnings": 5,
      "Duplicate Functions": 6,
      "Export Completeness": 6,
      "missing_contracts": 1,
      "typescript_error": 45
    },
    "buckets_total": 3,
    "fixed_since_last_run": 0,
    "remaining_issues": 132
  },
  "context": {
    "total": "132 issues in 3 priority buckets",
    "bucket_priorities": [
      {
        "BLOCKERS": "Issues that prevent the application from running or cause crashes"
      },
      {
        "STRUCTURAL": "Issues that affect code organization, maintainability, and reliability"
      },
      {
        "COMPLIANCE": "Issues that improve code quality, consistency, and best practices"
      }
    ]
  },
  "progress": {
    "session_started": "2025-09-04T06:48:27.608Z",
    "runs_count": 11,
    "total_fixed": 0,
    "enhancement_note": "Enhanced with bucket classification - showing ALL issues"
  }
}