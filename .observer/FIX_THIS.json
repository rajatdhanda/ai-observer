{
  "README": "0 issues fixed! 97 remaining in 3 buckets.",
  "generated": "2025-09-04T13:32:22.815Z",
  "project": "/Users/rajatdhanda/Tech/Projects/ai-observer",
  "project_type": "fullstack",
  "detected_features": {
    "has_payments": false,
    "has_auth": false,
    "has_database": false,
    "has_api": true
  },
  "issue_buckets": [
    {
      "name": "BLOCKERS",
      "title": "Critical Runtime Issues",
      "description": "Issues that prevent the application from running or cause crashes",
      "color": "#ef4444",
      "priority": 1,
      "count": 18,
      "issues": [
        {
          "file": "src/types/database.types.ts",
          "line": 0,
          "rule": "Type-Database Alignment",
          "severity": "critical",
          "message": "Database function missing Schema.parse()",
          "fix": "Add return Schema.parse(data) to all DB functions",
          "category": "type_safety"
        },
        {
          "file": "src/app/(main)/crm/page.tsx",
          "line": 0,
          "rule": "Contract Compliance",
          "severity": "critical",
          "message": "Entity 'User' found in code but no contract defined",
          "fix": "Add 'User' contract to contracts.yaml",
          "category": "contracts"
        },
        {
          "file": "src/app/(main)/crm/page.tsx",
          "line": 0,
          "rule": "Contract Compliance",
          "severity": "critical",
          "message": "Entity 'Professional' found in code but no contract defined",
          "fix": "Add 'Professional' contract to contracts.yaml",
          "category": "contracts"
        },
        {
          "file": "next.config.js",
          "line": 0,
          "rule": "Contract Compliance",
          "severity": "critical",
          "message": "Entity 'Client' found in code but no contract defined",
          "fix": "Add 'Client' contract to contracts.yaml",
          "category": "contracts"
        },
        {
          "file": "src/app/(main)/crm/page.tsx",
          "line": 0,
          "rule": "Contract Compliance",
          "severity": "critical",
          "message": "Entity 'Order' found in code but no contract defined",
          "fix": "Add 'Order' contract to contracts.yaml",
          "category": "contracts"
        },
        {
          "file": "next.config.js",
          "line": 0,
          "rule": "Contract Compliance",
          "severity": "critical",
          "message": "Entity 'Product' found in code but no contract defined",
          "fix": "Add 'Product' contract to contracts.yaml",
          "category": "contracts"
        },
        {
          "file": "postcss.config.js",
          "line": 0,
          "rule": "Contract Compliance",
          "severity": "critical",
          "message": "Entity 'Post' found in code but no contract defined",
          "fix": "Add 'Post' contract to contracts.yaml",
          "category": "contracts"
        },
        {
          "file": "src/app/(main)/feed/page.tsx",
          "line": 0,
          "rule": "Contract Compliance",
          "severity": "critical",
          "message": "Entity 'Comment' found in code but no contract defined",
          "fix": "Add 'Comment' contract to contracts.yaml",
          "category": "contracts"
        },
        {
          "file": "src/app/(main)/feed/page.tsx",
          "line": 0,
          "rule": "Contract Compliance",
          "severity": "critical",
          "message": "Entity 'Session' found in code but no contract defined",
          "fix": "Add 'Session' contract to contracts.yaml",
          "category": "contracts"
        },
        {
          "file": "src/app/(main)/insurance/page.tsx",
          "line": 0,
          "rule": "Contract Compliance",
          "severity": "critical",
          "message": "Entity 'Insurance' found in code but no contract defined",
          "fix": "Add 'Insurance' contract to contracts.yaml",
          "category": "contracts"
        },
        {
          "file": "src/app/(main)/feed/page.tsx",
          "line": 0,
          "rule": "Contract Compliance",
          "severity": "critical",
          "message": "Entity 'Course' found in code but no contract defined",
          "fix": "Add 'Course' contract to contracts.yaml",
          "category": "contracts"
        },
        {
          "file": "src/app/(main)/feed/page.tsx",
          "line": 0,
          "rule": "Contract Compliance",
          "severity": "critical",
          "message": "Entity 'Payment' found in code but no contract defined",
          "fix": "Add 'Payment' contract to contracts.yaml",
          "category": "contracts"
        },
        {
          "file": "src/app/(main)/orders/order-history/page.tsx",
          "line": 0,
          "rule": "Contract Compliance",
          "severity": "critical",
          "message": "Entity 'Invoice' found in code but no contract defined",
          "fix": "Add 'Invoice' contract to contracts.yaml",
          "category": "contracts"
        },
        {
          "file": "src/app/(main)/feed/page.tsx",
          "line": 0,
          "rule": "Contract Compliance",
          "severity": "critical",
          "message": "Entity 'Cart' found in code but no contract defined",
          "fix": "Add 'Cart' contract to contracts.yaml",
          "category": "contracts"
        },
        {
          "file": "src/app/(main)/crm/page.tsx",
          "line": 0,
          "rule": "Contract Compliance",
          "severity": "critical",
          "message": "Entity 'Appointment' found in code but no contract defined",
          "fix": "Add 'Appointment' contract to contracts.yaml",
          "category": "contracts"
        },
        {
          "file": "src/app/(main)/insurance/page.tsx",
          "line": 0,
          "rule": "Contract Compliance",
          "severity": "critical",
          "message": "Type 'InsurancePage' exported but no contract for 'InsurancePage'",
          "fix": "Consider adding 'InsurancePage' contract",
          "category": "contracts"
        },
        {
          "file": "src/components/core/image.tsx",
          "line": 0,
          "rule": "Contract Compliance",
          "severity": "critical",
          "message": "Type 'Image' exported but no contract for ''",
          "fix": "Consider adding '' contract",
          "category": "contracts"
        },
        {
          "file": ".observer/contracts.json",
          "line": 0,
          "rule": "missing_contracts",
          "severity": "critical",
          "message": "No contracts defined - AI Observer cannot validate your code",
          "fix": "Create contracts.json with your API and database contracts",
          "category": "setup"
        }
      ]
    },
    {
      "name": "STRUCTURAL",
      "title": "Important Architectural Issues",
      "description": "Issues that affect code organization, maintainability, and reliability",
      "color": "#f59e0b",
      "priority": 2,
      "count": 14,
      "issues": [
        {
          "file": "src/hooks/useAuth.ts",
          "line": 0,
          "rule": "Error Handling",
          "severity": "critical",
          "message": "Hook missing error state management",
          "fix": "Add error state: const [error, setError] = useState(null)",
          "category": "error_handling"
        },
        {
          "file": "src/hooks/useClients.ts",
          "line": 0,
          "rule": "Error Handling",
          "severity": "critical",
          "message": "Hook missing error state management",
          "fix": "Add error state: const [error, setError] = useState(null)",
          "category": "error_handling"
        },
        {
          "file": "src/hooks/useInsurance.ts",
          "line": 0,
          "rule": "Error Handling",
          "severity": "critical",
          "message": "Hook missing error state management",
          "fix": "Add error state: const [error, setError] = useState(null)",
          "category": "error_handling"
        },
        {
          "file": "src/hooks/useLearning.ts",
          "line": 0,
          "rule": "Error Handling",
          "severity": "critical",
          "message": "Hook missing error state management",
          "fix": "Add error state: const [error, setError] = useState(null)",
          "category": "error_handling"
        },
        {
          "file": "src/hooks/useProducts.ts",
          "line": 0,
          "rule": "Error Handling",
          "severity": "critical",
          "message": "Hook missing error state management",
          "fix": "Add error state: const [error, setError] = useState(null)",
          "category": "error_handling"
        },
        {
          "file": "src/hooks/useClients.ts",
          "line": 0,
          "rule": "Cache Invalidation",
          "severity": "high",
          "message": "Mutation detected but no cache invalidation",
          "fix": "Add queryClient.invalidateQueries() after mutation",
          "category": "performance"
        },
        {
          "file": "src/hooks/useFeed.ts",
          "line": 0,
          "rule": "Cache Invalidation",
          "severity": "high",
          "message": "Mutation detected but no cache invalidation",
          "fix": "Add queryClient.invalidateQueries() after mutation",
          "category": "performance"
        },
        {
          "file": "/Users/rajatdhanda/Tech/Projects/ai-observer/src/analyzer/smart-issue-analyzer.ts",
          "line": 0,
          "rule": "File Size Warnings",
          "severity": "warning",
          "message": "File has 966 lines (exceeds 500 lines)",
          "fix": "Consider splitting - AI performs better with smaller files",
          "category": "maintainability"
        },
        {
          "file": "/Users/rajatdhanda/Tech/Projects/ai-observer/src/dashboard/index.ts",
          "line": 0,
          "rule": "File Size Warnings",
          "severity": "warning",
          "message": "File has 778 lines (exceeds 500 lines)",
          "fix": "Consider splitting - AI performs better with smaller files",
          "category": "maintainability"
        },
        {
          "file": "/Users/rajatdhanda/Tech/Projects/ai-observer/src/validator/nine-rules-validator.ts",
          "line": 0,
          "rule": "File Size Warnings",
          "severity": "critical",
          "message": "File has 1166 lines (exceeds 1000 lines)",
          "fix": "Split into smaller modules - AI loses context in large files",
          "category": "maintainability"
        },
        {
          "file": "/Users/rajatdhanda/Tech/Projects/ai-observer/src/validator/table-mapper.ts",
          "line": 0,
          "rule": "File Size Warnings",
          "severity": "warning",
          "message": "File has 691 lines (exceeds 500 lines)",
          "fix": "Consider splitting - AI performs better with smaller files",
          "category": "maintainability"
        },
        {
          "file": "/Users/rajatdhanda/Tech/Projects/ai-observer/src/analyzer/type-extractor.ts, /Users/rajatdhanda/Tech/Projects/ai-observer/src/dashboard/index.ts",
          "line": 0,
          "rule": "Duplicate Functions",
          "severity": "warning",
          "message": "Function 'walkDir' defined in 2 files",
          "fix": "AI might use wrong version - consolidate or rename functions",
          "category": "code_drift"
        },
        {
          "file": "/Users/rajatdhanda/Tech/Projects/ai-observer/src/analyzer/type-extractor.ts, /Users/rajatdhanda/Tech/Projects/ai-observer/src/validator/table-mapper.ts",
          "line": 0,
          "rule": "Duplicate Functions",
          "severity": "warning",
          "message": "Function 'visit' defined in 2 files",
          "fix": "AI might use wrong version - consolidate or rename functions",
          "category": "code_drift"
        },
        {
          "file": "/Users/rajatdhanda/Tech/Projects/ai-observer/src/validator/boundary-validator.ts, /Users/rajatdhanda/Tech/Projects/ai-observer/src/validator/design-system-validator.ts",
          "line": 0,
          "rule": "Duplicate Functions",
          "severity": "warning",
          "message": "Function 'scanDir' defined in 2 files",
          "fix": "AI might use wrong version - consolidate or rename functions",
          "category": "code_drift"
        }
      ]
    },
    {
      "name": "COMPLIANCE",
      "title": "Code Quality & Standards Issues",
      "description": "Issues that improve code quality, consistency, and best practices",
      "color": "#3b82f6",
      "priority": 3,
      "count": 65,
      "issues": [
        {
          "file": "/Users/rajatdhanda/Tech/Projects/ai-observer/src/analyzer/framework-detector.ts",
          "line": 0,
          "rule": "Registry Usage (No Raw Strings)",
          "severity": "warning",
          "message": "Raw query key found: ['next']",
          "fix": "Use QueryKeys.keyName() from constants/registry",
          "category": "other"
        },
        {
          "file": "/Users/rajatdhanda/Tech/Projects/ai-observer/src/analyzer/framework-detector.ts",
          "line": 0,
          "rule": "Registry Usage (No Raw Strings)",
          "severity": "warning",
          "message": "Raw query key found: ['react']",
          "fix": "Use QueryKeys.keyName() from constants/registry",
          "category": "other"
        },
        {
          "file": "/Users/rajatdhanda/Tech/Projects/ai-observer/src/analyzer/framework-detector.ts",
          "line": 0,
          "rule": "Registry Usage (No Raw Strings)",
          "severity": "warning",
          "message": "Raw query key found: ['vue']",
          "fix": "Use QueryKeys.keyName() from constants/registry",
          "category": "other"
        },
        {
          "file": "/Users/rajatdhanda/Tech/Projects/ai-observer/src/analyzer/framework-detector.ts",
          "line": 0,
          "rule": "Registry Usage (No Raw Strings)",
          "severity": "warning",
          "message": "Raw query key found: ['nuxt']",
          "fix": "Use QueryKeys.keyName() from constants/registry",
          "category": "other"
        },
        {
          "file": "/Users/rajatdhanda/Tech/Projects/ai-observer/src/analyzer/framework-detector.ts",
          "line": 0,
          "rule": "Registry Usage (No Raw Strings)",
          "severity": "warning",
          "message": "Raw query key found: ['express']",
          "fix": "Use QueryKeys.keyName() from constants/registry",
          "category": "other"
        },
        {
          "file": "/Users/rajatdhanda/Tech/Projects/ai-observer/src/analyzer/framework-detector.ts",
          "line": 0,
          "rule": "Registry Usage (No Raw Strings)",
          "severity": "warning",
          "message": "Raw query key found: ['svelte']",
          "fix": "Use QueryKeys.keyName() from constants/registry",
          "category": "other"
        },
        {
          "file": "/Users/rajatdhanda/Tech/Projects/ai-observer/src/analyzer/smart-issue-analyzer.ts",
          "line": 0,
          "rule": "Registry Usage (No Raw Strings)",
          "severity": "warning",
          "message": "Raw query key found: ['stripe']",
          "fix": "Use QueryKeys.keyName() from constants/registry",
          "category": "other"
        },
        {
          "file": "/Users/rajatdhanda/Tech/Projects/ai-observer/src/analyzer/smart-issue-analyzer.ts",
          "line": 0,
          "rule": "Registry Usage (No Raw Strings)",
          "severity": "warning",
          "message": "Raw query key found: ['square']",
          "fix": "Use QueryKeys.keyName() from constants/registry",
          "category": "other"
        },
        {
          "file": "/Users/rajatdhanda/Tech/Projects/ai-observer/src/analyzer/smart-issue-analyzer.ts",
          "line": 0,
          "rule": "Registry Usage (No Raw Strings)",
          "severity": "warning",
          "message": "Raw query key found: ['paypal']",
          "fix": "Use QueryKeys.keyName() from constants/registry",
          "category": "other"
        },
        {
          "file": "/Users/rajatdhanda/Tech/Projects/ai-observer/src/analyzer/smart-issue-analyzer.ts",
          "line": 0,
          "rule": "Registry Usage (No Raw Strings)",
          "severity": "warning",
          "message": "Raw query key found: ['firebase']",
          "fix": "Use QueryKeys.keyName() from constants/registry",
          "category": "other"
        },
        {
          "file": "/Users/rajatdhanda/Tech/Projects/ai-observer/src/analyzer/smart-issue-analyzer.ts",
          "line": 0,
          "rule": "Registry Usage (No Raw Strings)",
          "severity": "warning",
          "message": "Raw query key found: ['prisma']",
          "fix": "Use QueryKeys.keyName() from constants/registry",
          "category": "other"
        },
        {
          "file": "/Users/rajatdhanda/Tech/Projects/ai-observer/src/analyzer/smart-issue-analyzer.ts",
          "line": 0,
          "rule": "Registry Usage (No Raw Strings)",
          "severity": "warning",
          "message": "Raw query key found: ['typeorm']",
          "fix": "Use QueryKeys.keyName() from constants/registry",
          "category": "other"
        },
        {
          "file": "/Users/rajatdhanda/Tech/Projects/ai-observer/src/analyzer/smart-issue-analyzer.ts",
          "line": 0,
          "rule": "Registry Usage (No Raw Strings)",
          "severity": "warning",
          "message": "Raw query key found: ['mongoose']",
          "fix": "Use QueryKeys.keyName() from constants/registry",
          "category": "other"
        },
        {
          "file": "/Users/rajatdhanda/Tech/Projects/ai-observer/src/analyzer/smart-issue-analyzer.ts",
          "line": 0,
          "rule": "Registry Usage (No Raw Strings)",
          "severity": "warning",
          "message": "Raw query key found: ['sequelize']",
          "fix": "Use QueryKeys.keyName() from constants/registry",
          "category": "other"
        },
        {
          "file": "/Users/rajatdhanda/Tech/Projects/ai-observer/src/analyzer/smart-issue-analyzer.ts",
          "line": 0,
          "rule": "Registry Usage (No Raw Strings)",
          "severity": "warning",
          "message": "Raw query key found: ['express']",
          "fix": "Use QueryKeys.keyName() from constants/registry",
          "category": "other"
        },
        {
          "file": "/Users/rajatdhanda/Tech/Projects/ai-observer/src/analyzer/smart-issue-analyzer.ts",
          "line": 0,
          "rule": "Registry Usage (No Raw Strings)",
          "severity": "warning",
          "message": "Raw query key found: ['fastify']",
          "fix": "Use QueryKeys.keyName() from constants/registry",
          "category": "other"
        },
        {
          "file": "/Users/rajatdhanda/Tech/Projects/ai-observer/src/analyzer/smart-issue-analyzer.ts",
          "line": 0,
          "rule": "Registry Usage (No Raw Strings)",
          "severity": "warning",
          "message": "Raw query key found: ['next']",
          "fix": "Use QueryKeys.keyName() from constants/registry",
          "category": "other"
        },
        {
          "file": "/Users/rajatdhanda/Tech/Projects/ai-observer/src/analyzer/smart-issue-analyzer.ts",
          "line": 0,
          "rule": "Registry Usage (No Raw Strings)",
          "severity": "warning",
          "message": "Raw query key found: ['react']",
          "fix": "Use QueryKeys.keyName() from constants/registry",
          "category": "other"
        },
        {
          "file": "/Users/rajatdhanda/Tech/Projects/ai-observer/src/analyzer/smart-issue-analyzer.ts",
          "line": 0,
          "rule": "Registry Usage (No Raw Strings)",
          "severity": "warning",
          "message": "Raw query key found: ['vue']",
          "fix": "Use QueryKeys.keyName() from constants/registry",
          "category": "other"
        },
        {
          "file": "/Users/rajatdhanda/Tech/Projects/ai-observer/src/analyzer/smart-issue-analyzer.ts",
          "line": 0,
          "rule": "Registry Usage (No Raw Strings)",
          "severity": "warning",
          "message": "Raw query key found: ['angular']",
          "fix": "Use QueryKeys.keyName() from constants/registry",
          "category": "other"
        },
        {
          "file": "/Users/rajatdhanda/Tech/Projects/ai-observer/src/analyzer/smart-issue-analyzer.ts",
          "line": 0,
          "rule": "Registry Usage (No Raw Strings)",
          "severity": "warning",
          "message": "Raw query key found: ['nuxt']",
          "fix": "Use QueryKeys.keyName() from constants/registry",
          "category": "other"
        },
        {
          "file": "/Users/rajatdhanda/Tech/Projects/ai-observer/src/analyzer/smart-issue-analyzer.ts",
          "line": 0,
          "rule": "Registry Usage (No Raw Strings)",
          "severity": "warning",
          "message": "Raw query key found: ['expo']",
          "fix": "Use QueryKeys.keyName() from constants/registry",
          "category": "other"
        },
        {
          "file": "/Users/rajatdhanda/Tech/Projects/ai-observer/src/analyzer/smart-issue-analyzer.ts",
          "line": 0,
          "rule": "Registry Usage (No Raw Strings)",
          "severity": "warning",
          "message": "Raw query key found: ['tensorflow']",
          "fix": "Use QueryKeys.keyName() from constants/registry",
          "category": "other"
        },
        {
          "file": "/Users/rajatdhanda/Tech/Projects/ai-observer/src/dashboard/index.ts",
          "line": 0,
          "rule": "Registry Usage (No Raw Strings)",
          "severity": "warning",
          "message": "Raw route string found: '/api/health'",
          "fix": "Use Routes.routeName from constants/registry",
          "category": "other"
        },
        {
          "file": "/Users/rajatdhanda/Tech/Projects/ai-observer/src/dashboard/index.ts",
          "line": 0,
          "rule": "Registry Usage (No Raw Strings)",
          "severity": "warning",
          "message": "Raw route string found: '/api/logs'",
          "fix": "Use Routes.routeName from constants/registry",
          "category": "other"
        },
        {
          "file": "/Users/rajatdhanda/Tech/Projects/ai-observer/src/dashboard/index.ts",
          "line": 0,
          "rule": "Registry Usage (No Raw Strings)",
          "severity": "warning",
          "message": "Raw route string found: '/api/errors'",
          "fix": "Use Routes.routeName from constants/registry",
          "category": "other"
        },
        {
          "file": "/Users/rajatdhanda/Tech/Projects/ai-observer/src/dashboard/index.ts",
          "line": 0,
          "rule": "Registry Usage (No Raw Strings)",
          "severity": "warning",
          "message": "Raw route string found: '/api/observer-logs'",
          "fix": "Use Routes.routeName from constants/registry",
          "category": "other"
        },
        {
          "file": "/Users/rajatdhanda/Tech/Projects/ai-observer/src/dashboard/index.ts",
          "line": 0,
          "rule": "Registry Usage (No Raw Strings)",
          "severity": "warning",
          "message": "Raw route string found: '/api/smart-analysis-meta'",
          "fix": "Use Routes.routeName from constants/registry",
          "category": "other"
        },
        {
          "file": "/Users/rajatdhanda/Tech/Projects/ai-observer/src/dashboard/index.ts",
          "line": 0,
          "rule": "Registry Usage (No Raw Strings)",
          "severity": "warning",
          "message": "Raw route string found: '/api/smart-analysis'",
          "fix": "Use Routes.routeName from constants/registry",
          "category": "other"
        },
        {
          "file": "/Users/rajatdhanda/Tech/Projects/ai-observer/src/dashboard/index.ts",
          "line": 0,
          "rule": "Registry Usage (No Raw Strings)",
          "severity": "warning",
          "message": "Raw route string found: '/api/run-smart-analysis'",
          "fix": "Use Routes.routeName from constants/registry",
          "category": "other"
        },
        {
          "file": "/Users/rajatdhanda/Tech/Projects/ai-observer/src/dashboard/index.ts",
          "line": 0,
          "rule": "Registry Usage (No Raw Strings)",
          "severity": "warning",
          "message": "Raw route string found: '/api/diagnostics'",
          "fix": "Use Routes.routeName from constants/registry",
          "category": "other"
        },
        {
          "file": "/Users/rajatdhanda/Tech/Projects/ai-observer/src/dashboard/index.ts",
          "line": 0,
          "rule": "Registry Usage (No Raw Strings)",
          "severity": "warning",
          "message": "Raw route string found: '/api/projects'",
          "fix": "Use Routes.routeName from constants/registry",
          "category": "other"
        },
        {
          "file": "/Users/rajatdhanda/Tech/Projects/ai-observer/src/dashboard/index.ts",
          "line": 0,
          "rule": "Registry Usage (No Raw Strings)",
          "severity": "warning",
          "message": "Raw route string found: '/api/set-project'",
          "fix": "Use Routes.routeName from constants/registry",
          "category": "other"
        },
        {
          "file": "/Users/rajatdhanda/Tech/Projects/ai-observer/src/dashboard/index.ts",
          "line": 0,
          "rule": "Registry Usage (No Raw Strings)",
          "severity": "warning",
          "message": "Raw route string found: '/api/analysis'",
          "fix": "Use Routes.routeName from constants/registry",
          "category": "other"
        },
        {
          "file": "/Users/rajatdhanda/Tech/Projects/ai-observer/src/dashboard/index.ts",
          "line": 0,
          "rule": "Registry Usage (No Raw Strings)",
          "severity": "warning",
          "message": "Raw route string found: '/api/project-info'",
          "fix": "Use Routes.routeName from constants/registry",
          "category": "other"
        },
        {
          "file": "/Users/rajatdhanda/Tech/Projects/ai-observer/src/dashboard/index.ts",
          "line": 0,
          "rule": "Registry Usage (No Raw Strings)",
          "severity": "warning",
          "message": "Raw route string found: '/api/table-mapping'",
          "fix": "Use Routes.routeName from constants/registry",
          "category": "other"
        },
        {
          "file": "/Users/rajatdhanda/Tech/Projects/ai-observer/src/dashboard/index.ts",
          "line": 0,
          "rule": "Registry Usage (No Raw Strings)",
          "severity": "warning",
          "message": "Raw route string found: '/api/nine-rules'",
          "fix": "Use Routes.routeName from constants/registry",
          "category": "other"
        },
        {
          "file": "/Users/rajatdhanda/Tech/Projects/ai-observer/src/dashboard/index.ts",
          "line": 0,
          "rule": "Registry Usage (No Raw Strings)",
          "severity": "warning",
          "message": "Raw route string found: '/api/contracts'",
          "fix": "Use Routes.routeName from constants/registry",
          "category": "other"
        },
        {
          "file": "/Users/rajatdhanda/Tech/Projects/ai-observer/src/dashboard/index.ts",
          "line": 0,
          "rule": "Registry Usage (No Raw Strings)",
          "severity": "warning",
          "message": "Raw route string found: '/api/architecture-data'",
          "fix": "Use Routes.routeName from constants/registry",
          "category": "other"
        },
        {
          "file": "/Users/rajatdhanda/Tech/Projects/ai-observer/src/dashboard/index.ts",
          "line": 0,
          "rule": "Registry Usage (No Raw Strings)",
          "severity": "warning",
          "message": "Raw route string found: '/api/boundaries'",
          "fix": "Use Routes.routeName from constants/registry",
          "category": "other"
        },
        {
          "file": "/Users/rajatdhanda/Tech/Projects/ai-observer/src/dashboard/index.ts",
          "line": 0,
          "rule": "Registry Usage (No Raw Strings)",
          "severity": "warning",
          "message": "Raw route string found: '/api/map-validation'",
          "fix": "Use Routes.routeName from constants/registry",
          "category": "other"
        },
        {
          "file": "/Users/rajatdhanda/Tech/Projects/ai-observer/src/dashboard/index.ts",
          "line": 0,
          "rule": "Registry Usage (No Raw Strings)",
          "severity": "warning",
          "message": "Raw route string found: '/api/versions'",
          "fix": "Use Routes.routeName from constants/registry",
          "category": "other"
        },
        {
          "file": "/Users/rajatdhanda/Tech/Projects/ai-observer/src/dashboard/index.ts",
          "line": 0,
          "rule": "Registry Usage (No Raw Strings)",
          "severity": "warning",
          "message": "Raw route string found: '/api/design-system'",
          "fix": "Use Routes.routeName from constants/registry",
          "category": "other"
        },
        {
          "file": "/Users/rajatdhanda/Tech/Projects/ai-observer/src/dashboard/index.ts",
          "line": 0,
          "rule": "Registry Usage (No Raw Strings)",
          "severity": "warning",
          "message": "Raw route string found: '/modular-fixed'",
          "fix": "Use Routes.routeName from constants/registry",
          "category": "other"
        },
        {
          "file": "/Users/rajatdhanda/Tech/Projects/ai-observer/src/dashboard/index.ts",
          "line": 0,
          "rule": "Registry Usage (No Raw Strings)",
          "severity": "warning",
          "message": "Raw route string found: '/theme-config.js'",
          "fix": "Use Routes.routeName from constants/registry",
          "category": "other"
        },
        {
          "file": "/Users/rajatdhanda/Tech/Projects/ai-observer/src/dashboard/index.ts",
          "line": 0,
          "rule": "Registry Usage (No Raw Strings)",
          "severity": "warning",
          "message": "Raw route string found: '/components/'",
          "fix": "Use Routes.routeName from constants/registry",
          "category": "other"
        },
        {
          "file": "/Users/rajatdhanda/Tech/Projects/ai-observer/src/dashboard/index.ts",
          "line": 0,
          "rule": "Registry Usage (No Raw Strings)",
          "severity": "warning",
          "message": "Raw route string found: '/api'",
          "fix": "Use Routes.routeName from constants/registry",
          "category": "other"
        },
        {
          "file": "/Users/rajatdhanda/Tech/Projects/ai-observer/src/dashboard/index.ts",
          "line": 0,
          "rule": "Registry Usage (No Raw Strings)",
          "severity": "warning",
          "message": "Raw route string found: '/hooks/'",
          "fix": "Use Routes.routeName from constants/registry",
          "category": "other"
        },
        {
          "file": "/Users/rajatdhanda/Tech/Projects/ai-observer/src/dashboard/index.ts",
          "line": 0,
          "rule": "Registry Usage (No Raw Strings)",
          "severity": "warning",
          "message": "Raw route string found: '/api/'",
          "fix": "Use Routes.routeName from constants/registry",
          "category": "other"
        },
        {
          "file": "/Users/rajatdhanda/Tech/Projects/ai-observer/src/dashboard/index.ts",
          "line": 0,
          "rule": "Registry Usage (No Raw Strings)",
          "severity": "warning",
          "message": "Raw route string found: '/app/'",
          "fix": "Use Routes.routeName from constants/registry",
          "category": "other"
        },
        {
          "file": "/Users/rajatdhanda/Tech/Projects/ai-observer/src/observer/map-generator.ts",
          "line": 0,
          "rule": "Registry Usage (No Raw Strings)",
          "severity": "warning",
          "message": "Raw route string found: '/hooks/'",
          "fix": "Use Routes.routeName from constants/registry",
          "category": "other"
        },
        {
          "file": "/Users/rajatdhanda/Tech/Projects/ai-observer/src/observer/map-generator.ts",
          "line": 0,
          "rule": "Registry Usage (No Raw Strings)",
          "severity": "warning",
          "message": "Raw route string found: '/page.tsx'",
          "fix": "Use Routes.routeName from constants/registry",
          "category": "other"
        },
        {
          "file": "/Users/rajatdhanda/Tech/Projects/ai-observer/src/observer/map-generator.ts",
          "line": 0,
          "rule": "Registry Usage (No Raw Strings)",
          "severity": "warning",
          "message": "Raw route string found: '/route.ts'",
          "fix": "Use Routes.routeName from constants/registry",
          "category": "other"
        },
        {
          "file": "/Users/rajatdhanda/Tech/Projects/ai-observer/src/observer/map-generator.ts",
          "line": 0,
          "rule": "Registry Usage (No Raw Strings)",
          "severity": "warning",
          "message": "Raw route string found: '/components/'",
          "fix": "Use Routes.routeName from constants/registry",
          "category": "other"
        },
        {
          "file": "/Users/rajatdhanda/Tech/Projects/ai-observer/src/observer/map-generator.ts",
          "line": 0,
          "rule": "Registry Usage (No Raw Strings)",
          "severity": "warning",
          "message": "Raw route string found: '/api/'",
          "fix": "Use Routes.routeName from constants/registry",
          "category": "other"
        },
        {
          "file": "/Users/rajatdhanda/Tech/Projects/ai-observer/src/observer/validator-runner.ts",
          "line": 0,
          "rule": "Registry Usage (No Raw Strings)",
          "severity": "warning",
          "message": "Raw route string found: '/db/'",
          "fix": "Use Routes.routeName from constants/registry",
          "category": "other"
        },
        {
          "file": "/Users/rajatdhanda/Tech/Projects/ai-observer/src/observer/validator-runner.ts",
          "line": 0,
          "rule": "Registry Usage (No Raw Strings)",
          "severity": "warning",
          "message": "Raw route string found: '/components/'",
          "fix": "Use Routes.routeName from constants/registry",
          "category": "other"
        },
        {
          "file": "/Users/rajatdhanda/Tech/Projects/ai-observer/src/observer/validator-runner.ts",
          "line": 0,
          "rule": "Registry Usage (No Raw Strings)",
          "severity": "warning",
          "message": "Raw route string found: '/hooks/'",
          "fix": "Use Routes.routeName from constants/registry",
          "category": "other"
        },
        {
          "file": "/Users/rajatdhanda/Tech/Projects/ai-observer/src/observer/validator-runner.ts",
          "line": 0,
          "rule": "Registry Usage (No Raw Strings)",
          "severity": "warning",
          "message": "Raw route string found: '/api/'",
          "fix": "Use Routes.routeName from constants/registry",
          "category": "other"
        },
        {
          "file": "/Users/rajatdhanda/Tech/Projects/ai-observer/src/validator/contract-detector.ts",
          "line": 0,
          "rule": "Registry Usage (No Raw Strings)",
          "severity": "warning",
          "message": "Raw query key found: [\"field\"]",
          "fix": "Use QueryKeys.keyName() from constants/registry",
          "category": "other"
        },
        {
          "file": "/Users/rajatdhanda/Tech/Projects/ai-observer/src/validator/contract-validator.ts",
          "line": 0,
          "rule": "Registry Usage (No Raw Strings)",
          "severity": "warning",
          "message": "Raw query key found: ['total_amount']",
          "fix": "Use QueryKeys.keyName() from constants/registry",
          "category": "other"
        },
        {
          "file": "/Users/rajatdhanda/Tech/Projects/ai-observer/src/validator/design-system-validator.ts",
          "line": 0,
          "rule": "Registry Usage (No Raw Strings)",
          "severity": "warning",
          "message": "Raw route string found: '/components/ui/'",
          "fix": "Use Routes.routeName from constants/registry",
          "category": "other"
        },
        {
          "file": "/Users/rajatdhanda/Tech/Projects/ai-observer/src/validator/design-system-validator.ts",
          "line": 0,
          "rule": "Registry Usage (No Raw Strings)",
          "severity": "warning",
          "message": "Raw route string found: '/design-system/'",
          "fix": "Use Routes.routeName from constants/registry",
          "category": "other"
        },
        {
          "file": "/Users/rajatdhanda/Tech/Projects/ai-observer/src/validator/table-mapper.ts",
          "line": 0,
          "rule": "Registry Usage (No Raw Strings)",
          "severity": "warning",
          "message": "Raw route string found: '/types/'",
          "fix": "Use Routes.routeName from constants/registry",
          "category": "other"
        },
        {
          "file": "/Users/rajatdhanda/Tech/Projects/ai-observer/src/validator/table-mapper.ts",
          "line": 0,
          "rule": "Registry Usage (No Raw Strings)",
          "severity": "warning",
          "message": "Raw route string found: '/route'",
          "fix": "Use Routes.routeName from constants/registry",
          "category": "other"
        }
      ]
    }
  ],
  "stats": {
    "total_issues_found": 97,
    "issues_shown": 97,
    "visibility_percentage": 100,
    "by_bucket": [
      {
        "name": "BLOCKERS",
        "count": 18
      },
      {
        "name": "STRUCTURAL",
        "count": 14
      },
      {
        "name": "COMPLIANCE",
        "count": 65
      }
    ],
    "by_severity": {
      "critical": 24,
      "high": 2,
      "medium": 0,
      "low": 0
    },
    "by_rule": {
      "Type-Database Alignment": 1,
      "Error Handling": 5,
      "Cache Invalidation": 2,
      "Contract Compliance": 16,
      "Registry Usage (No Raw Strings)": 65,
      "File Size Warnings": 4,
      "Duplicate Functions": 3,
      "missing_contracts": 1
    },
    "buckets_total": 3,
    "fixed_since_last_run": 0,
    "remaining_issues": 97
  },
  "context": {
    "total": "97 issues in 3 priority buckets",
    "bucket_priorities": [
      {
        "BLOCKERS": "Issues that prevent the application from running or cause crashes"
      },
      {
        "STRUCTURAL": "Issues that affect code organization, maintainability, and reliability"
      },
      {
        "COMPLIANCE": "Issues that improve code quality, consistency, and best practices"
      }
    ]
  },
  "progress": {
    "session_started": "2025-09-04T06:48:27.608Z",
    "runs_count": 13,
    "total_fixed": 35,
    "enhancement_note": "Enhanced with bucket classification - showing ALL issues"
  }
}