{
  "projectPath": "/Users/rajatdhanda/Tech/Projects/ai-observer/test-projects/streax",
  "projectName": "streax",
  "framework": {
    "name": "Next.js",
    "version": "15.5.2",
    "type": "fullstack",
    "dependencies": {
      "@radix-ui/react-navigation-menu": "^1.2.14",
      "@radix-ui/react-tabs": "^1.1.13",
      "class-variance-authority": "^0.7.1",
      "clsx": "^2.1.1",
      "lucide-react": "^0.542.0",
      "next": "15.5.2",
      "react": "19.1.0",
      "react-dom": "19.1.0",
      "tailwind-merge": "^3.3.1",
      "tailwindcss-animate": "^1.0.7"
    },
    "scripts": {
      "dev": "next dev --turbopack",
      "build": "next build --turbopack",
      "start": "next start",
      "lint": "eslint"
    }
  },
  "types": {
    "interfaces": [
      {
        "name": "AppointmentCardProps",
        "filePath": "/Users/rajatdhanda/Tech/Projects/ai-observer/test-projects/streax/src/components/core/appointment-card.tsx",
        "properties": [
          {
            "name": "time",
            "type": "string",
            "required": true
          },
          {
            "name": "clientName",
            "type": "string",
            "required": true
          },
          {
            "name": "service",
            "type": "string",
            "required": true
          },
          {
            "name": "onClick",
            "type": "() => void",
            "required": false
          }
        ],
        "category": "component"
      },
      {
        "name": "AvatarProps",
        "filePath": "/Users/rajatdhanda/Tech/Projects/ai-observer/test-projects/streax/src/components/core/avatar.tsx",
        "properties": [
          {
            "name": "src",
            "type": "string",
            "required": false
          },
          {
            "name": "alt",
            "type": "string",
            "required": false
          },
          {
            "name": "name",
            "type": "string",
            "required": false
          },
          {
            "name": "size",
            "type": "'xs' | 'sm' | 'md' | 'lg' | 'xl'",
            "required": false
          },
          {
            "name": "status",
            "type": "'online' | 'offline' | 'busy' | 'away'",
            "required": false
          },
          {
            "name": "verified",
            "type": "boolean",
            "required": false
          },
          {
            "name": "badge",
            "type": "React.ReactNode",
            "required": false
          },
          {
            "name": "onClick",
            "type": "() => void",
            "required": false
          },
          {
            "name": "className",
            "type": "string",
            "required": false
          }
        ],
        "category": "component"
      },
      {
        "name": "BadgeProps",
        "filePath": "/Users/rajatdhanda/Tech/Projects/ai-observer/test-projects/streax/src/components/core/badge.tsx",
        "properties": [
          {
            "name": "variant",
            "type": "'default' | 'accent' | 'success' | 'warning' | 'error' | 'info'",
            "required": false
          },
          {
            "name": "size",
            "type": "'sm' | 'md' | 'lg'",
            "required": false
          },
          {
            "name": "dot",
            "type": "boolean",
            "required": false
          },
          {
            "name": "pulse",
            "type": "boolean",
            "required": false
          },
          {
            "name": "children",
            "type": "React.ReactNode",
            "required": false
          },
          {
            "name": "className",
            "type": "string",
            "required": false
          }
        ],
        "category": "component"
      },
      {
        "name": "NavItem",
        "filePath": "/Users/rajatdhanda/Tech/Projects/ai-observer/test-projects/streax/src/components/core/bottom-nav.tsx",
        "properties": [
          {
            "name": "icon",
            "type": "React.ElementType",
            "required": true
          },
          {
            "name": "label",
            "type": "string",
            "required": true
          },
          {
            "name": "href",
            "type": "string",
            "required": true
          },
          {
            "name": "badge",
            "type": "number",
            "required": false
          }
        ],
        "category": "component"
      },
      {
        "name": "ButtonProps",
        "filePath": "/Users/rajatdhanda/Tech/Projects/ai-observer/test-projects/streax/src/components/core/button.tsx",
        "properties": [
          {
            "name": "variant",
            "type": "'primary' | 'accent' | 'ghost' | 'outline' | 'danger'",
            "required": false
          },
          {
            "name": "size",
            "type": "'sm' | 'md' | 'lg' | 'icon'",
            "required": false
          },
          {
            "name": "fullWidth",
            "type": "boolean",
            "required": false
          },
          {
            "name": "loading",
            "type": "boolean",
            "required": false
          },
          {
            "name": "icon",
            "type": "React.ReactNode",
            "required": false
          },
          {
            "name": "iconPosition",
            "type": "'left' | 'right'",
            "required": false
          },
          {
            "name": "children",
            "type": "React.ReactNode",
            "required": false
          }
        ],
        "category": "component"
      },
      {
        "name": "CardProps",
        "filePath": "/Users/rajatdhanda/Tech/Projects/ai-observer/test-projects/streax/src/components/core/card.tsx",
        "properties": [
          {
            "name": "variant",
            "type": "'default' | 'bordered' | 'elevated' | 'accent'",
            "required": false
          },
          {
            "name": "padding",
            "type": "'none' | 'sm' | 'md' | 'lg'",
            "required": false
          },
          {
            "name": "onClick",
            "type": "() => void",
            "required": false
          },
          {
            "name": "className",
            "type": "string",
            "required": false
          },
          {
            "name": "children",
            "type": "React.ReactNode",
            "required": true
          },
          {
            "name": "header",
            "type": "React.ReactNode",
            "required": false
          },
          {
            "name": "footer",
            "type": "React.ReactNode",
            "required": false
          },
          {
            "name": "media",
            "type": "React.ReactNode",
            "required": false
          },
          {
            "name": "badge",
            "type": "string | React.ReactNode",
            "required": false
          }
        ],
        "category": "component"
      },
      {
        "name": "CategoryCardProps",
        "filePath": "/Users/rajatdhanda/Tech/Projects/ai-observer/test-projects/streax/src/components/core/category-card.tsx",
        "properties": [
          {
            "name": "icon",
            "type": "ReactNode",
            "required": true
          },
          {
            "name": "title",
            "type": "string",
            "required": true
          },
          {
            "name": "count",
            "type": "number",
            "required": false
          },
          {
            "name": "onClick",
            "type": "() => void",
            "required": false
          }
        ],
        "category": "component"
      },
      {
        "name": "ClientCardProps",
        "filePath": "/Users/rajatdhanda/Tech/Projects/ai-observer/test-projects/streax/src/components/core/client-card.tsx",
        "properties": [
          {
            "name": "client",
            "type": "Client",
            "required": true
          },
          {
            "name": "onClick",
            "type": "() => void",
            "required": false
          },
          {
            "name": "onCall",
            "type": "() => void",
            "required": false
          },
          {
            "name": "onBook",
            "type": "() => void",
            "required": false
          },
          {
            "name": "onHistory",
            "type": "() => void",
            "required": false
          }
        ],
        "category": "component"
      },
      {
        "name": "CourseCardProps",
        "filePath": "/Users/rajatdhanda/Tech/Projects/ai-observer/test-projects/streax/src/components/core/course-card.tsx",
        "properties": [
          {
            "name": "course",
            "type": "Course",
            "required": true
          },
          {
            "name": "enrollment",
            "type": "CourseEnrollment",
            "required": false
          },
          {
            "name": "variant",
            "type": "'compact' | 'featured'",
            "required": false
          },
          {
            "name": "onStart",
            "type": "() => void",
            "required": false
          },
          {
            "name": "onContinue",
            "type": "() => void",
            "required": false
          },
          {
            "name": "onViewCertificate",
            "type": "() => void",
            "required": false
          }
        ],
        "category": "component"
      },
      {
        "name": "ImageProps",
        "filePath": "/Users/rajatdhanda/Tech/Projects/ai-observer/test-projects/streax/src/components/core/image.tsx",
        "properties": [
          {
            "name": "src",
            "type": "string",
            "required": true
          },
          {
            "name": "alt",
            "type": "string",
            "required": true
          },
          {
            "name": "aspectRatio",
            "type": "'1:1' | '4:3' | '16:9' | '9:16' | 'auto'",
            "required": false
          },
          {
            "name": "objectFit",
            "type": "'cover' | 'contain' | 'fill'",
            "required": false
          },
          {
            "name": "lazy",
            "type": "boolean",
            "required": false
          },
          {
            "name": "placeholder",
            "type": "'blur' | 'skeleton' | 'none'",
            "required": false
          },
          {
            "name": "onLoad",
            "type": "() => void",
            "required": false
          },
          {
            "name": "onError",
            "type": "() => void",
            "required": false
          }
        ],
        "category": "component"
      },
      {
        "name": "InputProps",
        "filePath": "/Users/rajatdhanda/Tech/Projects/ai-observer/test-projects/streax/src/components/core/input.tsx",
        "properties": [
          {
            "name": "variant",
            "type": "'default' | 'filled' | 'ghost'",
            "required": false
          },
          {
            "name": "size",
            "type": "'sm' | 'md' | 'lg'",
            "required": false
          },
          {
            "name": "error",
            "type": "boolean | string",
            "required": false
          },
          {
            "name": "icon",
            "type": "React.ReactNode",
            "required": false
          },
          {
            "name": "iconPosition",
            "type": "'left' | 'right'",
            "required": false
          },
          {
            "name": "label",
            "type": "string",
            "required": false
          },
          {
            "name": "helper",
            "type": "string",
            "required": false
          },
          {
            "name": "action",
            "type": "React.ReactNode",
            "required": false
          }
        ],
        "category": "component"
      },
      {
        "name": "ListProps",
        "filePath": "/Users/rajatdhanda/Tech/Projects/ai-observer/test-projects/streax/src/components/core/list.tsx",
        "properties": [
          {
            "name": "data",
            "type": "T[]",
            "required": true
          },
          {
            "name": "renderItem",
            "type": "(item: T, index: number) => React.ReactNode",
            "required": true
          },
          {
            "name": "variant",
            "type": "'vertical' | 'grid' | 'horizontal'",
            "required": false
          },
          {
            "name": "gap",
            "type": "'none' | 'sm' | 'md' | 'lg'",
            "required": false
          },
          {
            "name": "columns",
            "type": "1 | 2 | 3 | 4",
            "required": false
          },
          {
            "name": "loading",
            "type": "boolean",
            "required": false
          },
          {
            "name": "empty",
            "type": "React.ReactNode",
            "required": false
          },
          {
            "name": "header",
            "type": "React.ReactNode",
            "required": false
          },
          {
            "name": "footer",
            "type": "React.ReactNode",
            "required": false
          },
          {
            "name": "loadMore",
            "type": "() => void",
            "required": false
          },
          {
            "name": "hasMore",
            "type": "boolean",
            "required": false
          },
          {
            "name": "className",
            "type": "string",
            "required": false
          },
          {
            "name": "separator",
            "type": "boolean",
            "required": false
          }
        ],
        "category": "component"
      },
      {
        "name": "LiveSessionBannerProps",
        "filePath": "/Users/rajatdhanda/Tech/Projects/ai-observer/test-projects/streax/src/components/core/live-session-banner.tsx",
        "properties": [
          {
            "name": "session",
            "type": "LiveSession",
            "required": true
          },
          {
            "name": "onJoin",
            "type": "() => void",
            "required": false
          }
        ],
        "category": "component"
      },
      {
        "name": "NavItem",
        "filePath": "/Users/rajatdhanda/Tech/Projects/ai-observer/test-projects/streax/src/components/core/navbar.tsx",
        "properties": [
          {
            "name": "id",
            "type": "string",
            "required": true
          },
          {
            "name": "label",
            "type": "string",
            "required": true
          },
          {
            "name": "icon",
            "type": "React.ReactNode",
            "required": true
          },
          {
            "name": "badge",
            "type": "string | number",
            "required": false
          },
          {
            "name": "onClick",
            "type": "() => void",
            "required": false
          }
        ],
        "category": "component"
      },
      {
        "name": "NavBarProps",
        "filePath": "/Users/rajatdhanda/Tech/Projects/ai-observer/test-projects/streax/src/components/core/navbar.tsx",
        "properties": [
          {
            "name": "variant",
            "type": "'bottom' | 'top' | 'header'",
            "required": false
          },
          {
            "name": "items",
            "type": "NavItem[]",
            "required": false
          },
          {
            "name": "activeId",
            "type": "string",
            "required": false
          },
          {
            "name": "logo",
            "type": "React.ReactNode",
            "required": false
          },
          {
            "name": "actions",
            "type": "React.ReactNode",
            "required": false
          },
          {
            "name": "title",
            "type": "string",
            "required": false
          },
          {
            "name": "subtitle",
            "type": "string",
            "required": false
          },
          {
            "name": "className",
            "type": "string",
            "required": false
          },
          {
            "name": "onItemClick",
            "type": "(id: string) => void",
            "required": false
          }
        ],
        "category": "component"
      },
      {
        "name": "PageHeaderProps",
        "filePath": "/Users/rajatdhanda/Tech/Projects/ai-observer/test-projects/streax/src/components/core/page-header.tsx",
        "properties": [
          {
            "name": "title",
            "type": "string",
            "required": true
          },
          {
            "name": "showSearch",
            "type": "boolean",
            "required": false
          },
          {
            "name": "showNotification",
            "type": "boolean",
            "required": false
          },
          {
            "name": "showAddButton",
            "type": "boolean",
            "required": false
          },
          {
            "name": "onAddClick",
            "type": "() => void",
            "required": false
          },
          {
            "name": "rightContent",
            "type": "ReactNode",
            "required": false
          }
        ],
        "category": "component"
      },
      {
        "name": "PostCardProps",
        "filePath": "/Users/rajatdhanda/Tech/Projects/ai-observer/test-projects/streax/src/components/core/post-card.tsx",
        "properties": [
          {
            "name": "post",
            "type": "Post",
            "required": true
          },
          {
            "name": "professional",
            "type": "Professional",
            "required": true
          },
          {
            "name": "onLike",
            "type": "() => void",
            "required": false
          },
          {
            "name": "onComment",
            "type": "() => void",
            "required": false
          },
          {
            "name": "onShare",
            "type": "() => void",
            "required": false
          },
          {
            "name": "onSave",
            "type": "() => void",
            "required": false
          }
        ],
        "category": "component"
      },
      {
        "name": "PostComposerProps",
        "filePath": "/Users/rajatdhanda/Tech/Projects/ai-observer/test-projects/streax/src/components/core/post-composer.tsx",
        "properties": [
          {
            "name": "avatar",
            "type": "string",
            "required": false
          },
          {
            "name": "placeholder",
            "type": "string",
            "required": false
          },
          {
            "name": "onPhotoClick",
            "type": "() => void",
            "required": false
          },
          {
            "name": "onVideoClick",
            "type": "() => void",
            "required": false
          },
          {
            "name": "onQuestionClick",
            "type": "() => void",
            "required": false
          },
          {
            "name": "onPollClick",
            "type": "() => void",
            "required": false
          },
          {
            "name": "onFocus",
            "type": "() => void",
            "required": false
          }
        ],
        "category": "component"
      },
      {
        "name": "ProductCardProps",
        "filePath": "/Users/rajatdhanda/Tech/Projects/ai-observer/test-projects/streax/src/components/core/product-card.tsx",
        "properties": [
          {
            "name": "product",
            "type": "Product",
            "required": true
          },
          {
            "name": "quantity",
            "type": "number",
            "required": false
          },
          {
            "name": "onAdd",
            "type": "() => void",
            "required": false
          },
          {
            "name": "onRemove",
            "type": "() => void",
            "required": false
          },
          {
            "name": "onIncrease",
            "type": "() => void",
            "required": false
          },
          {
            "name": "onDecrease",
            "type": "() => void",
            "required": false
          }
        ],
        "category": "component"
      },
      {
        "name": "SearchBarProps",
        "filePath": "/Users/rajatdhanda/Tech/Projects/ai-observer/test-projects/streax/src/components/core/search-bar.tsx",
        "properties": [
          {
            "name": "value",
            "type": "string",
            "required": true
          },
          {
            "name": "onChange",
            "type": "(value: string) => void",
            "required": true
          },
          {
            "name": "placeholder",
            "type": "string",
            "required": false
          },
          {
            "name": "className",
            "type": "string",
            "required": false
          }
        ],
        "category": "component"
      },
      {
        "name": "ServiceCardProps",
        "filePath": "/Users/rajatdhanda/Tech/Projects/ai-observer/test-projects/streax/src/components/core/service-card.tsx",
        "properties": [
          {
            "name": "icon",
            "type": "ReactNode",
            "required": true
          },
          {
            "name": "title",
            "type": "string",
            "required": true
          },
          {
            "name": "subtitle",
            "type": "string",
            "required": true
          },
          {
            "name": "onClick",
            "type": "() => void",
            "required": false
          }
        ],
        "category": "component"
      },
      {
        "name": "SheetProps",
        "filePath": "/Users/rajatdhanda/Tech/Projects/ai-observer/test-projects/streax/src/components/core/sheet.tsx",
        "properties": [
          {
            "name": "isOpen",
            "type": "boolean",
            "required": true
          },
          {
            "name": "onClose",
            "type": "() => void",
            "required": true
          },
          {
            "name": "variant",
            "type": "'bottom' | 'center' | 'full'",
            "required": false
          },
          {
            "name": "title",
            "type": "string",
            "required": false
          },
          {
            "name": "children",
            "type": "React.ReactNode",
            "required": true
          },
          {
            "name": "showHandle",
            "type": "boolean",
            "required": false
          },
          {
            "name": "closeOnOverlay",
            "type": "boolean",
            "required": false
          },
          {
            "name": "className",
            "type": "string",
            "required": false
          }
        ],
        "category": "component"
      },
      {
        "name": "SkeletonProps",
        "filePath": "/Users/rajatdhanda/Tech/Projects/ai-observer/test-projects/streax/src/components/core/skeleton.tsx",
        "properties": [
          {
            "name": "variant",
            "type": "'text' | 'circular' | 'rectangular' | 'card'",
            "required": false
          },
          {
            "name": "width",
            "type": "string | number",
            "required": false
          },
          {
            "name": "height",
            "type": "string | number",
            "required": false
          },
          {
            "name": "lines",
            "type": "number",
            "required": false
          },
          {
            "name": "className",
            "type": "string",
            "required": false
          },
          {
            "name": "animate",
            "type": "boolean",
            "required": false
          }
        ],
        "category": "component"
      },
      {
        "name": "StatsCardProps",
        "filePath": "/Users/rajatdhanda/Tech/Projects/ai-observer/test-projects/streax/src/components/core/stats-card.tsx",
        "properties": [
          {
            "name": "value",
            "type": "string | number",
            "required": true
          },
          {
            "name": "label",
            "type": "string",
            "required": true
          },
          {
            "name": "highlighted",
            "type": "boolean",
            "required": false
          },
          {
            "name": "prefix",
            "type": "string",
            "required": false
          }
        ],
        "category": "component"
      },
      {
        "name": "Tab",
        "filePath": "/Users/rajatdhanda/Tech/Projects/ai-observer/test-projects/streax/src/components/core/tabs.tsx",
        "properties": [
          {
            "name": "id",
            "type": "string",
            "required": true
          },
          {
            "name": "label",
            "type": "string",
            "required": true
          },
          {
            "name": "content",
            "type": "ReactNode",
            "required": false
          }
        ],
        "category": "component"
      },
      {
        "name": "TabsProps",
        "filePath": "/Users/rajatdhanda/Tech/Projects/ai-observer/test-projects/streax/src/components/core/tabs.tsx",
        "properties": [
          {
            "name": "tabs",
            "type": "Tab[]",
            "required": true
          },
          {
            "name": "activeTab",
            "type": "string",
            "required": true
          },
          {
            "name": "onTabChange",
            "type": "(tabId: string) => void",
            "required": true
          },
          {
            "name": "className",
            "type": "string",
            "required": false
          }
        ],
        "category": "component"
      },
      {
        "name": "Professional",
        "filePath": "/Users/rajatdhanda/Tech/Projects/ai-observer/test-projects/streax/src/types/database.types.ts",
        "properties": [
          {
            "name": "id",
            "type": "string",
            "required": true
          },
          {
            "name": "email",
            "type": "string",
            "required": true
          },
          {
            "name": "phone",
            "type": "string",
            "required": true
          },
          {
            "name": "created_at",
            "type": "string",
            "required": true
          },
          {
            "name": "updated_at",
            "type": "string",
            "required": true
          },
          {
            "name": "name",
            "type": "string",
            "required": true
          },
          {
            "name": "username",
            "type": "string",
            "required": true
          },
          {
            "name": "avatar_url",
            "type": "string",
            "required": false
          },
          {
            "name": "bio",
            "type": "string",
            "required": false
          },
          {
            "name": "location",
            "type": "string",
            "required": true
          },
          {
            "name": "profession_type",
            "type": "'hair_stylist' | 'colorist' | 'beautician' | 'makeup_artist' | 'salon_owner' | 'salon_manager'",
            "required": true
          },
          {
            "name": "salon_name",
            "type": "string",
            "required": false
          },
          {
            "name": "years_of_experience",
            "type": "number",
            "required": false
          },
          {
            "name": "specializations",
            "type": "string[]",
            "required": false
          },
          {
            "name": "is_verified",
            "type": "boolean",
            "required": true
          },
          {
            "name": "verification_date",
            "type": "string",
            "required": false
          },
          {
            "name": "verification_type",
            "type": "'government_id' | 'professional_license' | 'salon_verification'",
            "required": false
          },
          {
            "name": "is_active",
            "type": "boolean",
            "required": true
          },
          {
            "name": "last_active_at",
            "type": "string",
            "required": false
          },
          {
            "name": "notification_preferences",
            "type": "{\n    push_enabled: boolean;\n    email_enabled: boolean;\n    sms_enabled: boolean;\n    marketing_enabled: boolean;\n  }",
            "required": false
          }
        ],
        "category": "database"
      },
      {
        "name": "Post",
        "filePath": "/Users/rajatdhanda/Tech/Projects/ai-observer/test-projects/streax/src/types/database.types.ts",
        "properties": [
          {
            "name": "id",
            "type": "string",
            "required": true
          },
          {
            "name": "professional_id",
            "type": "string",
            "required": true
          },
          {
            "name": "created_at",
            "type": "string",
            "required": true
          },
          {
            "name": "updated_at",
            "type": "string",
            "required": true
          },
          {
            "name": "content",
            "type": "string",
            "required": true
          },
          {
            "name": "media_urls",
            "type": "string[]",
            "required": false
          },
          {
            "name": "media_type",
            "type": "'image' | 'video' | 'gallery'",
            "required": false
          },
          {
            "name": "hashtags",
            "type": "string[]",
            "required": false
          },
          {
            "name": "mentioned_users",
            "type": "string[]",
            "required": false
          },
          {
            "name": "likes_count",
            "type": "number",
            "required": true
          },
          {
            "name": "comments_count",
            "type": "number",
            "required": true
          },
          {
            "name": "shares_count",
            "type": "number",
            "required": true
          },
          {
            "name": "saves_count",
            "type": "number",
            "required": true
          },
          {
            "name": "views_count",
            "type": "number",
            "required": true
          },
          {
            "name": "post_type",
            "type": "'regular' | 'transformation' | 'technique' | 'question' | 'announcement'",
            "required": true
          },
          {
            "name": "is_pinned",
            "type": "boolean",
            "required": true
          },
          {
            "name": "is_archived",
            "type": "boolean",
            "required": true
          },
          {
            "name": "visibility",
            "type": "'public' | 'followers' | 'private'",
            "required": true
          }
        ],
        "category": "database"
      },
      {
        "name": "PostEngagement",
        "filePath": "/Users/rajatdhanda/Tech/Projects/ai-observer/test-projects/streax/src/types/database.types.ts",
        "properties": [
          {
            "name": "id",
            "type": "string",
            "required": true
          },
          {
            "name": "post_id",
            "type": "string",
            "required": true
          },
          {
            "name": "professional_id",
            "type": "string",
            "required": true
          },
          {
            "name": "engagement_type",
            "type": "'like' | 'save' | 'share'",
            "required": true
          },
          {
            "name": "created_at",
            "type": "string",
            "required": true
          }
        ],
        "category": "database"
      },
      {
        "name": "Comment",
        "filePath": "/Users/rajatdhanda/Tech/Projects/ai-observer/test-projects/streax/src/types/database.types.ts",
        "properties": [
          {
            "name": "id",
            "type": "string",
            "required": true
          },
          {
            "name": "post_id",
            "type": "string",
            "required": true
          },
          {
            "name": "professional_id",
            "type": "string",
            "required": true
          },
          {
            "name": "parent_comment_id",
            "type": "string",
            "required": false
          },
          {
            "name": "content",
            "type": "string",
            "required": true
          },
          {
            "name": "created_at",
            "type": "string",
            "required": true
          },
          {
            "name": "updated_at",
            "type": "string",
            "required": true
          },
          {
            "name": "likes_count",
            "type": "number",
            "required": true
          },
          {
            "name": "is_edited",
            "type": "boolean",
            "required": true
          }
        ],
        "category": "database"
      },
      {
        "name": "LiveSession",
        "filePath": "/Users/rajatdhanda/Tech/Projects/ai-observer/test-projects/streax/src/types/database.types.ts",
        "properties": [
          {
            "name": "id",
            "type": "string",
            "required": true
          },
          {
            "name": "host_professional_id",
            "type": "string",
            "required": true
          },
          {
            "name": "created_at",
            "type": "string",
            "required": true
          },
          {
            "name": "started_at",
            "type": "string",
            "required": false
          },
          {
            "name": "ended_at",
            "type": "string",
            "required": false
          },
          {
            "name": "title",
            "type": "string",
            "required": true
          },
          {
            "name": "description",
            "type": "string",
            "required": true
          },
          {
            "name": "thumbnail_url",
            "type": "string",
            "required": false
          },
          {
            "name": "stream_url",
            "type": "string",
            "required": false
          },
          {
            "name": "session_type",
            "type": "'training' | 'demo' | 'q&a' | 'workshop'",
            "required": true
          },
          {
            "name": "category",
            "type": "'coloring' | 'cutting' | 'styling' | 'business' | 'products'",
            "required": true
          },
          {
            "name": "viewer_count",
            "type": "number",
            "required": true
          },
          {
            "name": "max_viewers",
            "type": "number",
            "required": true
          },
          {
            "name": "registered_users",
            "type": "string[]",
            "required": false
          },
          {
            "name": "status",
            "type": "'scheduled' | 'live' | 'ended' | 'cancelled'",
            "required": true
          },
          {
            "name": "is_featured",
            "type": "boolean",
            "required": true
          },
          {
            "name": "recording_url",
            "type": "string",
            "required": false
          },
          {
            "name": "provides_certificate",
            "type": "boolean",
            "required": true
          },
          {
            "name": "certificate_requirements",
            "type": "string",
            "required": false
          }
        ],
        "category": "database"
      },
      {
        "name": "Product",
        "filePath": "/Users/rajatdhanda/Tech/Projects/ai-observer/test-projects/streax/src/types/database.types.ts",
        "properties": [
          {
            "name": "id",
            "type": "string",
            "required": true
          },
          {
            "name": "created_at",
            "type": "string",
            "required": true
          },
          {
            "name": "updated_at",
            "type": "string",
            "required": true
          },
          {
            "name": "name",
            "type": "string",
            "required": true
          },
          {
            "name": "description",
            "type": "string",
            "required": true
          },
          {
            "name": "category",
            "type": "'hair_color' | 'tools' | 'care' | 'styling' | 'treatment'",
            "required": true
          },
          {
            "name": "sub_category",
            "type": "string",
            "required": false
          },
          {
            "name": "brand",
            "type": "string",
            "required": true
          },
          {
            "name": "sku",
            "type": "string",
            "required": true
          },
          {
            "name": "mrp",
            "type": "number",
            "required": true
          },
          {
            "name": "professional_price",
            "type": "number",
            "required": true
          },
          {
            "name": "bulk_price",
            "type": "number",
            "required": false
          },
          {
            "name": "bulk_minimum_quantity",
            "type": "number",
            "required": false
          },
          {
            "name": "currency",
            "type": "'INR'",
            "required": true
          },
          {
            "name": "image_urls",
            "type": "string[]",
            "required": true
          },
          {
            "name": "video_url",
            "type": "string",
            "required": false
          },
          {
            "name": "stock_quantity",
            "type": "number",
            "required": true
          },
          {
            "name": "is_in_stock",
            "type": "boolean",
            "required": true
          },
          {
            "name": "restock_date",
            "type": "string",
            "required": false
          },
          {
            "name": "rating",
            "type": "number",
            "required": true
          },
          {
            "name": "reviews_count",
            "type": "number",
            "required": true
          },
          {
            "name": "is_active",
            "type": "boolean",
            "required": true
          },
          {
            "name": "is_featured",
            "type": "boolean",
            "required": true
          },
          {
            "name": "tags",
            "type": "string[]",
            "required": false
          }
        ],
        "category": "database"
      },
      {
        "name": "Order",
        "filePath": "/Users/rajatdhanda/Tech/Projects/ai-observer/test-projects/streax/src/types/database.types.ts",
        "properties": [
          {
            "name": "id",
            "type": "string",
            "required": true
          },
          {
            "name": "professional_id",
            "type": "string",
            "required": true
          },
          {
            "name": "created_at",
            "type": "string",
            "required": true
          },
          {
            "name": "updated_at",
            "type": "string",
            "required": true
          },
          {
            "name": "order_number",
            "type": "string",
            "required": true
          },
          {
            "name": "order_date",
            "type": "string",
            "required": true
          },
          {
            "name": "total_amount",
            "type": "number",
            "required": true
          },
          {
            "name": "tax_amount",
            "type": "number",
            "required": true
          },
          {
            "name": "discount_amount",
            "type": "number",
            "required": true
          },
          {
            "name": "final_amount",
            "type": "number",
            "required": true
          },
          {
            "name": "currency",
            "type": "'INR'",
            "required": true
          },
          {
            "name": "status",
            "type": "'pending' | 'confirmed' | 'processing' | 'shipped' | 'delivered' | 'cancelled' | 'returned'",
            "required": true
          },
          {
            "name": "payment_status",
            "type": "'pending' | 'paid' | 'failed' | 'refunded'",
            "required": true
          },
          {
            "name": "payment_method",
            "type": "'card' | 'upi' | 'netbanking' | 'cod' | 'wallet'",
            "required": true
          },
          {
            "name": "shipping_address",
            "type": "Address",
            "required": true
          },
          {
            "name": "billing_address",
            "type": "Address",
            "required": false
          },
          {
            "name": "tracking_number",
            "type": "string",
            "required": false
          },
          {
            "name": "expected_delivery",
            "type": "string",
            "required": false
          },
          {
            "name": "delivered_at",
            "type": "string",
            "required": false
          }
        ],
        "category": "database"
      },
      {
        "name": "OrderItem",
        "filePath": "/Users/rajatdhanda/Tech/Projects/ai-observer/test-projects/streax/src/types/database.types.ts",
        "properties": [
          {
            "name": "id",
            "type": "string",
            "required": true
          },
          {
            "name": "order_id",
            "type": "string",
            "required": true
          },
          {
            "name": "product_id",
            "type": "string",
            "required": true
          },
          {
            "name": "quantity",
            "type": "number",
            "required": true
          },
          {
            "name": "unit_price",
            "type": "number",
            "required": true
          },
          {
            "name": "total_price",
            "type": "number",
            "required": true
          },
          {
            "name": "discount_amount",
            "type": "number",
            "required": true
          }
        ],
        "category": "database"
      },
      {
        "name": "InsurancePolicy",
        "filePath": "/Users/rajatdhanda/Tech/Projects/ai-observer/test-projects/streax/src/types/database.types.ts",
        "properties": [
          {
            "name": "id",
            "type": "string",
            "required": true
          },
          {
            "name": "professional_id",
            "type": "string",
            "required": true
          },
          {
            "name": "created_at",
            "type": "string",
            "required": true
          },
          {
            "name": "updated_at",
            "type": "string",
            "required": true
          },
          {
            "name": "policy_number",
            "type": "string",
            "required": true
          },
          {
            "name": "policy_type",
            "type": "'health' | 'accident' | 'life'",
            "required": true
          },
          {
            "name": "provider",
            "type": "string",
            "required": true
          },
          {
            "name": "coverage_amount",
            "type": "number",
            "required": true
          },
          {
            "name": "premium_amount",
            "type": "number",
            "required": true
          },
          {
            "name": "start_date",
            "type": "string",
            "required": true
          },
          {
            "name": "end_date",
            "type": "string",
            "required": true
          },
          {
            "name": "next_premium_date",
            "type": "string",
            "required": false
          },
          {
            "name": "status",
            "type": "'active' | 'expired' | 'cancelled' | 'pending'",
            "required": true
          },
          {
            "name": "policy_document_url",
            "type": "string",
            "required": false
          },
          {
            "name": "id_card_url",
            "type": "string",
            "required": false
          }
        ],
        "category": "database"
      },
      {
        "name": "InsuranceClaim",
        "filePath": "/Users/rajatdhanda/Tech/Projects/ai-observer/test-projects/streax/src/types/database.types.ts",
        "properties": [
          {
            "name": "id",
            "type": "string",
            "required": true
          },
          {
            "name": "policy_id",
            "type": "string",
            "required": true
          },
          {
            "name": "professional_id",
            "type": "string",
            "required": true
          },
          {
            "name": "created_at",
            "type": "string",
            "required": true
          },
          {
            "name": "updated_at",
            "type": "string",
            "required": true
          },
          {
            "name": "claim_number",
            "type": "string",
            "required": true
          },
          {
            "name": "claim_type",
            "type": "'medical_checkup' | 'hospitalization' | 'accident' | 'other'",
            "required": true
          },
          {
            "name": "claim_amount",
            "type": "number",
            "required": true
          },
          {
            "name": "approved_amount",
            "type": "number",
            "required": false
          },
          {
            "name": "status",
            "type": "'pending' | 'approved' | 'rejected' | 'processing' | 'paid'",
            "required": true
          },
          {
            "name": "submitted_date",
            "type": "string",
            "required": true
          },
          {
            "name": "processed_date",
            "type": "string",
            "required": false
          },
          {
            "name": "document_urls",
            "type": "string[]",
            "required": false
          },
          {
            "name": "remarks",
            "type": "string",
            "required": false
          }
        ],
        "category": "database"
      },
      {
        "name": "Client",
        "filePath": "/Users/rajatdhanda/Tech/Projects/ai-observer/test-projects/streax/src/types/database.types.ts",
        "properties": [
          {
            "name": "id",
            "type": "string",
            "required": true
          },
          {
            "name": "professional_id",
            "type": "string",
            "required": true
          },
          {
            "name": "created_at",
            "type": "string",
            "required": true
          },
          {
            "name": "updated_at",
            "type": "string",
            "required": true
          },
          {
            "name": "name",
            "type": "string",
            "required": true
          },
          {
            "name": "phone",
            "type": "string",
            "required": true
          },
          {
            "name": "email",
            "type": "string",
            "required": false
          },
          {
            "name": "date_of_birth",
            "type": "string",
            "required": false
          },
          {
            "name": "gender",
            "type": "'male' | 'female' | 'other'",
            "required": false
          },
          {
            "name": "preferred_services",
            "type": "string[]",
            "required": false
          },
          {
            "name": "allergies",
            "type": "string[]",
            "required": false
          },
          {
            "name": "notes",
            "type": "string",
            "required": false
          },
          {
            "name": "first_visit_date",
            "type": "string",
            "required": true
          },
          {
            "name": "last_visit_date",
            "type": "string",
            "required": true
          },
          {
            "name": "total_visits",
            "type": "number",
            "required": true
          },
          {
            "name": "total_spent",
            "type": "number",
            "required": true
          },
          {
            "name": "average_ticket_size",
            "type": "number",
            "required": true
          },
          {
            "name": "tags",
            "type": "string[]",
            "required": false
          },
          {
            "name": "is_active",
            "type": "boolean",
            "required": true
          },
          {
            "name": "loyalty_tier",
            "type": "'bronze' | 'silver' | 'gold' | 'platinum'",
            "required": false
          }
        ],
        "category": "database"
      },
      {
        "name": "Appointment",
        "filePath": "/Users/rajatdhanda/Tech/Projects/ai-observer/test-projects/streax/src/types/database.types.ts",
        "properties": [
          {
            "name": "id",
            "type": "string",
            "required": true
          },
          {
            "name": "professional_id",
            "type": "string",
            "required": true
          },
          {
            "name": "client_id",
            "type": "string",
            "required": true
          },
          {
            "name": "created_at",
            "type": "string",
            "required": true
          },
          {
            "name": "updated_at",
            "type": "string",
            "required": true
          },
          {
            "name": "appointment_date",
            "type": "string",
            "required": true
          },
          {
            "name": "start_time",
            "type": "string",
            "required": true
          },
          {
            "name": "end_time",
            "type": "string",
            "required": true
          },
          {
            "name": "duration_minutes",
            "type": "number",
            "required": true
          },
          {
            "name": "services",
            "type": "ServiceItem[]",
            "required": true
          },
          {
            "name": "total_amount",
            "type": "number",
            "required": true
          },
          {
            "name": "status",
            "type": "'scheduled' | 'confirmed' | 'in_progress' | 'completed' | 'cancelled' | 'no_show'",
            "required": true
          },
          {
            "name": "payment_status",
            "type": "'pending' | 'paid' | 'partial'",
            "required": true
          },
          {
            "name": "notes",
            "type": "string",
            "required": false
          },
          {
            "name": "before_image_urls",
            "type": "string[]",
            "required": false
          },
          {
            "name": "after_image_urls",
            "type": "string[]",
            "required": false
          }
        ],
        "category": "database"
      },
      {
        "name": "ServiceItem",
        "filePath": "/Users/rajatdhanda/Tech/Projects/ai-observer/test-projects/streax/src/types/database.types.ts",
        "properties": [
          {
            "name": "id",
            "type": "string",
            "required": true
          },
          {
            "name": "name",
            "type": "string",
            "required": true
          },
          {
            "name": "category",
            "type": "'hair_color' | 'cut_style' | 'treatment' | 'makeup' | 'other'",
            "required": true
          },
          {
            "name": "price",
            "type": "number",
            "required": true
          },
          {
            "name": "duration_minutes",
            "type": "number",
            "required": true
          }
        ],
        "category": "database"
      },
      {
        "name": "Course",
        "filePath": "/Users/rajatdhanda/Tech/Projects/ai-observer/test-projects/streax/src/types/database.types.ts",
        "properties": [
          {
            "name": "id",
            "type": "string",
            "required": true
          },
          {
            "name": "created_at",
            "type": "string",
            "required": true
          },
          {
            "name": "updated_at",
            "type": "string",
            "required": true
          },
          {
            "name": "title",
            "type": "string",
            "required": true
          },
          {
            "name": "description",
            "type": "string",
            "required": true
          },
          {
            "name": "instructor_name",
            "type": "string",
            "required": true
          },
          {
            "name": "instructor_id",
            "type": "string",
            "required": false
          },
          {
            "name": "category",
            "type": "'color' | 'cutting' | 'styling' | 'business' | 'products'",
            "required": true
          },
          {
            "name": "difficulty_level",
            "type": "'beginner' | 'intermediate' | 'advanced'",
            "required": true
          },
          {
            "name": "duration_minutes",
            "type": "number",
            "required": true
          },
          {
            "name": "video_url",
            "type": "string",
            "required": false
          },
          {
            "name": "thumbnail_url",
            "type": "string",
            "required": false
          },
          {
            "name": "materials",
            "type": "string[]",
            "required": false
          },
          {
            "name": "rating",
            "type": "number",
            "required": true
          },
          {
            "name": "enrollments_count",
            "type": "number",
            "required": true
          },
          {
            "name": "completion_rate",
            "type": "number",
            "required": true
          },
          {
            "name": "provides_certificate",
            "type": "boolean",
            "required": true
          },
          {
            "name": "certificate_requirements",
            "type": "string",
            "required": false
          },
          {
            "name": "is_published",
            "type": "boolean",
            "required": true
          },
          {
            "name": "is_featured",
            "type": "boolean",
            "required": true
          },
          {
            "name": "price",
            "type": "number",
            "required": false
          }
        ],
        "category": "database"
      },
      {
        "name": "CourseEnrollment",
        "filePath": "/Users/rajatdhanda/Tech/Projects/ai-observer/test-projects/streax/src/types/database.types.ts",
        "properties": [
          {
            "name": "id",
            "type": "string",
            "required": true
          },
          {
            "name": "course_id",
            "type": "string",
            "required": true
          },
          {
            "name": "professional_id",
            "type": "string",
            "required": true
          },
          {
            "name": "enrolled_at",
            "type": "string",
            "required": true
          },
          {
            "name": "progress_percentage",
            "type": "number",
            "required": true
          },
          {
            "name": "last_accessed_at",
            "type": "string",
            "required": false
          },
          {
            "name": "completed_at",
            "type": "string",
            "required": false
          },
          {
            "name": "certificate_issued",
            "type": "boolean",
            "required": true
          },
          {
            "name": "certificate_url",
            "type": "string",
            "required": false
          },
          {
            "name": "certificate_issued_at",
            "type": "string",
            "required": false
          },
          {
            "name": "rating",
            "type": "number",
            "required": false
          },
          {
            "name": "review",
            "type": "string",
            "required": false
          }
        ],
        "category": "database"
      },
      {
        "name": "Address",
        "filePath": "/Users/rajatdhanda/Tech/Projects/ai-observer/test-projects/streax/src/types/database.types.ts",
        "properties": [
          {
            "name": "line1",
            "type": "string",
            "required": true
          },
          {
            "name": "line2",
            "type": "string",
            "required": false
          },
          {
            "name": "city",
            "type": "string",
            "required": true
          },
          {
            "name": "state",
            "type": "string",
            "required": true
          },
          {
            "name": "pincode",
            "type": "string",
            "required": true
          },
          {
            "name": "country",
            "type": "string",
            "required": true
          },
          {
            "name": "landmark",
            "type": "string",
            "required": false
          }
        ],
        "category": "database"
      },
      {
        "name": "Notification",
        "filePath": "/Users/rajatdhanda/Tech/Projects/ai-observer/test-projects/streax/src/types/database.types.ts",
        "properties": [
          {
            "name": "id",
            "type": "string",
            "required": true
          },
          {
            "name": "professional_id",
            "type": "string",
            "required": true
          },
          {
            "name": "created_at",
            "type": "string",
            "required": true
          },
          {
            "name": "title",
            "type": "string",
            "required": true
          },
          {
            "name": "message",
            "type": "string",
            "required": true
          },
          {
            "name": "type",
            "type": "'post_like' | 'comment' | 'follow' | 'order' | 'insurance' | 'appointment' | 'course' | 'system'",
            "required": true
          },
          {
            "name": "reference_id",
            "type": "string",
            "required": false
          },
          {
            "name": "reference_type",
            "type": "string",
            "required": false
          },
          {
            "name": "is_read",
            "type": "boolean",
            "required": true
          },
          {
            "name": "read_at",
            "type": "string",
            "required": false
          },
          {
            "name": "action_url",
            "type": "string",
            "required": false
          }
        ],
        "category": "database"
      },
      {
        "name": "Analytics",
        "filePath": "/Users/rajatdhanda/Tech/Projects/ai-observer/test-projects/streax/src/types/database.types.ts",
        "properties": [
          {
            "name": "id",
            "type": "string",
            "required": true
          },
          {
            "name": "professional_id",
            "type": "string",
            "required": true
          },
          {
            "name": "date",
            "type": "string",
            "required": true
          },
          {
            "name": "profile_views",
            "type": "number",
            "required": true
          },
          {
            "name": "post_views",
            "type": "number",
            "required": true
          },
          {
            "name": "post_engagement_rate",
            "type": "number",
            "required": true
          },
          {
            "name": "clients_served",
            "type": "number",
            "required": true
          },
          {
            "name": "revenue",
            "type": "number",
            "required": true
          },
          {
            "name": "average_ticket_size",
            "type": "number",
            "required": true
          },
          {
            "name": "new_followers",
            "type": "number",
            "required": true
          },
          {
            "name": "new_clients",
            "type": "number",
            "required": true
          },
          {
            "name": "retention_rate",
            "type": "number",
            "required": true
          }
        ],
        "category": "database"
      },
      {
        "name": "User",
        "filePath": "/Users/rajatdhanda/Tech/Projects/ai-observer/test-projects/streax/src/types/models.ts",
        "properties": [
          {
            "name": "id",
            "type": "string",
            "required": true
          },
          {
            "name": "email",
            "type": "string",
            "required": true
          },
          {
            "name": "name",
            "type": "string",
            "required": true
          },
          {
            "name": "username",
            "type": "string",
            "required": true
          },
          {
            "name": "avatar",
            "type": "string",
            "required": false
          },
          {
            "name": "bio",
            "type": "string",
            "required": false
          },
          {
            "name": "location",
            "type": "string",
            "required": false
          },
          {
            "name": "isVerified",
            "type": "boolean",
            "required": true
          },
          {
            "name": "profession",
            "type": "'stylist' | 'colorist' | 'beautician' | 'salon_owner' | 'makeup_artist'",
            "required": true
          },
          {
            "name": "createdAt",
            "type": "string",
            "required": true
          }
        ],
        "category": "database"
      },
      {
        "name": "Post",
        "filePath": "/Users/rajatdhanda/Tech/Projects/ai-observer/test-projects/streax/src/types/models.ts",
        "properties": [
          {
            "name": "id",
            "type": "string",
            "required": true
          },
          {
            "name": "userId",
            "type": "string",
            "required": true
          },
          {
            "name": "user",
            "type": "User",
            "required": false
          },
          {
            "name": "content",
            "type": "string",
            "required": true
          },
          {
            "name": "images",
            "type": "string[]",
            "required": false
          },
          {
            "name": "video",
            "type": "string",
            "required": false
          },
          {
            "name": "likes",
            "type": "number",
            "required": true
          },
          {
            "name": "likedByMe",
            "type": "boolean",
            "required": false
          },
          {
            "name": "comments",
            "type": "number",
            "required": true
          },
          {
            "name": "shares",
            "type": "number",
            "required": true
          },
          {
            "name": "saves",
            "type": "number",
            "required": true
          },
          {
            "name": "tags",
            "type": "string[]",
            "required": false
          },
          {
            "name": "createdAt",
            "type": "string",
            "required": true
          },
          {
            "name": "updatedAt",
            "type": "string",
            "required": true
          }
        ],
        "category": "database"
      },
      {
        "name": "Comment",
        "filePath": "/Users/rajatdhanda/Tech/Projects/ai-observer/test-projects/streax/src/types/models.ts",
        "properties": [
          {
            "name": "id",
            "type": "string",
            "required": true
          },
          {
            "name": "postId",
            "type": "string",
            "required": true
          },
          {
            "name": "userId",
            "type": "string",
            "required": true
          },
          {
            "name": "user",
            "type": "User",
            "required": false
          },
          {
            "name": "content",
            "type": "string",
            "required": true
          },
          {
            "name": "likes",
            "type": "number",
            "required": true
          },
          {
            "name": "createdAt",
            "type": "string",
            "required": true
          }
        ],
        "category": "database"
      },
      {
        "name": "LiveSession",
        "filePath": "/Users/rajatdhanda/Tech/Projects/ai-observer/test-projects/streax/src/types/models.ts",
        "properties": [
          {
            "name": "id",
            "type": "string",
            "required": true
          },
          {
            "name": "title",
            "type": "string",
            "required": true
          },
          {
            "name": "description",
            "type": "string",
            "required": true
          },
          {
            "name": "instructorId",
            "type": "string",
            "required": true
          },
          {
            "name": "instructor",
            "type": "User",
            "required": false
          },
          {
            "name": "thumbnailUrl",
            "type": "string",
            "required": false
          },
          {
            "name": "isLive",
            "type": "boolean",
            "required": true
          },
          {
            "name": "viewerCount",
            "type": "number",
            "required": true
          },
          {
            "name": "startTime",
            "type": "string",
            "required": true
          },
          {
            "name": "endTime",
            "type": "string",
            "required": false
          },
          {
            "name": "category",
            "type": "'coloring' | 'cutting' | 'styling' | 'business'",
            "required": true
          }
        ],
        "category": "database"
      },
      {
        "name": "Product",
        "filePath": "/Users/rajatdhanda/Tech/Projects/ai-observer/test-projects/streax/src/types/models.ts",
        "properties": [
          {
            "name": "id",
            "type": "string",
            "required": true
          },
          {
            "name": "name",
            "type": "string",
            "required": true
          },
          {
            "name": "description",
            "type": "string",
            "required": true
          },
          {
            "name": "category",
            "type": "'hair_color' | 'tools' | 'care' | 'styling'",
            "required": true
          },
          {
            "name": "price",
            "type": "number",
            "required": true
          },
          {
            "name": "professionalPrice",
            "type": "number",
            "required": true
          },
          {
            "name": "imageUrl",
            "type": "string",
            "required": true
          },
          {
            "name": "inStock",
            "type": "boolean",
            "required": true
          },
          {
            "name": "stockCount",
            "type": "number",
            "required": false
          },
          {
            "name": "rating",
            "type": "number",
            "required": false
          },
          {
            "name": "reviewCount",
            "type": "number",
            "required": false
          }
        ],
        "category": "database"
      },
      {
        "name": "CartItem",
        "filePath": "/Users/rajatdhanda/Tech/Projects/ai-observer/test-projects/streax/src/types/models.ts",
        "properties": [
          {
            "name": "productId",
            "type": "string",
            "required": true
          },
          {
            "name": "product",
            "type": "Product",
            "required": false
          },
          {
            "name": "quantity",
            "type": "number",
            "required": true
          },
          {
            "name": "price",
            "type": "number",
            "required": true
          }
        ],
        "category": "database"
      },
      {
        "name": "Order",
        "filePath": "/Users/rajatdhanda/Tech/Projects/ai-observer/test-projects/streax/src/types/models.ts",
        "properties": [
          {
            "name": "id",
            "type": "string",
            "required": true
          },
          {
            "name": "userId",
            "type": "string",
            "required": true
          },
          {
            "name": "items",
            "type": "OrderItem[]",
            "required": true
          },
          {
            "name": "status",
            "type": "'pending' | 'confirmed' | 'shipped' | 'delivered' | 'cancelled'",
            "required": true
          },
          {
            "name": "totalAmount",
            "type": "number",
            "required": true
          },
          {
            "name": "shippingAddress",
            "type": "string",
            "required": true
          },
          {
            "name": "paymentMethod",
            "type": "string",
            "required": true
          },
          {
            "name": "createdAt",
            "type": "string",
            "required": true
          },
          {
            "name": "updatedAt",
            "type": "string",
            "required": true
          }
        ],
        "category": "database"
      },
      {
        "name": "OrderItem",
        "filePath": "/Users/rajatdhanda/Tech/Projects/ai-observer/test-projects/streax/src/types/models.ts",
        "properties": [
          {
            "name": "productId",
            "type": "string",
            "required": true
          },
          {
            "name": "product",
            "type": "Product",
            "required": false
          },
          {
            "name": "quantity",
            "type": "number",
            "required": true
          },
          {
            "name": "price",
            "type": "number",
            "required": true
          }
        ],
        "category": "database"
      },
      {
        "name": "InsurancePolicy",
        "filePath": "/Users/rajatdhanda/Tech/Projects/ai-observer/test-projects/streax/src/types/models.ts",
        "properties": [
          {
            "name": "id",
            "type": "string",
            "required": true
          },
          {
            "name": "userId",
            "type": "string",
            "required": true
          },
          {
            "name": "policyNumber",
            "type": "string",
            "required": true
          },
          {
            "name": "coverage",
            "type": "number",
            "required": true
          },
          {
            "name": "premium",
            "type": "number",
            "required": true
          },
          {
            "name": "validFrom",
            "type": "string",
            "required": true
          },
          {
            "name": "validUntil",
            "type": "string",
            "required": true
          },
          {
            "name": "status",
            "type": "'active' | 'expired' | 'pending'",
            "required": true
          },
          {
            "name": "type",
            "type": "'health' | 'accident' | 'life'",
            "required": true
          }
        ],
        "category": "database"
      },
      {
        "name": "InsuranceClaim",
        "filePath": "/Users/rajatdhanda/Tech/Projects/ai-observer/test-projects/streax/src/types/models.ts",
        "properties": [
          {
            "name": "id",
            "type": "string",
            "required": true
          },
          {
            "name": "policyId",
            "type": "string",
            "required": true
          },
          {
            "name": "userId",
            "type": "string",
            "required": true
          },
          {
            "name": "claimNumber",
            "type": "string",
            "required": true
          },
          {
            "name": "amount",
            "type": "number",
            "required": true
          },
          {
            "name": "status",
            "type": "'pending' | 'approved' | 'rejected' | 'processing'",
            "required": true
          },
          {
            "name": "type",
            "type": "'medical' | 'accident' | 'other'",
            "required": true
          },
          {
            "name": "description",
            "type": "string",
            "required": true
          },
          {
            "name": "documents",
            "type": "string[]",
            "required": false
          },
          {
            "name": "submittedAt",
            "type": "string",
            "required": true
          },
          {
            "name": "processedAt",
            "type": "string",
            "required": false
          }
        ],
        "category": "database"
      },
      {
        "name": "Client",
        "filePath": "/Users/rajatdhanda/Tech/Projects/ai-observer/test-projects/streax/src/types/models.ts",
        "properties": [
          {
            "name": "id",
            "type": "string",
            "required": true
          },
          {
            "name": "userId",
            "type": "string",
            "required": true
          },
          {
            "name": "name",
            "type": "string",
            "required": true
          },
          {
            "name": "phone",
            "type": "string",
            "required": true
          },
          {
            "name": "email",
            "type": "string",
            "required": false
          },
          {
            "name": "avatar",
            "type": "string",
            "required": false
          },
          {
            "name": "lastVisit",
            "type": "string",
            "required": true
          },
          {
            "name": "totalVisits",
            "type": "number",
            "required": true
          },
          {
            "name": "totalSpent",
            "type": "number",
            "required": true
          },
          {
            "name": "preferredServices",
            "type": "string[]",
            "required": true
          },
          {
            "name": "notes",
            "type": "string",
            "required": false
          },
          {
            "name": "birthday",
            "type": "string",
            "required": false
          },
          {
            "name": "createdAt",
            "type": "string",
            "required": true
          },
          {
            "name": "updatedAt",
            "type": "string",
            "required": true
          }
        ],
        "category": "database"
      },
      {
        "name": "Appointment",
        "filePath": "/Users/rajatdhanda/Tech/Projects/ai-observer/test-projects/streax/src/types/models.ts",
        "properties": [
          {
            "name": "id",
            "type": "string",
            "required": true
          },
          {
            "name": "clientId",
            "type": "string",
            "required": true
          },
          {
            "name": "client",
            "type": "Client",
            "required": false
          },
          {
            "name": "userId",
            "type": "string",
            "required": true
          },
          {
            "name": "service",
            "type": "string",
            "required": true
          },
          {
            "name": "date",
            "type": "string",
            "required": true
          },
          {
            "name": "time",
            "type": "string",
            "required": true
          },
          {
            "name": "duration",
            "type": "number",
            "required": true
          },
          {
            "name": "price",
            "type": "number",
            "required": true
          },
          {
            "name": "status",
            "type": "'scheduled' | 'completed' | 'cancelled' | 'no_show'",
            "required": true
          },
          {
            "name": "notes",
            "type": "string",
            "required": false
          }
        ],
        "category": "database"
      },
      {
        "name": "Course",
        "filePath": "/Users/rajatdhanda/Tech/Projects/ai-observer/test-projects/streax/src/types/models.ts",
        "properties": [
          {
            "name": "id",
            "type": "string",
            "required": true
          },
          {
            "name": "title",
            "type": "string",
            "required": true
          },
          {
            "name": "description",
            "type": "string",
            "required": true
          },
          {
            "name": "instructorId",
            "type": "string",
            "required": true
          },
          {
            "name": "instructor",
            "type": "User",
            "required": false
          },
          {
            "name": "thumbnailUrl",
            "type": "string",
            "required": true
          },
          {
            "name": "duration",
            "type": "number",
            "required": true
          },
          {
            "name": "category",
            "type": "'color' | 'cutting' | 'styling' | 'business' | 'trends'",
            "required": true
          },
          {
            "name": "difficulty",
            "type": "'beginner' | 'intermediate' | 'advanced'",
            "required": true
          },
          {
            "name": "rating",
            "type": "number",
            "required": true
          },
          {
            "name": "enrollments",
            "type": "number",
            "required": true
          },
          {
            "name": "hasCertificate",
            "type": "boolean",
            "required": true
          },
          {
            "name": "price",
            "type": "number",
            "required": true
          },
          {
            "name": "isPremium",
            "type": "boolean",
            "required": true
          },
          {
            "name": "createdAt",
            "type": "string",
            "required": true
          }
        ],
        "category": "database"
      },
      {
        "name": "CourseProgress",
        "filePath": "/Users/rajatdhanda/Tech/Projects/ai-observer/test-projects/streax/src/types/models.ts",
        "properties": [
          {
            "name": "id",
            "type": "string",
            "required": true
          },
          {
            "name": "courseId",
            "type": "string",
            "required": true
          },
          {
            "name": "userId",
            "type": "string",
            "required": true
          },
          {
            "name": "progress",
            "type": "number",
            "required": true
          },
          {
            "name": "completed",
            "type": "boolean",
            "required": true
          },
          {
            "name": "certificateUrl",
            "type": "string",
            "required": false
          },
          {
            "name": "startedAt",
            "type": "string",
            "required": true
          },
          {
            "name": "completedAt",
            "type": "string",
            "required": false
          }
        ],
        "category": "database"
      },
      {
        "name": "NavItem",
        "filePath": "/Users/rajatdhanda/Tech/Projects/ai-observer/test-projects/streax/src/types/models.ts",
        "properties": [
          {
            "name": "id",
            "type": "'feed' | 'orders' | 'insurance' | 'crm' | 'learning'",
            "required": true
          },
          {
            "name": "label",
            "type": "string",
            "required": true
          },
          {
            "name": "icon",
            "type": "string",
            "required": true
          },
          {
            "name": "badge",
            "type": "number",
            "required": false
          },
          {
            "name": "route",
            "type": "string",
            "required": true
          }
        ],
        "category": "database"
      },
      {
        "name": "ApiResponse",
        "filePath": "/Users/rajatdhanda/Tech/Projects/ai-observer/test-projects/streax/src/types/models.ts",
        "properties": [
          {
            "name": "data",
            "type": "T",
            "required": true
          },
          {
            "name": "error",
            "type": "string",
            "required": false
          },
          {
            "name": "message",
            "type": "string",
            "required": false
          }
        ],
        "category": "database"
      },
      {
        "name": "PaginatedResponse",
        "filePath": "/Users/rajatdhanda/Tech/Projects/ai-observer/test-projects/streax/src/types/models.ts",
        "properties": [
          {
            "name": "data",
            "type": "T[]",
            "required": true
          },
          {
            "name": "total",
            "type": "number",
            "required": true
          },
          {
            "name": "page",
            "type": "number",
            "required": true
          },
          {
            "name": "limit",
            "type": "number",
            "required": true
          },
          {
            "name": "hasMore",
            "type": "boolean",
            "required": true
          }
        ],
        "category": "database"
      }
    ],
    "types": [
      {
        "name": "SortOrder",
        "filePath": "/Users/rajatdhanda/Tech/Projects/ai-observer/test-projects/streax/src/types/models.ts",
        "category": "database"
      },
      {
        "name": "DateRange",
        "filePath": "/Users/rajatdhanda/Tech/Projects/ai-observer/test-projects/streax/src/types/models.ts",
        "category": "database"
      }
    ],
    "enums": [],
    "totalCount": 63,
    "files": [
      "next-env.d.ts",
      "next.config.ts",
      "src/app/(main)/crm/page.tsx",
      "src/app/(main)/feed/page.tsx",
      "src/app/(main)/insurance/page.tsx",
      "src/app/(main)/learning/page.tsx",
      "src/app/(main)/orders/page.tsx",
      "src/app/layout.tsx",
      "src/app/page.tsx",
      "src/app/test/page.tsx",
      "src/components/core/appointment-card.tsx",
      "src/components/core/avatar.tsx",
      "src/components/core/badge.tsx",
      "src/components/core/bottom-nav.tsx",
      "src/components/core/button.tsx",
      "src/components/core/card.tsx",
      "src/components/core/category-card.tsx",
      "src/components/core/client-card.tsx",
      "src/components/core/course-card.tsx",
      "src/components/core/image.tsx",
      "src/components/core/index.ts",
      "src/components/core/input.tsx",
      "src/components/core/list.tsx",
      "src/components/core/live-session-banner.tsx",
      "src/components/core/navbar.tsx",
      "src/components/core/page-header.tsx",
      "src/components/core/post-card.tsx",
      "src/components/core/post-composer.tsx",
      "src/components/core/product-card.tsx",
      "src/components/core/search-bar.tsx",
      "src/components/core/service-card.tsx",
      "src/components/core/sheet.tsx",
      "src/components/core/skeleton.tsx",
      "src/components/core/stats-card.tsx",
      "src/components/core/tabs.tsx",
      "src/components/index.ts",
      "src/hooks/useAuth.ts",
      "src/hooks/useClients.ts",
      "src/hooks/useFeed.ts",
      "src/hooks/useInsurance.ts",
      "src/hooks/useLearning.ts",
      "src/hooks/useProducts.ts",
      "src/lib/utils.ts",
      "src/mocks/data.ts",
      "src/types/database.types.ts",
      "src/types/models.ts",
      "tailwind.config.ts"
    ]
  },
  "dataFlow": {
    "layers": [
      {
        "name": "Database",
        "type": "database",
        "components": [
          "Professional",
          "Post",
          "PostEngagement",
          "Comment",
          "LiveSession",
          "Product",
          "Order",
          "OrderItem",
          "InsurancePolicy",
          "InsuranceClaim",
          "Client",
          "Appointment",
          "ServiceItem",
          "Course",
          "CourseEnrollment",
          "Address",
          "Notification",
          "Analytics",
          "User",
          "Post",
          "Comment",
          "LiveSession",
          "Product",
          "CartItem",
          "Order",
          "OrderItem",
          "InsurancePolicy",
          "InsuranceClaim",
          "Client",
          "Appointment",
          "Course",
          "CourseProgress",
          "NavItem",
          "ApiResponse",
          "PaginatedResponse"
        ]
      },
      {
        "name": "State Management",
        "type": "state",
        "components": [
          "useAuth",
          "useClients",
          "useFeed",
          "useInsurance",
          "useLearning",
          "useProducts"
        ]
      },
      {
        "name": "UI Components",
        "type": "ui",
        "components": [
          "appointment-card",
          "avatar",
          "badge",
          "bottom-nav",
          "button",
          "card",
          "category-card",
          "client-card",
          "course-card",
          "image",
          "input",
          "list",
          "live-session-banner",
          "navbar",
          "page-header",
          "post-card",
          "post-composer",
          "product-card",
          "search-bar",
          "service-card",
          "sheet",
          "skeleton",
          "stats-card",
          "tabs",
          "Home",
          "Home",
          "Home",
          "Home",
          "Home",
          "Home",
          "Home"
        ]
      }
    ],
    "connections": [
      {
        "from": "State.useAuth",
        "to": "UI",
        "dataType": "props",
        "method": "render"
      },
      {
        "from": "State.useClients",
        "to": "UI",
        "dataType": "props",
        "method": "render"
      },
      {
        "from": "State.useFeed",
        "to": "UI",
        "dataType": "props",
        "method": "render"
      },
      {
        "from": "State.useInsurance",
        "to": "UI",
        "dataType": "props",
        "method": "render"
      },
      {
        "from": "State.useLearning",
        "to": "UI",
        "dataType": "props",
        "method": "render"
      },
      {
        "from": "State.useProducts",
        "to": "UI",
        "dataType": "props",
        "method": "render"
      }
    ],
    "criticalPaths": [
      {
        "name": "Authentication",
        "steps": [
          "Login Form",
          "API Auth",
          "Session Storage",
          "Protected Routes"
        ],
        "importance": "high"
      },
      {
        "name": "Data Operations",
        "steps": [
          "UI Form",
          "Validation",
          "API Request",
          "Database Operation",
          "Response"
        ],
        "importance": "high"
      },
      {
        "name": "Page Rendering",
        "steps": [
          "Route Request",
          "Data Fetching",
          "Component Render",
          "Client Hydration"
        ],
        "importance": "medium"
      }
    ]
  },
  "entities": [
    {
      "name": "Professional",
      "type": "general",
      "properties": [
        {
          "name": "id",
          "type": "string",
          "required": true
        },
        {
          "name": "email",
          "type": "string",
          "required": true
        },
        {
          "name": "phone",
          "type": "string",
          "required": true
        },
        {
          "name": "created_at",
          "type": "string",
          "required": true
        },
        {
          "name": "updated_at",
          "type": "string",
          "required": true
        },
        {
          "name": "name",
          "type": "string",
          "required": true
        },
        {
          "name": "username",
          "type": "string",
          "required": true
        },
        {
          "name": "avatar_url",
          "type": "string",
          "required": false
        },
        {
          "name": "bio",
          "type": "string",
          "required": false
        },
        {
          "name": "location",
          "type": "string",
          "required": true
        },
        {
          "name": "profession_type",
          "type": "union",
          "required": true
        },
        {
          "name": "salon_name",
          "type": "string",
          "required": false
        },
        {
          "name": "years_of_experience",
          "type": "number",
          "required": false
        },
        {
          "name": "specializations",
          "type": "array",
          "required": false
        },
        {
          "name": "is_verified",
          "type": "boolean",
          "required": true
        },
        {
          "name": "verification_date",
          "type": "string",
          "required": false
        },
        {
          "name": "verification_type",
          "type": "union",
          "required": false
        },
        {
          "name": "is_active",
          "type": "boolean",
          "required": true
        },
        {
          "name": "last_active_at",
          "type": "string",
          "required": false
        },
        {
          "name": "notification_preferences",
          "type": "{\n    push_enabled: boolean;\n    email_enabled: boolean;\n    sms_enabled: boolean;\n    marketing_enabled: boolean;\n  }",
          "required": false
        }
      ],
      "relationships": [
        {
          "type": "hasMany",
          "entity": "Post"
        },
        {
          "type": "hasMany",
          "entity": "PostEngagement"
        },
        {
          "type": "hasMany",
          "entity": "Comment"
        },
        {
          "type": "hasMany",
          "entity": "Order"
        },
        {
          "type": "hasMany",
          "entity": "InsurancePolicy"
        },
        {
          "type": "hasMany",
          "entity": "InsuranceClaim"
        },
        {
          "type": "hasMany",
          "entity": "Client"
        },
        {
          "type": "hasMany",
          "entity": "Appointment"
        },
        {
          "type": "hasMany",
          "entity": "CourseEnrollment"
        },
        {
          "type": "hasMany",
          "entity": "Notification"
        },
        {
          "type": "hasMany",
          "entity": "Analytics"
        }
      ],
      "operations": [
        "createProfessional",
        "getProfessional",
        "updateProfessional",
        "deleteProfessional",
        "listProfessionals"
      ]
    },
    {
      "name": "Post",
      "type": "content",
      "properties": [
        {
          "name": "id",
          "type": "string",
          "required": true
        },
        {
          "name": "professional_id",
          "type": "string",
          "required": true
        },
        {
          "name": "created_at",
          "type": "string",
          "required": true
        },
        {
          "name": "updated_at",
          "type": "string",
          "required": true
        },
        {
          "name": "content",
          "type": "string",
          "required": true
        },
        {
          "name": "media_urls",
          "type": "array",
          "required": false
        },
        {
          "name": "media_type",
          "type": "union",
          "required": false
        },
        {
          "name": "hashtags",
          "type": "array",
          "required": false
        },
        {
          "name": "mentioned_users",
          "type": "array",
          "required": false
        },
        {
          "name": "likes_count",
          "type": "number",
          "required": true
        },
        {
          "name": "comments_count",
          "type": "number",
          "required": true
        },
        {
          "name": "shares_count",
          "type": "number",
          "required": true
        },
        {
          "name": "saves_count",
          "type": "number",
          "required": true
        },
        {
          "name": "views_count",
          "type": "number",
          "required": true
        },
        {
          "name": "post_type",
          "type": "union",
          "required": true
        },
        {
          "name": "is_pinned",
          "type": "boolean",
          "required": true
        },
        {
          "name": "is_archived",
          "type": "boolean",
          "required": true
        },
        {
          "name": "visibility",
          "type": "union",
          "required": true
        }
      ],
      "relationships": [
        {
          "type": "belongsTo",
          "entity": "Professional",
          "foreign_key": "professional_id"
        },
        {
          "type": "hasMany",
          "entity": "PostEngagement"
        },
        {
          "type": "hasMany",
          "entity": "Comment"
        }
      ],
      "operations": [
        "createPost",
        "getPost",
        "updatePost",
        "deletePost",
        "listPosts",
        "publish",
        "archive",
        "share"
      ]
    },
    {
      "name": "PostEngagement",
      "type": "content",
      "properties": [
        {
          "name": "id",
          "type": "string",
          "required": true
        },
        {
          "name": "post_id",
          "type": "string",
          "required": true
        },
        {
          "name": "professional_id",
          "type": "string",
          "required": true
        },
        {
          "name": "engagement_type",
          "type": "union",
          "required": true
        },
        {
          "name": "created_at",
          "type": "string",
          "required": true
        }
      ],
      "relationships": [
        {
          "type": "belongsTo",
          "entity": "Post",
          "foreign_key": "post_id"
        },
        {
          "type": "belongsTo",
          "entity": "Professional",
          "foreign_key": "professional_id"
        }
      ],
      "operations": [
        "createPostEngagement",
        "getPostEngagement",
        "updatePostEngagement",
        "deletePostEngagement",
        "listPostEngagements",
        "publish",
        "archive",
        "share"
      ]
    },
    {
      "name": "Comment",
      "type": "content",
      "properties": [
        {
          "name": "id",
          "type": "string",
          "required": true
        },
        {
          "name": "post_id",
          "type": "string",
          "required": true
        },
        {
          "name": "professional_id",
          "type": "string",
          "required": true
        },
        {
          "name": "parent_comment_id",
          "type": "string",
          "required": false
        },
        {
          "name": "content",
          "type": "string",
          "required": true
        },
        {
          "name": "created_at",
          "type": "string",
          "required": true
        },
        {
          "name": "updated_at",
          "type": "string",
          "required": true
        },
        {
          "name": "likes_count",
          "type": "number",
          "required": true
        },
        {
          "name": "is_edited",
          "type": "boolean",
          "required": true
        }
      ],
      "relationships": [
        {
          "type": "belongsTo",
          "entity": "Post",
          "foreign_key": "post_id"
        },
        {
          "type": "belongsTo",
          "entity": "Professional",
          "foreign_key": "professional_id"
        }
      ],
      "operations": [
        "createComment",
        "getComment",
        "updateComment",
        "deleteComment",
        "listComments",
        "publish",
        "archive",
        "share"
      ]
    },
    {
      "name": "LiveSession",
      "type": "general",
      "properties": [
        {
          "name": "id",
          "type": "string",
          "required": true
        },
        {
          "name": "host_professional_id",
          "type": "string",
          "required": true
        },
        {
          "name": "created_at",
          "type": "string",
          "required": true
        },
        {
          "name": "started_at",
          "type": "string",
          "required": false
        },
        {
          "name": "ended_at",
          "type": "string",
          "required": false
        },
        {
          "name": "title",
          "type": "string",
          "required": true
        },
        {
          "name": "description",
          "type": "string",
          "required": true
        },
        {
          "name": "thumbnail_url",
          "type": "string",
          "required": false
        },
        {
          "name": "stream_url",
          "type": "string",
          "required": false
        },
        {
          "name": "session_type",
          "type": "union",
          "required": true
        },
        {
          "name": "category",
          "type": "union",
          "required": true
        },
        {
          "name": "viewer_count",
          "type": "number",
          "required": true
        },
        {
          "name": "max_viewers",
          "type": "number",
          "required": true
        },
        {
          "name": "registered_users",
          "type": "array",
          "required": false
        },
        {
          "name": "status",
          "type": "union",
          "required": true
        },
        {
          "name": "is_featured",
          "type": "boolean",
          "required": true
        },
        {
          "name": "recording_url",
          "type": "string",
          "required": false
        },
        {
          "name": "provides_certificate",
          "type": "boolean",
          "required": true
        },
        {
          "name": "certificate_requirements",
          "type": "string",
          "required": false
        }
      ],
      "relationships": [],
      "operations": [
        "createLiveSession",
        "getLiveSession",
        "updateLiveSession",
        "deleteLiveSession",
        "listLiveSessions"
      ]
    },
    {
      "name": "Product",
      "type": "product",
      "properties": [
        {
          "name": "id",
          "type": "string",
          "required": true
        },
        {
          "name": "created_at",
          "type": "string",
          "required": true
        },
        {
          "name": "updated_at",
          "type": "string",
          "required": true
        },
        {
          "name": "name",
          "type": "string",
          "required": true
        },
        {
          "name": "description",
          "type": "string",
          "required": true
        },
        {
          "name": "category",
          "type": "union",
          "required": true
        },
        {
          "name": "sub_category",
          "type": "string",
          "required": false
        },
        {
          "name": "brand",
          "type": "string",
          "required": true
        },
        {
          "name": "sku",
          "type": "string",
          "required": true
        },
        {
          "name": "mrp",
          "type": "number",
          "required": true
        },
        {
          "name": "professional_price",
          "type": "number",
          "required": true
        },
        {
          "name": "bulk_price",
          "type": "number",
          "required": false
        },
        {
          "name": "bulk_minimum_quantity",
          "type": "number",
          "required": false
        },
        {
          "name": "currency",
          "type": "'INR'",
          "required": true
        },
        {
          "name": "image_urls",
          "type": "array",
          "required": true
        },
        {
          "name": "video_url",
          "type": "string",
          "required": false
        },
        {
          "name": "stock_quantity",
          "type": "number",
          "required": true
        },
        {
          "name": "is_in_stock",
          "type": "boolean",
          "required": true
        },
        {
          "name": "restock_date",
          "type": "string",
          "required": false
        },
        {
          "name": "rating",
          "type": "number",
          "required": true
        },
        {
          "name": "reviews_count",
          "type": "number",
          "required": true
        },
        {
          "name": "is_active",
          "type": "boolean",
          "required": true
        },
        {
          "name": "is_featured",
          "type": "boolean",
          "required": true
        },
        {
          "name": "tags",
          "type": "array",
          "required": false
        }
      ],
      "relationships": [
        {
          "type": "hasMany",
          "entity": "OrderItem"
        },
        {
          "type": "hasMany",
          "entity": "CartItem"
        }
      ],
      "operations": [
        "createProduct",
        "getProduct",
        "updateProduct",
        "deleteProduct",
        "listProducts"
      ]
    },
    {
      "name": "Order",
      "type": "transaction",
      "properties": [
        {
          "name": "id",
          "type": "string",
          "required": true
        },
        {
          "name": "professional_id",
          "type": "string",
          "required": true
        },
        {
          "name": "created_at",
          "type": "string",
          "required": true
        },
        {
          "name": "updated_at",
          "type": "string",
          "required": true
        },
        {
          "name": "order_number",
          "type": "string",
          "required": true
        },
        {
          "name": "order_date",
          "type": "string",
          "required": true
        },
        {
          "name": "total_amount",
          "type": "number",
          "required": true
        },
        {
          "name": "tax_amount",
          "type": "number",
          "required": true
        },
        {
          "name": "discount_amount",
          "type": "number",
          "required": true
        },
        {
          "name": "final_amount",
          "type": "number",
          "required": true
        },
        {
          "name": "currency",
          "type": "'INR'",
          "required": true
        },
        {
          "name": "status",
          "type": "union",
          "required": true
        },
        {
          "name": "payment_status",
          "type": "union",
          "required": true
        },
        {
          "name": "payment_method",
          "type": "union",
          "required": true
        },
        {
          "name": "shipping_address",
          "type": "Address",
          "required": true
        },
        {
          "name": "billing_address",
          "type": "Address",
          "required": false
        },
        {
          "name": "tracking_number",
          "type": "string",
          "required": false
        },
        {
          "name": "expected_delivery",
          "type": "string",
          "required": false
        },
        {
          "name": "delivered_at",
          "type": "string",
          "required": false
        }
      ],
      "relationships": [
        {
          "type": "belongsTo",
          "entity": "Professional",
          "foreign_key": "professional_id"
        },
        {
          "type": "hasMany",
          "entity": "OrderItem"
        }
      ],
      "operations": [
        "createOrder",
        "getOrder",
        "updateOrder",
        "deleteOrder",
        "listOrders",
        "processPayment",
        "refund",
        "calculateTotal"
      ]
    },
    {
      "name": "OrderItem",
      "type": "product",
      "properties": [
        {
          "name": "id",
          "type": "string",
          "required": true
        },
        {
          "name": "order_id",
          "type": "string",
          "required": true
        },
        {
          "name": "product_id",
          "type": "string",
          "required": true
        },
        {
          "name": "quantity",
          "type": "number",
          "required": true
        },
        {
          "name": "unit_price",
          "type": "number",
          "required": true
        },
        {
          "name": "total_price",
          "type": "number",
          "required": true
        },
        {
          "name": "discount_amount",
          "type": "number",
          "required": true
        }
      ],
      "relationships": [
        {
          "type": "belongsTo",
          "entity": "Order",
          "foreign_key": "order_id"
        },
        {
          "type": "belongsTo",
          "entity": "Product",
          "foreign_key": "product_id"
        }
      ],
      "operations": [
        "createOrderItem",
        "getOrderItem",
        "updateOrderItem",
        "deleteOrderItem",
        "listOrderItems"
      ]
    },
    {
      "name": "InsurancePolicy",
      "type": "general",
      "properties": [
        {
          "name": "id",
          "type": "string",
          "required": true
        },
        {
          "name": "professional_id",
          "type": "string",
          "required": true
        },
        {
          "name": "created_at",
          "type": "string",
          "required": true
        },
        {
          "name": "updated_at",
          "type": "string",
          "required": true
        },
        {
          "name": "policy_number",
          "type": "string",
          "required": true
        },
        {
          "name": "policy_type",
          "type": "union",
          "required": true
        },
        {
          "name": "provider",
          "type": "string",
          "required": true
        },
        {
          "name": "coverage_amount",
          "type": "number",
          "required": true
        },
        {
          "name": "premium_amount",
          "type": "number",
          "required": true
        },
        {
          "name": "start_date",
          "type": "string",
          "required": true
        },
        {
          "name": "end_date",
          "type": "string",
          "required": true
        },
        {
          "name": "next_premium_date",
          "type": "string",
          "required": false
        },
        {
          "name": "status",
          "type": "union",
          "required": true
        },
        {
          "name": "policy_document_url",
          "type": "string",
          "required": false
        },
        {
          "name": "id_card_url",
          "type": "string",
          "required": false
        }
      ],
      "relationships": [
        {
          "type": "belongsTo",
          "entity": "Professional",
          "foreign_key": "professional_id"
        }
      ],
      "operations": [
        "createInsurancePolicy",
        "getInsurancePolicy",
        "updateInsurancePolicy",
        "deleteInsurancePolicy",
        "listInsurancePolicys"
      ]
    },
    {
      "name": "InsuranceClaim",
      "type": "general",
      "properties": [
        {
          "name": "id",
          "type": "string",
          "required": true
        },
        {
          "name": "policy_id",
          "type": "string",
          "required": true
        },
        {
          "name": "professional_id",
          "type": "string",
          "required": true
        },
        {
          "name": "created_at",
          "type": "string",
          "required": true
        },
        {
          "name": "updated_at",
          "type": "string",
          "required": true
        },
        {
          "name": "claim_number",
          "type": "string",
          "required": true
        },
        {
          "name": "claim_type",
          "type": "union",
          "required": true
        },
        {
          "name": "claim_amount",
          "type": "number",
          "required": true
        },
        {
          "name": "approved_amount",
          "type": "number",
          "required": false
        },
        {
          "name": "status",
          "type": "union",
          "required": true
        },
        {
          "name": "submitted_date",
          "type": "string",
          "required": true
        },
        {
          "name": "processed_date",
          "type": "string",
          "required": false
        },
        {
          "name": "document_urls",
          "type": "array",
          "required": false
        },
        {
          "name": "remarks",
          "type": "string",
          "required": false
        }
      ],
      "relationships": [
        {
          "type": "belongsTo",
          "entity": "Professional",
          "foreign_key": "professional_id"
        }
      ],
      "operations": [
        "createInsuranceClaim",
        "getInsuranceClaim",
        "updateInsuranceClaim",
        "deleteInsuranceClaim",
        "listInsuranceClaims"
      ]
    },
    {
      "name": "Client",
      "type": "general",
      "properties": [
        {
          "name": "id",
          "type": "string",
          "required": true
        },
        {
          "name": "professional_id",
          "type": "string",
          "required": true
        },
        {
          "name": "created_at",
          "type": "string",
          "required": true
        },
        {
          "name": "updated_at",
          "type": "string",
          "required": true
        },
        {
          "name": "name",
          "type": "string",
          "required": true
        },
        {
          "name": "phone",
          "type": "string",
          "required": true
        },
        {
          "name": "email",
          "type": "string",
          "required": false
        },
        {
          "name": "date_of_birth",
          "type": "string",
          "required": false
        },
        {
          "name": "gender",
          "type": "union",
          "required": false
        },
        {
          "name": "preferred_services",
          "type": "array",
          "required": false
        },
        {
          "name": "allergies",
          "type": "array",
          "required": false
        },
        {
          "name": "notes",
          "type": "string",
          "required": false
        },
        {
          "name": "first_visit_date",
          "type": "string",
          "required": true
        },
        {
          "name": "last_visit_date",
          "type": "string",
          "required": true
        },
        {
          "name": "total_visits",
          "type": "number",
          "required": true
        },
        {
          "name": "total_spent",
          "type": "number",
          "required": true
        },
        {
          "name": "average_ticket_size",
          "type": "number",
          "required": true
        },
        {
          "name": "tags",
          "type": "array",
          "required": false
        },
        {
          "name": "is_active",
          "type": "boolean",
          "required": true
        },
        {
          "name": "loyalty_tier",
          "type": "union",
          "required": false
        }
      ],
      "relationships": [
        {
          "type": "belongsTo",
          "entity": "Professional",
          "foreign_key": "professional_id"
        },
        {
          "type": "hasMany",
          "entity": "Appointment"
        }
      ],
      "operations": [
        "createClient",
        "getClient",
        "updateClient",
        "deleteClient",
        "listClients"
      ]
    },
    {
      "name": "Appointment",
      "type": "general",
      "properties": [
        {
          "name": "id",
          "type": "string",
          "required": true
        },
        {
          "name": "professional_id",
          "type": "string",
          "required": true
        },
        {
          "name": "client_id",
          "type": "string",
          "required": true
        },
        {
          "name": "created_at",
          "type": "string",
          "required": true
        },
        {
          "name": "updated_at",
          "type": "string",
          "required": true
        },
        {
          "name": "appointment_date",
          "type": "string",
          "required": true
        },
        {
          "name": "start_time",
          "type": "string",
          "required": true
        },
        {
          "name": "end_time",
          "type": "string",
          "required": true
        },
        {
          "name": "duration_minutes",
          "type": "number",
          "required": true
        },
        {
          "name": "services",
          "type": "array",
          "required": true
        },
        {
          "name": "total_amount",
          "type": "number",
          "required": true
        },
        {
          "name": "status",
          "type": "union",
          "required": true
        },
        {
          "name": "payment_status",
          "type": "union",
          "required": true
        },
        {
          "name": "notes",
          "type": "string",
          "required": false
        },
        {
          "name": "before_image_urls",
          "type": "array",
          "required": false
        },
        {
          "name": "after_image_urls",
          "type": "array",
          "required": false
        }
      ],
      "relationships": [
        {
          "type": "belongsTo",
          "entity": "Professional",
          "foreign_key": "professional_id"
        },
        {
          "type": "belongsTo",
          "entity": "Client",
          "foreign_key": "client_id"
        }
      ],
      "operations": [
        "createAppointment",
        "getAppointment",
        "updateAppointment",
        "deleteAppointment",
        "listAppointments"
      ]
    },
    {
      "name": "ServiceItem",
      "type": "product",
      "properties": [
        {
          "name": "id",
          "type": "string",
          "required": true
        },
        {
          "name": "name",
          "type": "string",
          "required": true
        },
        {
          "name": "category",
          "type": "union",
          "required": true
        },
        {
          "name": "price",
          "type": "number",
          "required": true
        },
        {
          "name": "duration_minutes",
          "type": "number",
          "required": true
        }
      ],
      "relationships": [],
      "operations": [
        "createServiceItem",
        "getServiceItem",
        "updateServiceItem",
        "deleteServiceItem",
        "listServiceItems"
      ]
    },
    {
      "name": "Course",
      "type": "general",
      "properties": [
        {
          "name": "id",
          "type": "string",
          "required": true
        },
        {
          "name": "created_at",
          "type": "string",
          "required": true
        },
        {
          "name": "updated_at",
          "type": "string",
          "required": true
        },
        {
          "name": "title",
          "type": "string",
          "required": true
        },
        {
          "name": "description",
          "type": "string",
          "required": true
        },
        {
          "name": "instructor_name",
          "type": "string",
          "required": true
        },
        {
          "name": "instructor_id",
          "type": "string",
          "required": false
        },
        {
          "name": "category",
          "type": "union",
          "required": true
        },
        {
          "name": "difficulty_level",
          "type": "union",
          "required": true
        },
        {
          "name": "duration_minutes",
          "type": "number",
          "required": true
        },
        {
          "name": "video_url",
          "type": "string",
          "required": false
        },
        {
          "name": "thumbnail_url",
          "type": "string",
          "required": false
        },
        {
          "name": "materials",
          "type": "array",
          "required": false
        },
        {
          "name": "rating",
          "type": "number",
          "required": true
        },
        {
          "name": "enrollments_count",
          "type": "number",
          "required": true
        },
        {
          "name": "completion_rate",
          "type": "number",
          "required": true
        },
        {
          "name": "provides_certificate",
          "type": "boolean",
          "required": true
        },
        {
          "name": "certificate_requirements",
          "type": "string",
          "required": false
        },
        {
          "name": "is_published",
          "type": "boolean",
          "required": true
        },
        {
          "name": "is_featured",
          "type": "boolean",
          "required": true
        },
        {
          "name": "price",
          "type": "number",
          "required": false
        }
      ],
      "relationships": [
        {
          "type": "hasMany",
          "entity": "CourseEnrollment"
        },
        {
          "type": "hasMany",
          "entity": "CourseProgress"
        }
      ],
      "operations": [
        "createCourse",
        "getCourse",
        "updateCourse",
        "deleteCourse",
        "listCourses"
      ]
    },
    {
      "name": "CourseEnrollment",
      "type": "general",
      "properties": [
        {
          "name": "id",
          "type": "string",
          "required": true
        },
        {
          "name": "course_id",
          "type": "string",
          "required": true
        },
        {
          "name": "professional_id",
          "type": "string",
          "required": true
        },
        {
          "name": "enrolled_at",
          "type": "string",
          "required": true
        },
        {
          "name": "progress_percentage",
          "type": "number",
          "required": true
        },
        {
          "name": "last_accessed_at",
          "type": "string",
          "required": false
        },
        {
          "name": "completed_at",
          "type": "string",
          "required": false
        },
        {
          "name": "certificate_issued",
          "type": "boolean",
          "required": true
        },
        {
          "name": "certificate_url",
          "type": "string",
          "required": false
        },
        {
          "name": "certificate_issued_at",
          "type": "string",
          "required": false
        },
        {
          "name": "rating",
          "type": "number",
          "required": false
        },
        {
          "name": "review",
          "type": "string",
          "required": false
        }
      ],
      "relationships": [
        {
          "type": "belongsTo",
          "entity": "Course",
          "foreign_key": "course_id"
        },
        {
          "type": "belongsTo",
          "entity": "Professional",
          "foreign_key": "professional_id"
        }
      ],
      "operations": [
        "createCourseEnrollment",
        "getCourseEnrollment",
        "updateCourseEnrollment",
        "deleteCourseEnrollment",
        "listCourseEnrollments"
      ]
    },
    {
      "name": "Address",
      "type": "general",
      "properties": [
        {
          "name": "line1",
          "type": "string",
          "required": true
        },
        {
          "name": "line2",
          "type": "string",
          "required": false
        },
        {
          "name": "city",
          "type": "string",
          "required": true
        },
        {
          "name": "state",
          "type": "string",
          "required": true
        },
        {
          "name": "pincode",
          "type": "string",
          "required": true
        },
        {
          "name": "country",
          "type": "string",
          "required": true
        },
        {
          "name": "landmark",
          "type": "string",
          "required": false
        }
      ],
      "relationships": [],
      "operations": [
        "createAddress",
        "getAddress",
        "updateAddress",
        "deleteAddress",
        "listAddresss"
      ]
    },
    {
      "name": "Notification",
      "type": "general",
      "properties": [
        {
          "name": "id",
          "type": "string",
          "required": true
        },
        {
          "name": "professional_id",
          "type": "string",
          "required": true
        },
        {
          "name": "created_at",
          "type": "string",
          "required": true
        },
        {
          "name": "title",
          "type": "string",
          "required": true
        },
        {
          "name": "message",
          "type": "string",
          "required": true
        },
        {
          "name": "type",
          "type": "union",
          "required": true
        },
        {
          "name": "reference_id",
          "type": "string",
          "required": false
        },
        {
          "name": "reference_type",
          "type": "string",
          "required": false
        },
        {
          "name": "is_read",
          "type": "boolean",
          "required": true
        },
        {
          "name": "read_at",
          "type": "string",
          "required": false
        },
        {
          "name": "action_url",
          "type": "string",
          "required": false
        }
      ],
      "relationships": [
        {
          "type": "belongsTo",
          "entity": "Professional",
          "foreign_key": "professional_id"
        }
      ],
      "operations": [
        "createNotification",
        "getNotification",
        "updateNotification",
        "deleteNotification",
        "listNotifications"
      ]
    },
    {
      "name": "Analytics",
      "type": "general",
      "properties": [
        {
          "name": "id",
          "type": "string",
          "required": true
        },
        {
          "name": "professional_id",
          "type": "string",
          "required": true
        },
        {
          "name": "date",
          "type": "string",
          "required": true
        },
        {
          "name": "profile_views",
          "type": "number",
          "required": true
        },
        {
          "name": "post_views",
          "type": "number",
          "required": true
        },
        {
          "name": "post_engagement_rate",
          "type": "number",
          "required": true
        },
        {
          "name": "clients_served",
          "type": "number",
          "required": true
        },
        {
          "name": "revenue",
          "type": "number",
          "required": true
        },
        {
          "name": "average_ticket_size",
          "type": "number",
          "required": true
        },
        {
          "name": "new_followers",
          "type": "number",
          "required": true
        },
        {
          "name": "new_clients",
          "type": "number",
          "required": true
        },
        {
          "name": "retention_rate",
          "type": "number",
          "required": true
        }
      ],
      "relationships": [
        {
          "type": "belongsTo",
          "entity": "Professional",
          "foreign_key": "professional_id"
        }
      ],
      "operations": [
        "createAnalytics",
        "getAnalytics",
        "updateAnalytics",
        "deleteAnalytics",
        "listAnalyticss"
      ]
    },
    {
      "name": "User",
      "type": "user",
      "properties": [
        {
          "name": "id",
          "type": "string",
          "required": true
        },
        {
          "name": "email",
          "type": "string",
          "required": true
        },
        {
          "name": "name",
          "type": "string",
          "required": true
        },
        {
          "name": "username",
          "type": "string",
          "required": true
        },
        {
          "name": "avatar",
          "type": "string",
          "required": false
        },
        {
          "name": "bio",
          "type": "string",
          "required": false
        },
        {
          "name": "location",
          "type": "string",
          "required": false
        },
        {
          "name": "isVerified",
          "type": "boolean",
          "required": true
        },
        {
          "name": "profession",
          "type": "union",
          "required": true
        },
        {
          "name": "createdAt",
          "type": "string",
          "required": true
        }
      ],
      "relationships": [
        {
          "type": "hasMany",
          "entity": "Post"
        },
        {
          "type": "hasMany",
          "entity": "Comment"
        },
        {
          "type": "hasMany",
          "entity": "Order"
        },
        {
          "type": "hasMany",
          "entity": "InsurancePolicy"
        },
        {
          "type": "hasMany",
          "entity": "InsuranceClaim"
        },
        {
          "type": "hasMany",
          "entity": "Client"
        },
        {
          "type": "hasMany",
          "entity": "Appointment"
        },
        {
          "type": "hasMany",
          "entity": "CourseProgress"
        }
      ],
      "operations": [
        "createUser",
        "getUser",
        "updateUser",
        "deleteUser",
        "listUsers",
        "authenticate",
        "authorize",
        "resetPassword"
      ]
    },
    {
      "name": "Post",
      "type": "content",
      "properties": [
        {
          "name": "id",
          "type": "string",
          "required": true
        },
        {
          "name": "userId",
          "type": "string",
          "required": true
        },
        {
          "name": "user",
          "type": "User",
          "required": false
        },
        {
          "name": "content",
          "type": "string",
          "required": true
        },
        {
          "name": "images",
          "type": "array",
          "required": false
        },
        {
          "name": "video",
          "type": "string",
          "required": false
        },
        {
          "name": "likes",
          "type": "number",
          "required": true
        },
        {
          "name": "likedByMe",
          "type": "boolean",
          "required": false
        },
        {
          "name": "comments",
          "type": "number",
          "required": true
        },
        {
          "name": "shares",
          "type": "number",
          "required": true
        },
        {
          "name": "saves",
          "type": "number",
          "required": true
        },
        {
          "name": "tags",
          "type": "array",
          "required": false
        },
        {
          "name": "createdAt",
          "type": "string",
          "required": true
        },
        {
          "name": "updatedAt",
          "type": "string",
          "required": true
        }
      ],
      "relationships": [
        {
          "type": "belongsTo",
          "entity": "User",
          "foreign_key": "userId"
        }
      ],
      "operations": [
        "createPost",
        "getPost",
        "updatePost",
        "deletePost",
        "listPosts",
        "publish",
        "archive",
        "share"
      ]
    },
    {
      "name": "Comment",
      "type": "content",
      "properties": [
        {
          "name": "id",
          "type": "string",
          "required": true
        },
        {
          "name": "postId",
          "type": "string",
          "required": true
        },
        {
          "name": "userId",
          "type": "string",
          "required": true
        },
        {
          "name": "user",
          "type": "User",
          "required": false
        },
        {
          "name": "content",
          "type": "string",
          "required": true
        },
        {
          "name": "likes",
          "type": "number",
          "required": true
        },
        {
          "name": "createdAt",
          "type": "string",
          "required": true
        }
      ],
      "relationships": [
        {
          "type": "belongsTo",
          "entity": "Post",
          "foreign_key": "postId"
        },
        {
          "type": "belongsTo",
          "entity": "User",
          "foreign_key": "userId"
        }
      ],
      "operations": [
        "createComment",
        "getComment",
        "updateComment",
        "deleteComment",
        "listComments",
        "publish",
        "archive",
        "share"
      ]
    },
    {
      "name": "LiveSession",
      "type": "general",
      "properties": [
        {
          "name": "id",
          "type": "string",
          "required": true
        },
        {
          "name": "title",
          "type": "string",
          "required": true
        },
        {
          "name": "description",
          "type": "string",
          "required": true
        },
        {
          "name": "instructorId",
          "type": "string",
          "required": true
        },
        {
          "name": "instructor",
          "type": "User",
          "required": false
        },
        {
          "name": "thumbnailUrl",
          "type": "string",
          "required": false
        },
        {
          "name": "isLive",
          "type": "boolean",
          "required": true
        },
        {
          "name": "viewerCount",
          "type": "number",
          "required": true
        },
        {
          "name": "startTime",
          "type": "string",
          "required": true
        },
        {
          "name": "endTime",
          "type": "string",
          "required": false
        },
        {
          "name": "category",
          "type": "union",
          "required": true
        }
      ],
      "relationships": [],
      "operations": [
        "createLiveSession",
        "getLiveSession",
        "updateLiveSession",
        "deleteLiveSession",
        "listLiveSessions"
      ]
    },
    {
      "name": "Product",
      "type": "product",
      "properties": [
        {
          "name": "id",
          "type": "string",
          "required": true
        },
        {
          "name": "name",
          "type": "string",
          "required": true
        },
        {
          "name": "description",
          "type": "string",
          "required": true
        },
        {
          "name": "category",
          "type": "union",
          "required": true
        },
        {
          "name": "price",
          "type": "number",
          "required": true
        },
        {
          "name": "professionalPrice",
          "type": "number",
          "required": true
        },
        {
          "name": "imageUrl",
          "type": "string",
          "required": true
        },
        {
          "name": "inStock",
          "type": "boolean",
          "required": true
        },
        {
          "name": "stockCount",
          "type": "number",
          "required": false
        },
        {
          "name": "rating",
          "type": "number",
          "required": false
        },
        {
          "name": "reviewCount",
          "type": "number",
          "required": false
        }
      ],
      "relationships": [],
      "operations": [
        "createProduct",
        "getProduct",
        "updateProduct",
        "deleteProduct",
        "listProducts"
      ]
    },
    {
      "name": "CartItem",
      "type": "product",
      "properties": [
        {
          "name": "productId",
          "type": "string",
          "required": true
        },
        {
          "name": "product",
          "type": "Product",
          "required": false
        },
        {
          "name": "quantity",
          "type": "number",
          "required": true
        },
        {
          "name": "price",
          "type": "number",
          "required": true
        }
      ],
      "relationships": [
        {
          "type": "belongsTo",
          "entity": "Product",
          "foreign_key": "productId"
        }
      ],
      "operations": [
        "createCartItem",
        "getCartItem",
        "updateCartItem",
        "deleteCartItem",
        "listCartItems"
      ]
    },
    {
      "name": "Order",
      "type": "transaction",
      "properties": [
        {
          "name": "id",
          "type": "string",
          "required": true
        },
        {
          "name": "userId",
          "type": "string",
          "required": true
        },
        {
          "name": "items",
          "type": "array",
          "required": true
        },
        {
          "name": "status",
          "type": "union",
          "required": true
        },
        {
          "name": "totalAmount",
          "type": "number",
          "required": true
        },
        {
          "name": "shippingAddress",
          "type": "string",
          "required": true
        },
        {
          "name": "paymentMethod",
          "type": "string",
          "required": true
        },
        {
          "name": "createdAt",
          "type": "string",
          "required": true
        },
        {
          "name": "updatedAt",
          "type": "string",
          "required": true
        }
      ],
      "relationships": [
        {
          "type": "belongsTo",
          "entity": "User",
          "foreign_key": "userId"
        }
      ],
      "operations": [
        "createOrder",
        "getOrder",
        "updateOrder",
        "deleteOrder",
        "listOrders",
        "processPayment",
        "refund",
        "calculateTotal"
      ]
    },
    {
      "name": "OrderItem",
      "type": "product",
      "properties": [
        {
          "name": "productId",
          "type": "string",
          "required": true
        },
        {
          "name": "product",
          "type": "Product",
          "required": false
        },
        {
          "name": "quantity",
          "type": "number",
          "required": true
        },
        {
          "name": "price",
          "type": "number",
          "required": true
        }
      ],
      "relationships": [
        {
          "type": "belongsTo",
          "entity": "Product",
          "foreign_key": "productId"
        }
      ],
      "operations": [
        "createOrderItem",
        "getOrderItem",
        "updateOrderItem",
        "deleteOrderItem",
        "listOrderItems"
      ]
    },
    {
      "name": "InsurancePolicy",
      "type": "general",
      "properties": [
        {
          "name": "id",
          "type": "string",
          "required": true
        },
        {
          "name": "userId",
          "type": "string",
          "required": true
        },
        {
          "name": "policyNumber",
          "type": "string",
          "required": true
        },
        {
          "name": "coverage",
          "type": "number",
          "required": true
        },
        {
          "name": "premium",
          "type": "number",
          "required": true
        },
        {
          "name": "validFrom",
          "type": "string",
          "required": true
        },
        {
          "name": "validUntil",
          "type": "string",
          "required": true
        },
        {
          "name": "status",
          "type": "union",
          "required": true
        },
        {
          "name": "type",
          "type": "union",
          "required": true
        }
      ],
      "relationships": [
        {
          "type": "belongsTo",
          "entity": "User",
          "foreign_key": "userId"
        }
      ],
      "operations": [
        "createInsurancePolicy",
        "getInsurancePolicy",
        "updateInsurancePolicy",
        "deleteInsurancePolicy",
        "listInsurancePolicys"
      ]
    },
    {
      "name": "InsuranceClaim",
      "type": "general",
      "properties": [
        {
          "name": "id",
          "type": "string",
          "required": true
        },
        {
          "name": "policyId",
          "type": "string",
          "required": true
        },
        {
          "name": "userId",
          "type": "string",
          "required": true
        },
        {
          "name": "claimNumber",
          "type": "string",
          "required": true
        },
        {
          "name": "amount",
          "type": "number",
          "required": true
        },
        {
          "name": "status",
          "type": "union",
          "required": true
        },
        {
          "name": "type",
          "type": "union",
          "required": true
        },
        {
          "name": "description",
          "type": "string",
          "required": true
        },
        {
          "name": "documents",
          "type": "array",
          "required": false
        },
        {
          "name": "submittedAt",
          "type": "string",
          "required": true
        },
        {
          "name": "processedAt",
          "type": "string",
          "required": false
        }
      ],
      "relationships": [
        {
          "type": "belongsTo",
          "entity": "User",
          "foreign_key": "userId"
        }
      ],
      "operations": [
        "createInsuranceClaim",
        "getInsuranceClaim",
        "updateInsuranceClaim",
        "deleteInsuranceClaim",
        "listInsuranceClaims"
      ]
    },
    {
      "name": "Client",
      "type": "general",
      "properties": [
        {
          "name": "id",
          "type": "string",
          "required": true
        },
        {
          "name": "userId",
          "type": "string",
          "required": true
        },
        {
          "name": "name",
          "type": "string",
          "required": true
        },
        {
          "name": "phone",
          "type": "string",
          "required": true
        },
        {
          "name": "email",
          "type": "string",
          "required": false
        },
        {
          "name": "avatar",
          "type": "string",
          "required": false
        },
        {
          "name": "lastVisit",
          "type": "string",
          "required": true
        },
        {
          "name": "totalVisits",
          "type": "number",
          "required": true
        },
        {
          "name": "totalSpent",
          "type": "number",
          "required": true
        },
        {
          "name": "preferredServices",
          "type": "array",
          "required": true
        },
        {
          "name": "notes",
          "type": "string",
          "required": false
        },
        {
          "name": "birthday",
          "type": "string",
          "required": false
        },
        {
          "name": "createdAt",
          "type": "string",
          "required": true
        },
        {
          "name": "updatedAt",
          "type": "string",
          "required": true
        }
      ],
      "relationships": [
        {
          "type": "belongsTo",
          "entity": "User",
          "foreign_key": "userId"
        }
      ],
      "operations": [
        "createClient",
        "getClient",
        "updateClient",
        "deleteClient",
        "listClients"
      ]
    },
    {
      "name": "Appointment",
      "type": "general",
      "properties": [
        {
          "name": "id",
          "type": "string",
          "required": true
        },
        {
          "name": "clientId",
          "type": "string",
          "required": true
        },
        {
          "name": "client",
          "type": "Client",
          "required": false
        },
        {
          "name": "userId",
          "type": "string",
          "required": true
        },
        {
          "name": "service",
          "type": "string",
          "required": true
        },
        {
          "name": "date",
          "type": "string",
          "required": true
        },
        {
          "name": "time",
          "type": "string",
          "required": true
        },
        {
          "name": "duration",
          "type": "number",
          "required": true
        },
        {
          "name": "price",
          "type": "number",
          "required": true
        },
        {
          "name": "status",
          "type": "union",
          "required": true
        },
        {
          "name": "notes",
          "type": "string",
          "required": false
        }
      ],
      "relationships": [
        {
          "type": "belongsTo",
          "entity": "Client",
          "foreign_key": "clientId"
        },
        {
          "type": "belongsTo",
          "entity": "User",
          "foreign_key": "userId"
        }
      ],
      "operations": [
        "createAppointment",
        "getAppointment",
        "updateAppointment",
        "deleteAppointment",
        "listAppointments"
      ]
    },
    {
      "name": "Course",
      "type": "general",
      "properties": [
        {
          "name": "id",
          "type": "string",
          "required": true
        },
        {
          "name": "title",
          "type": "string",
          "required": true
        },
        {
          "name": "description",
          "type": "string",
          "required": true
        },
        {
          "name": "instructorId",
          "type": "string",
          "required": true
        },
        {
          "name": "instructor",
          "type": "User",
          "required": false
        },
        {
          "name": "thumbnailUrl",
          "type": "string",
          "required": true
        },
        {
          "name": "duration",
          "type": "number",
          "required": true
        },
        {
          "name": "category",
          "type": "union",
          "required": true
        },
        {
          "name": "difficulty",
          "type": "union",
          "required": true
        },
        {
          "name": "rating",
          "type": "number",
          "required": true
        },
        {
          "name": "enrollments",
          "type": "number",
          "required": true
        },
        {
          "name": "hasCertificate",
          "type": "boolean",
          "required": true
        },
        {
          "name": "price",
          "type": "number",
          "required": true
        },
        {
          "name": "isPremium",
          "type": "boolean",
          "required": true
        },
        {
          "name": "createdAt",
          "type": "string",
          "required": true
        }
      ],
      "relationships": [],
      "operations": [
        "createCourse",
        "getCourse",
        "updateCourse",
        "deleteCourse",
        "listCourses"
      ]
    },
    {
      "name": "CourseProgress",
      "type": "general",
      "properties": [
        {
          "name": "id",
          "type": "string",
          "required": true
        },
        {
          "name": "courseId",
          "type": "string",
          "required": true
        },
        {
          "name": "userId",
          "type": "string",
          "required": true
        },
        {
          "name": "progress",
          "type": "number",
          "required": true
        },
        {
          "name": "completed",
          "type": "boolean",
          "required": true
        },
        {
          "name": "certificateUrl",
          "type": "string",
          "required": false
        },
        {
          "name": "startedAt",
          "type": "string",
          "required": true
        },
        {
          "name": "completedAt",
          "type": "string",
          "required": false
        }
      ],
      "relationships": [
        {
          "type": "belongsTo",
          "entity": "Course",
          "foreign_key": "courseId"
        },
        {
          "type": "belongsTo",
          "entity": "User",
          "foreign_key": "userId"
        }
      ],
      "operations": [
        "createCourseProgress",
        "getCourseProgress",
        "updateCourseProgress",
        "deleteCourseProgress",
        "listCourseProgresss"
      ]
    },
    {
      "name": "NavItem",
      "type": "product",
      "properties": [
        {
          "name": "id",
          "type": "union",
          "required": true
        },
        {
          "name": "label",
          "type": "string",
          "required": true
        },
        {
          "name": "icon",
          "type": "string",
          "required": true
        },
        {
          "name": "badge",
          "type": "number",
          "required": false
        },
        {
          "name": "route",
          "type": "string",
          "required": true
        }
      ],
      "relationships": [],
      "operations": [
        "createNavItem",
        "getNavItem",
        "updateNavItem",
        "deleteNavItem",
        "listNavItems"
      ]
    },
    {
      "name": "ApiResponse",
      "type": "general",
      "properties": [
        {
          "name": "data",
          "type": "T",
          "required": true
        },
        {
          "name": "error",
          "type": "string",
          "required": false
        },
        {
          "name": "message",
          "type": "string",
          "required": false
        }
      ],
      "relationships": [],
      "operations": [
        "createApiResponse",
        "getApiResponse",
        "updateApiResponse",
        "deleteApiResponse",
        "listApiResponses"
      ]
    },
    {
      "name": "PaginatedResponse",
      "type": "general",
      "properties": [
        {
          "name": "data",
          "type": "array",
          "required": true
        },
        {
          "name": "total",
          "type": "number",
          "required": true
        },
        {
          "name": "page",
          "type": "number",
          "required": true
        },
        {
          "name": "limit",
          "type": "number",
          "required": true
        },
        {
          "name": "hasMore",
          "type": "boolean",
          "required": true
        }
      ],
      "relationships": [],
      "operations": [
        "createPaginatedResponse",
        "getPaginatedResponse",
        "updatePaginatedResponse",
        "deletePaginatedResponse",
        "listPaginatedResponses"
      ]
    },
    {
      "name": "CategoryCardProps",
      "type": "taxonomy",
      "properties": [
        {
          "name": "icon",
          "type": "ReactNode",
          "required": true
        },
        {
          "name": "title",
          "type": "string",
          "required": true
        },
        {
          "name": "count",
          "type": "number",
          "required": false
        },
        {
          "name": "onClick",
          "type": "() => void",
          "required": false
        }
      ],
      "relationships": [],
      "operations": [
        "createCategoryCardProps",
        "getCategoryCardProps",
        "updateCategoryCardProps",
        "deleteCategoryCardProps",
        "listCategoryCardPropss"
      ]
    },
    {
      "name": "ClientCardProps",
      "type": "general",
      "properties": [
        {
          "name": "client",
          "type": "Client",
          "required": true
        },
        {
          "name": "onClick",
          "type": "() => void",
          "required": false
        },
        {
          "name": "onCall",
          "type": "() => void",
          "required": false
        },
        {
          "name": "onBook",
          "type": "() => void",
          "required": false
        },
        {
          "name": "onHistory",
          "type": "() => void",
          "required": false
        }
      ],
      "relationships": [],
      "operations": [
        "createClientCardProps",
        "getClientCardProps",
        "updateClientCardProps",
        "deleteClientCardProps",
        "listClientCardPropss"
      ]
    },
    {
      "name": "LiveSessionBannerProps",
      "type": "general",
      "properties": [
        {
          "name": "session",
          "type": "LiveSession",
          "required": true
        },
        {
          "name": "onJoin",
          "type": "() => void",
          "required": false
        }
      ],
      "relationships": [],
      "operations": [
        "createLiveSessionBannerProps",
        "getLiveSessionBannerProps",
        "updateLiveSessionBannerProps",
        "deleteLiveSessionBannerProps",
        "listLiveSessionBannerPropss"
      ]
    },
    {
      "name": "PostCardProps",
      "type": "content",
      "properties": [
        {
          "name": "post",
          "type": "Post",
          "required": true
        },
        {
          "name": "professional",
          "type": "Professional",
          "required": true
        },
        {
          "name": "onLike",
          "type": "() => void",
          "required": false
        },
        {
          "name": "onComment",
          "type": "() => void",
          "required": false
        },
        {
          "name": "onShare",
          "type": "() => void",
          "required": false
        },
        {
          "name": "onSave",
          "type": "() => void",
          "required": false
        }
      ],
      "relationships": [],
      "operations": [
        "createPostCardProps",
        "getPostCardProps",
        "updatePostCardProps",
        "deletePostCardProps",
        "listPostCardPropss",
        "publish",
        "archive",
        "share"
      ]
    },
    {
      "name": "PostComposerProps",
      "type": "content",
      "properties": [
        {
          "name": "avatar",
          "type": "string",
          "required": false
        },
        {
          "name": "placeholder",
          "type": "string",
          "required": false
        },
        {
          "name": "onPhotoClick",
          "type": "() => void",
          "required": false
        },
        {
          "name": "onVideoClick",
          "type": "() => void",
          "required": false
        },
        {
          "name": "onQuestionClick",
          "type": "() => void",
          "required": false
        },
        {
          "name": "onPollClick",
          "type": "() => void",
          "required": false
        },
        {
          "name": "onFocus",
          "type": "() => void",
          "required": false
        }
      ],
      "relationships": [],
      "operations": [
        "createPostComposerProps",
        "getPostComposerProps",
        "updatePostComposerProps",
        "deletePostComposerProps",
        "listPostComposerPropss",
        "publish",
        "archive",
        "share"
      ]
    },
    {
      "name": "ProductCardProps",
      "type": "product",
      "properties": [
        {
          "name": "product",
          "type": "Product",
          "required": true
        },
        {
          "name": "quantity",
          "type": "number",
          "required": false
        },
        {
          "name": "onAdd",
          "type": "() => void",
          "required": false
        },
        {
          "name": "onRemove",
          "type": "() => void",
          "required": false
        },
        {
          "name": "onIncrease",
          "type": "() => void",
          "required": false
        },
        {
          "name": "onDecrease",
          "type": "() => void",
          "required": false
        }
      ],
      "relationships": [],
      "operations": [
        "createProductCardProps",
        "getProductCardProps",
        "updateProductCardProps",
        "deleteProductCardProps",
        "listProductCardPropss"
      ]
    }
  ],
  "validationRules": [
    {
      "id": "rule_1_1756748912807",
      "name": "AppointmentCardProps.time is required",
      "type": "type",
      "severity": "error",
      "path": "AppointmentCardProps.time",
      "rule": "time !== null && time !== undefined",
      "autoGenerated": true
    },
    {
      "id": "rule_2_1756748912807",
      "name": "AppointmentCardProps.time must be string",
      "type": "type",
      "severity": "error",
      "path": "AppointmentCardProps.time",
      "rule": "typeof time === 'string'",
      "autoGenerated": true
    },
    {
      "id": "rule_3_1756748912807",
      "name": "AppointmentCardProps.clientName is required",
      "type": "type",
      "severity": "error",
      "path": "AppointmentCardProps.clientName",
      "rule": "clientName !== null && clientName !== undefined",
      "autoGenerated": true
    },
    {
      "id": "rule_4_1756748912807",
      "name": "AppointmentCardProps.clientName must be string",
      "type": "type",
      "severity": "error",
      "path": "AppointmentCardProps.clientName",
      "rule": "typeof clientName === 'string'",
      "autoGenerated": true
    },
    {
      "id": "rule_5_1756748912807",
      "name": "AppointmentCardProps.service is required",
      "type": "type",
      "severity": "error",
      "path": "AppointmentCardProps.service",
      "rule": "service !== null && service !== undefined",
      "autoGenerated": true
    },
    {
      "id": "rule_6_1756748912807",
      "name": "AppointmentCardProps.service must be string",
      "type": "type",
      "severity": "error",
      "path": "AppointmentCardProps.service",
      "rule": "typeof service === 'string'",
      "autoGenerated": true
    },
    {
      "id": "rule_7_1756748912807",
      "name": "AvatarProps.src must be string",
      "type": "type",
      "severity": "error",
      "path": "AvatarProps.src",
      "rule": "typeof src === 'string'",
      "autoGenerated": true
    },
    {
      "id": "rule_8_1756748912807",
      "name": "AvatarProps.alt must be string",
      "type": "type",
      "severity": "error",
      "path": "AvatarProps.alt",
      "rule": "typeof alt === 'string'",
      "autoGenerated": true
    },
    {
      "id": "rule_9_1756748912807",
      "name": "AvatarProps.name must be string",
      "type": "type",
      "severity": "error",
      "path": "AvatarProps.name",
      "rule": "typeof name === 'string'",
      "autoGenerated": true
    },
    {
      "id": "rule_10_1756748912807",
      "name": "AvatarProps.verified must be boolean",
      "type": "type",
      "severity": "error",
      "path": "AvatarProps.verified",
      "rule": "typeof verified === 'boolean'",
      "autoGenerated": true
    },
    {
      "id": "rule_11_1756748912807",
      "name": "AvatarProps.className must be string",
      "type": "type",
      "severity": "error",
      "path": "AvatarProps.className",
      "rule": "typeof className === 'string'",
      "autoGenerated": true
    },
    {
      "id": "rule_12_1756748912807",
      "name": "BadgeProps.dot must be boolean",
      "type": "type",
      "severity": "error",
      "path": "BadgeProps.dot",
      "rule": "typeof dot === 'boolean'",
      "autoGenerated": true
    },
    {
      "id": "rule_13_1756748912807",
      "name": "BadgeProps.pulse must be boolean",
      "type": "type",
      "severity": "error",
      "path": "BadgeProps.pulse",
      "rule": "typeof pulse === 'boolean'",
      "autoGenerated": true
    },
    {
      "id": "rule_14_1756748912807",
      "name": "BadgeProps.className must be string",
      "type": "type",
      "severity": "error",
      "path": "BadgeProps.className",
      "rule": "typeof className === 'string'",
      "autoGenerated": true
    },
    {
      "id": "rule_15_1756748912807",
      "name": "NavItem.icon is required",
      "type": "type",
      "severity": "error",
      "path": "NavItem.icon",
      "rule": "icon !== null && icon !== undefined",
      "autoGenerated": true
    },
    {
      "id": "rule_16_1756748912807",
      "name": "NavItem.label is required",
      "type": "type",
      "severity": "error",
      "path": "NavItem.label",
      "rule": "label !== null && label !== undefined",
      "autoGenerated": true
    },
    {
      "id": "rule_17_1756748912807",
      "name": "NavItem.label must be string",
      "type": "type",
      "severity": "error",
      "path": "NavItem.label",
      "rule": "typeof label === 'string'",
      "autoGenerated": true
    },
    {
      "id": "rule_18_1756748912807",
      "name": "NavItem.href is required",
      "type": "type",
      "severity": "error",
      "path": "NavItem.href",
      "rule": "href !== null && href !== undefined",
      "autoGenerated": true
    },
    {
      "id": "rule_19_1756748912807",
      "name": "NavItem.href must be string",
      "type": "type",
      "severity": "error",
      "path": "NavItem.href",
      "rule": "typeof href === 'string'",
      "autoGenerated": true
    },
    {
      "id": "rule_20_1756748912807",
      "name": "NavItem.badge must be number",
      "type": "type",
      "severity": "error",
      "path": "NavItem.badge",
      "rule": "typeof badge === 'number'",
      "autoGenerated": true
    },
    {
      "id": "rule_21_1756748912807",
      "name": "ButtonProps.fullWidth must be boolean",
      "type": "type",
      "severity": "error",
      "path": "ButtonProps.fullWidth",
      "rule": "typeof fullWidth === 'boolean'",
      "autoGenerated": true
    },
    {
      "id": "rule_22_1756748912807",
      "name": "ButtonProps.loading must be boolean",
      "type": "type",
      "severity": "error",
      "path": "ButtonProps.loading",
      "rule": "typeof loading === 'boolean'",
      "autoGenerated": true
    },
    {
      "id": "rule_23_1756748912807",
      "name": "CardProps.className must be string",
      "type": "type",
      "severity": "error",
      "path": "CardProps.className",
      "rule": "typeof className === 'string'",
      "autoGenerated": true
    },
    {
      "id": "rule_24_1756748912807",
      "name": "CardProps.children is required",
      "type": "type",
      "severity": "error",
      "path": "CardProps.children",
      "rule": "children !== null && children !== undefined",
      "autoGenerated": true
    },
    {
      "id": "rule_25_1756748912807",
      "name": "CategoryCardProps.icon is required",
      "type": "type",
      "severity": "error",
      "path": "CategoryCardProps.icon",
      "rule": "icon !== null && icon !== undefined",
      "autoGenerated": true
    },
    {
      "id": "rule_26_1756748912807",
      "name": "CategoryCardProps.title is required",
      "type": "type",
      "severity": "error",
      "path": "CategoryCardProps.title",
      "rule": "title !== null && title !== undefined",
      "autoGenerated": true
    },
    {
      "id": "rule_27_1756748912807",
      "name": "CategoryCardProps.title must be string",
      "type": "type",
      "severity": "error",
      "path": "CategoryCardProps.title",
      "rule": "typeof title === 'string'",
      "autoGenerated": true
    },
    {
      "id": "rule_28_1756748912807",
      "name": "CategoryCardProps.count must be number",
      "type": "type",
      "severity": "error",
      "path": "CategoryCardProps.count",
      "rule": "typeof count === 'number'",
      "autoGenerated": true
    },
    {
      "id": "rule_29_1756748912807",
      "name": "ClientCardProps.client is required",
      "type": "type",
      "severity": "error",
      "path": "ClientCardProps.client",
      "rule": "client !== null && client !== undefined",
      "autoGenerated": true
    },
    {
      "id": "rule_30_1756748912807",
      "name": "CourseCardProps.course is required",
      "type": "type",
      "severity": "error",
      "path": "CourseCardProps.course",
      "rule": "course !== null && course !== undefined",
      "autoGenerated": true
    },
    {
      "id": "rule_31_1756748912807",
      "name": "ImageProps.src is required",
      "type": "type",
      "severity": "error",
      "path": "ImageProps.src",
      "rule": "src !== null && src !== undefined",
      "autoGenerated": true
    },
    {
      "id": "rule_32_1756748912807",
      "name": "ImageProps.src must be string",
      "type": "type",
      "severity": "error",
      "path": "ImageProps.src",
      "rule": "typeof src === 'string'",
      "autoGenerated": true
    },
    {
      "id": "rule_33_1756748912807",
      "name": "ImageProps.alt is required",
      "type": "type",
      "severity": "error",
      "path": "ImageProps.alt",
      "rule": "alt !== null && alt !== undefined",
      "autoGenerated": true
    },
    {
      "id": "rule_34_1756748912807",
      "name": "ImageProps.alt must be string",
      "type": "type",
      "severity": "error",
      "path": "ImageProps.alt",
      "rule": "typeof alt === 'string'",
      "autoGenerated": true
    },
    {
      "id": "rule_35_1756748912807",
      "name": "ImageProps.lazy must be boolean",
      "type": "type",
      "severity": "error",
      "path": "ImageProps.lazy",
      "rule": "typeof lazy === 'boolean'",
      "autoGenerated": true
    },
    {
      "id": "rule_36_1756748912807",
      "name": "InputProps.label must be string",
      "type": "type",
      "severity": "error",
      "path": "InputProps.label",
      "rule": "typeof label === 'string'",
      "autoGenerated": true
    },
    {
      "id": "rule_37_1756748912807",
      "name": "InputProps.helper must be string",
      "type": "type",
      "severity": "error",
      "path": "InputProps.helper",
      "rule": "typeof helper === 'string'",
      "autoGenerated": true
    },
    {
      "id": "rule_38_1756748912807",
      "name": "ListProps.data is required",
      "type": "type",
      "severity": "error",
      "path": "ListProps.data",
      "rule": "data !== null && data !== undefined",
      "autoGenerated": true
    },
    {
      "id": "rule_39_1756748912807",
      "name": "ListProps.renderItem is required",
      "type": "type",
      "severity": "error",
      "path": "ListProps.renderItem",
      "rule": "renderItem !== null && renderItem !== undefined",
      "autoGenerated": true
    },
    {
      "id": "rule_40_1756748912807",
      "name": "ListProps.loading must be boolean",
      "type": "type",
      "severity": "error",
      "path": "ListProps.loading",
      "rule": "typeof loading === 'boolean'",
      "autoGenerated": true
    },
    {
      "id": "rule_41_1756748912807",
      "name": "ListProps.hasMore must be boolean",
      "type": "type",
      "severity": "error",
      "path": "ListProps.hasMore",
      "rule": "typeof hasMore === 'boolean'",
      "autoGenerated": true
    },
    {
      "id": "rule_42_1756748912807",
      "name": "ListProps.className must be string",
      "type": "type",
      "severity": "error",
      "path": "ListProps.className",
      "rule": "typeof className === 'string'",
      "autoGenerated": true
    },
    {
      "id": "rule_43_1756748912807",
      "name": "ListProps.separator must be boolean",
      "type": "type",
      "severity": "error",
      "path": "ListProps.separator",
      "rule": "typeof separator === 'boolean'",
      "autoGenerated": true
    },
    {
      "id": "rule_44_1756748912807",
      "name": "LiveSessionBannerProps.session is required",
      "type": "type",
      "severity": "error",
      "path": "LiveSessionBannerProps.session",
      "rule": "session !== null && session !== undefined",
      "autoGenerated": true
    },
    {
      "id": "rule_45_1756748912807",
      "name": "NavItem.id is required",
      "type": "type",
      "severity": "error",
      "path": "NavItem.id",
      "rule": "id !== null && id !== undefined",
      "autoGenerated": true
    },
    {
      "id": "rule_46_1756748912807",
      "name": "NavItem.id must be string",
      "type": "type",
      "severity": "error",
      "path": "NavItem.id",
      "rule": "typeof id === 'string'",
      "autoGenerated": true
    },
    {
      "id": "rule_47_1756748912807",
      "name": "NavItem.label is required",
      "type": "type",
      "severity": "error",
      "path": "NavItem.label",
      "rule": "label !== null && label !== undefined",
      "autoGenerated": true
    },
    {
      "id": "rule_48_1756748912807",
      "name": "NavItem.label must be string",
      "type": "type",
      "severity": "error",
      "path": "NavItem.label",
      "rule": "typeof label === 'string'",
      "autoGenerated": true
    },
    {
      "id": "rule_49_1756748912807",
      "name": "NavItem.icon is required",
      "type": "type",
      "severity": "error",
      "path": "NavItem.icon",
      "rule": "icon !== null && icon !== undefined",
      "autoGenerated": true
    },
    {
      "id": "rule_50_1756748912807",
      "name": "NavBarProps.activeId must be string",
      "type": "type",
      "severity": "error",
      "path": "NavBarProps.activeId",
      "rule": "typeof activeId === 'string'",
      "autoGenerated": true
    },
    {
      "id": "rule_51_1756748912807",
      "name": "NavBarProps.title must be string",
      "type": "type",
      "severity": "error",
      "path": "NavBarProps.title",
      "rule": "typeof title === 'string'",
      "autoGenerated": true
    },
    {
      "id": "rule_52_1756748912807",
      "name": "NavBarProps.subtitle must be string",
      "type": "type",
      "severity": "error",
      "path": "NavBarProps.subtitle",
      "rule": "typeof subtitle === 'string'",
      "autoGenerated": true
    },
    {
      "id": "rule_53_1756748912807",
      "name": "NavBarProps.className must be string",
      "type": "type",
      "severity": "error",
      "path": "NavBarProps.className",
      "rule": "typeof className === 'string'",
      "autoGenerated": true
    },
    {
      "id": "rule_54_1756748912807",
      "name": "PageHeaderProps.title is required",
      "type": "type",
      "severity": "error",
      "path": "PageHeaderProps.title",
      "rule": "title !== null && title !== undefined",
      "autoGenerated": true
    },
    {
      "id": "rule_55_1756748912807",
      "name": "PageHeaderProps.title must be string",
      "type": "type",
      "severity": "error",
      "path": "PageHeaderProps.title",
      "rule": "typeof title === 'string'",
      "autoGenerated": true
    },
    {
      "id": "rule_56_1756748912807",
      "name": "PageHeaderProps.showSearch must be boolean",
      "type": "type",
      "severity": "error",
      "path": "PageHeaderProps.showSearch",
      "rule": "typeof showSearch === 'boolean'",
      "autoGenerated": true
    },
    {
      "id": "rule_57_1756748912807",
      "name": "PageHeaderProps.showNotification must be boolean",
      "type": "type",
      "severity": "error",
      "path": "PageHeaderProps.showNotification",
      "rule": "typeof showNotification === 'boolean'",
      "autoGenerated": true
    },
    {
      "id": "rule_58_1756748912807",
      "name": "PageHeaderProps.showAddButton must be boolean",
      "type": "type",
      "severity": "error",
      "path": "PageHeaderProps.showAddButton",
      "rule": "typeof showAddButton === 'boolean'",
      "autoGenerated": true
    },
    {
      "id": "rule_59_1756748912807",
      "name": "PostCardProps.post is required",
      "type": "type",
      "severity": "error",
      "path": "PostCardProps.post",
      "rule": "post !== null && post !== undefined",
      "autoGenerated": true
    },
    {
      "id": "rule_60_1756748912807",
      "name": "PostCardProps.professional is required",
      "type": "type",
      "severity": "error",
      "path": "PostCardProps.professional",
      "rule": "professional !== null && professional !== undefined",
      "autoGenerated": true
    },
    {
      "id": "rule_61_1756748912807",
      "name": "PostComposerProps.avatar must be string",
      "type": "type",
      "severity": "error",
      "path": "PostComposerProps.avatar",
      "rule": "typeof avatar === 'string'",
      "autoGenerated": true
    },
    {
      "id": "rule_62_1756748912807",
      "name": "PostComposerProps.placeholder must be string",
      "type": "type",
      "severity": "error",
      "path": "PostComposerProps.placeholder",
      "rule": "typeof placeholder === 'string'",
      "autoGenerated": true
    },
    {
      "id": "rule_63_1756748912807",
      "name": "ProductCardProps.product is required",
      "type": "type",
      "severity": "error",
      "path": "ProductCardProps.product",
      "rule": "product !== null && product !== undefined",
      "autoGenerated": true
    },
    {
      "id": "rule_64_1756748912807",
      "name": "ProductCardProps.quantity must be number",
      "type": "type",
      "severity": "error",
      "path": "ProductCardProps.quantity",
      "rule": "typeof quantity === 'number'",
      "autoGenerated": true
    },
    {
      "id": "rule_65_1756748912807",
      "name": "SearchBarProps.value is required",
      "type": "type",
      "severity": "error",
      "path": "SearchBarProps.value",
      "rule": "value !== null && value !== undefined",
      "autoGenerated": true
    },
    {
      "id": "rule_66_1756748912807",
      "name": "SearchBarProps.value must be string",
      "type": "type",
      "severity": "error",
      "path": "SearchBarProps.value",
      "rule": "typeof value === 'string'",
      "autoGenerated": true
    },
    {
      "id": "rule_67_1756748912807",
      "name": "SearchBarProps.onChange is required",
      "type": "type",
      "severity": "error",
      "path": "SearchBarProps.onChange",
      "rule": "onChange !== null && onChange !== undefined",
      "autoGenerated": true
    },
    {
      "id": "rule_68_1756748912807",
      "name": "SearchBarProps.placeholder must be string",
      "type": "type",
      "severity": "error",
      "path": "SearchBarProps.placeholder",
      "rule": "typeof placeholder === 'string'",
      "autoGenerated": true
    },
    {
      "id": "rule_69_1756748912807",
      "name": "SearchBarProps.className must be string",
      "type": "type",
      "severity": "error",
      "path": "SearchBarProps.className",
      "rule": "typeof className === 'string'",
      "autoGenerated": true
    },
    {
      "id": "rule_70_1756748912807",
      "name": "ServiceCardProps.icon is required",
      "type": "type",
      "severity": "error",
      "path": "ServiceCardProps.icon",
      "rule": "icon !== null && icon !== undefined",
      "autoGenerated": true
    },
    {
      "id": "rule_71_1756748912807",
      "name": "ServiceCardProps.title is required",
      "type": "type",
      "severity": "error",
      "path": "ServiceCardProps.title",
      "rule": "title !== null && title !== undefined",
      "autoGenerated": true
    },
    {
      "id": "rule_72_1756748912807",
      "name": "ServiceCardProps.title must be string",
      "type": "type",
      "severity": "error",
      "path": "ServiceCardProps.title",
      "rule": "typeof title === 'string'",
      "autoGenerated": true
    },
    {
      "id": "rule_73_1756748912807",
      "name": "ServiceCardProps.subtitle is required",
      "type": "type",
      "severity": "error",
      "path": "ServiceCardProps.subtitle",
      "rule": "subtitle !== null && subtitle !== undefined",
      "autoGenerated": true
    },
    {
      "id": "rule_74_1756748912807",
      "name": "ServiceCardProps.subtitle must be string",
      "type": "type",
      "severity": "error",
      "path": "ServiceCardProps.subtitle",
      "rule": "typeof subtitle === 'string'",
      "autoGenerated": true
    },
    {
      "id": "rule_75_1756748912807",
      "name": "SheetProps.isOpen is required",
      "type": "type",
      "severity": "error",
      "path": "SheetProps.isOpen",
      "rule": "isOpen !== null && isOpen !== undefined",
      "autoGenerated": true
    },
    {
      "id": "rule_76_1756748912807",
      "name": "SheetProps.isOpen must be boolean",
      "type": "type",
      "severity": "error",
      "path": "SheetProps.isOpen",
      "rule": "typeof isOpen === 'boolean'",
      "autoGenerated": true
    },
    {
      "id": "rule_77_1756748912807",
      "name": "SheetProps.onClose is required",
      "type": "type",
      "severity": "error",
      "path": "SheetProps.onClose",
      "rule": "onClose !== null && onClose !== undefined",
      "autoGenerated": true
    },
    {
      "id": "rule_78_1756748912807",
      "name": "SheetProps.title must be string",
      "type": "type",
      "severity": "error",
      "path": "SheetProps.title",
      "rule": "typeof title === 'string'",
      "autoGenerated": true
    },
    {
      "id": "rule_79_1756748912807",
      "name": "SheetProps.children is required",
      "type": "type",
      "severity": "error",
      "path": "SheetProps.children",
      "rule": "children !== null && children !== undefined",
      "autoGenerated": true
    },
    {
      "id": "rule_80_1756748912807",
      "name": "SheetProps.showHandle must be boolean",
      "type": "type",
      "severity": "error",
      "path": "SheetProps.showHandle",
      "rule": "typeof showHandle === 'boolean'",
      "autoGenerated": true
    },
    {
      "id": "rule_81_1756748912807",
      "name": "SheetProps.closeOnOverlay must be boolean",
      "type": "type",
      "severity": "error",
      "path": "SheetProps.closeOnOverlay",
      "rule": "typeof closeOnOverlay === 'boolean'",
      "autoGenerated": true
    },
    {
      "id": "rule_82_1756748912807",
      "name": "SheetProps.className must be string",
      "type": "type",
      "severity": "error",
      "path": "SheetProps.className",
      "rule": "typeof className === 'string'",
      "autoGenerated": true
    },
    {
      "id": "rule_83_1756748912807",
      "name": "SkeletonProps.lines must be number",
      "type": "type",
      "severity": "error",
      "path": "SkeletonProps.lines",
      "rule": "typeof lines === 'number'",
      "autoGenerated": true
    },
    {
      "id": "rule_84_1756748912807",
      "name": "SkeletonProps.className must be string",
      "type": "type",
      "severity": "error",
      "path": "SkeletonProps.className",
      "rule": "typeof className === 'string'",
      "autoGenerated": true
    },
    {
      "id": "rule_85_1756748912807",
      "name": "SkeletonProps.animate must be boolean",
      "type": "type",
      "severity": "error",
      "path": "SkeletonProps.animate",
      "rule": "typeof animate === 'boolean'",
      "autoGenerated": true
    },
    {
      "id": "rule_86_1756748912807",
      "name": "StatsCardProps.value is required",
      "type": "type",
      "severity": "error",
      "path": "StatsCardProps.value",
      "rule": "value !== null && value !== undefined",
      "autoGenerated": true
    },
    {
      "id": "rule_87_1756748912807",
      "name": "StatsCardProps.label is required",
      "type": "type",
      "severity": "error",
      "path": "StatsCardProps.label",
      "rule": "label !== null && label !== undefined",
      "autoGenerated": true
    },
    {
      "id": "rule_88_1756748912807",
      "name": "StatsCardProps.label must be string",
      "type": "type",
      "severity": "error",
      "path": "StatsCardProps.label",
      "rule": "typeof label === 'string'",
      "autoGenerated": true
    },
    {
      "id": "rule_89_1756748912807",
      "name": "StatsCardProps.highlighted must be boolean",
      "type": "type",
      "severity": "error",
      "path": "StatsCardProps.highlighted",
      "rule": "typeof highlighted === 'boolean'",
      "autoGenerated": true
    },
    {
      "id": "rule_90_1756748912807",
      "name": "StatsCardProps.prefix must be string",
      "type": "type",
      "severity": "error",
      "path": "StatsCardProps.prefix",
      "rule": "typeof prefix === 'string'",
      "autoGenerated": true
    },
    {
      "id": "rule_91_1756748912807",
      "name": "Tab.id is required",
      "type": "type",
      "severity": "error",
      "path": "Tab.id",
      "rule": "id !== null && id !== undefined",
      "autoGenerated": true
    },
    {
      "id": "rule_92_1756748912807",
      "name": "Tab.id must be string",
      "type": "type",
      "severity": "error",
      "path": "Tab.id",
      "rule": "typeof id === 'string'",
      "autoGenerated": true
    },
    {
      "id": "rule_93_1756748912807",
      "name": "Tab.label is required",
      "type": "type",
      "severity": "error",
      "path": "Tab.label",
      "rule": "label !== null && label !== undefined",
      "autoGenerated": true
    },
    {
      "id": "rule_94_1756748912807",
      "name": "Tab.label must be string",
      "type": "type",
      "severity": "error",
      "path": "Tab.label",
      "rule": "typeof label === 'string'",
      "autoGenerated": true
    },
    {
      "id": "rule_95_1756748912807",
      "name": "TabsProps.tabs is required",
      "type": "type",
      "severity": "error",
      "path": "TabsProps.tabs",
      "rule": "tabs !== null && tabs !== undefined",
      "autoGenerated": true
    },
    {
      "id": "rule_96_1756748912807",
      "name": "TabsProps.activeTab is required",
      "type": "type",
      "severity": "error",
      "path": "TabsProps.activeTab",
      "rule": "activeTab !== null && activeTab !== undefined",
      "autoGenerated": true
    },
    {
      "id": "rule_97_1756748912807",
      "name": "TabsProps.activeTab must be string",
      "type": "type",
      "severity": "error",
      "path": "TabsProps.activeTab",
      "rule": "typeof activeTab === 'string'",
      "autoGenerated": true
    },
    {
      "id": "rule_98_1756748912807",
      "name": "TabsProps.onTabChange is required",
      "type": "type",
      "severity": "error",
      "path": "TabsProps.onTabChange",
      "rule": "onTabChange !== null && onTabChange !== undefined",
      "autoGenerated": true
    },
    {
      "id": "rule_99_1756748912807",
      "name": "TabsProps.className must be string",
      "type": "type",
      "severity": "error",
      "path": "TabsProps.className",
      "rule": "typeof className === 'string'",
      "autoGenerated": true
    },
    {
      "id": "rule_100_1756748912807",
      "name": "Professional.id is required",
      "type": "type",
      "severity": "error",
      "path": "Professional.id",
      "rule": "id !== null && id !== undefined",
      "autoGenerated": true
    },
    {
      "id": "rule_101_1756748912807",
      "name": "Professional.id must be string",
      "type": "type",
      "severity": "error",
      "path": "Professional.id",
      "rule": "typeof id === 'string'",
      "autoGenerated": true
    },
    {
      "id": "rule_102_1756748912807",
      "name": "Professional.email is required",
      "type": "type",
      "severity": "error",
      "path": "Professional.email",
      "rule": "email !== null && email !== undefined",
      "autoGenerated": true
    },
    {
      "id": "rule_103_1756748912807",
      "name": "Professional.email must be string",
      "type": "type",
      "severity": "error",
      "path": "Professional.email",
      "rule": "typeof email === 'string'",
      "autoGenerated": true
    },
    {
      "id": "rule_104_1756748912807",
      "name": "Professional.phone is required",
      "type": "type",
      "severity": "error",
      "path": "Professional.phone",
      "rule": "phone !== null && phone !== undefined",
      "autoGenerated": true
    },
    {
      "id": "rule_105_1756748912807",
      "name": "Professional.phone must be string",
      "type": "type",
      "severity": "error",
      "path": "Professional.phone",
      "rule": "typeof phone === 'string'",
      "autoGenerated": true
    },
    {
      "id": "rule_106_1756748912807",
      "name": "Professional.created_at is required",
      "type": "type",
      "severity": "error",
      "path": "Professional.created_at",
      "rule": "created_at !== null && created_at !== undefined",
      "autoGenerated": true
    },
    {
      "id": "rule_107_1756748912807",
      "name": "Professional.created_at must be string",
      "type": "type",
      "severity": "error",
      "path": "Professional.created_at",
      "rule": "typeof created_at === 'string'",
      "autoGenerated": true
    },
    {
      "id": "rule_108_1756748912807",
      "name": "Professional.updated_at is required",
      "type": "type",
      "severity": "error",
      "path": "Professional.updated_at",
      "rule": "updated_at !== null && updated_at !== undefined",
      "autoGenerated": true
    },
    {
      "id": "rule_109_1756748912807",
      "name": "Professional.updated_at must be string",
      "type": "type",
      "severity": "error",
      "path": "Professional.updated_at",
      "rule": "typeof updated_at === 'string'",
      "autoGenerated": true
    },
    {
      "id": "rule_110_1756748912807",
      "name": "Professional.name is required",
      "type": "type",
      "severity": "error",
      "path": "Professional.name",
      "rule": "name !== null && name !== undefined",
      "autoGenerated": true
    },
    {
      "id": "rule_111_1756748912807",
      "name": "Professional.name must be string",
      "type": "type",
      "severity": "error",
      "path": "Professional.name",
      "rule": "typeof name === 'string'",
      "autoGenerated": true
    },
    {
      "id": "rule_112_1756748912807",
      "name": "Professional.username is required",
      "type": "type",
      "severity": "error",
      "path": "Professional.username",
      "rule": "username !== null && username !== undefined",
      "autoGenerated": true
    },
    {
      "id": "rule_113_1756748912807",
      "name": "Professional.username must be string",
      "type": "type",
      "severity": "error",
      "path": "Professional.username",
      "rule": "typeof username === 'string'",
      "autoGenerated": true
    },
    {
      "id": "rule_114_1756748912807",
      "name": "Professional.avatar_url must be string",
      "type": "type",
      "severity": "error",
      "path": "Professional.avatar_url",
      "rule": "typeof avatar_url === 'string'",
      "autoGenerated": true
    },
    {
      "id": "rule_115_1756748912807",
      "name": "Professional.bio must be string",
      "type": "type",
      "severity": "error",
      "path": "Professional.bio",
      "rule": "typeof bio === 'string'",
      "autoGenerated": true
    },
    {
      "id": "rule_116_1756748912807",
      "name": "Professional.location is required",
      "type": "type",
      "severity": "error",
      "path": "Professional.location",
      "rule": "location !== null && location !== undefined",
      "autoGenerated": true
    },
    {
      "id": "rule_117_1756748912807",
      "name": "Professional.location must be string",
      "type": "type",
      "severity": "error",
      "path": "Professional.location",
      "rule": "typeof location === 'string'",
      "autoGenerated": true
    },
    {
      "id": "rule_118_1756748912807",
      "name": "Professional.profession_type is required",
      "type": "type",
      "severity": "error",
      "path": "Professional.profession_type",
      "rule": "profession_type !== null && profession_type !== undefined",
      "autoGenerated": true
    },
    {
      "id": "rule_119_1756748912807",
      "name": "Professional.salon_name must be string",
      "type": "type",
      "severity": "error",
      "path": "Professional.salon_name",
      "rule": "typeof salon_name === 'string'",
      "autoGenerated": true
    },
    {
      "id": "rule_120_1756748912807",
      "name": "Professional.years_of_experience must be number",
      "type": "type",
      "severity": "error",
      "path": "Professional.years_of_experience",
      "rule": "typeof years_of_experience === 'number'",
      "autoGenerated": true
    },
    {
      "id": "rule_121_1756748912807",
      "name": "Professional.is_verified is required",
      "type": "type",
      "severity": "error",
      "path": "Professional.is_verified",
      "rule": "is_verified !== null && is_verified !== undefined",
      "autoGenerated": true
    },
    {
      "id": "rule_122_1756748912807",
      "name": "Professional.is_verified must be boolean",
      "type": "type",
      "severity": "error",
      "path": "Professional.is_verified",
      "rule": "typeof is_verified === 'boolean'",
      "autoGenerated": true
    },
    {
      "id": "rule_123_1756748912807",
      "name": "Professional.verification_date must be string",
      "type": "type",
      "severity": "error",
      "path": "Professional.verification_date",
      "rule": "typeof verification_date === 'string'",
      "autoGenerated": true
    },
    {
      "id": "rule_124_1756748912807",
      "name": "Professional.is_active is required",
      "type": "type",
      "severity": "error",
      "path": "Professional.is_active",
      "rule": "is_active !== null && is_active !== undefined",
      "autoGenerated": true
    },
    {
      "id": "rule_125_1756748912807",
      "name": "Professional.is_active must be boolean",
      "type": "type",
      "severity": "error",
      "path": "Professional.is_active",
      "rule": "typeof is_active === 'boolean'",
      "autoGenerated": true
    },
    {
      "id": "rule_126_1756748912807",
      "name": "Professional.last_active_at must be string",
      "type": "type",
      "severity": "error",
      "path": "Professional.last_active_at",
      "rule": "typeof last_active_at === 'string'",
      "autoGenerated": true
    },
    {
      "id": "rule_127_1756748912807",
      "name": "Post.id is required",
      "type": "type",
      "severity": "error",
      "path": "Post.id",
      "rule": "id !== null && id !== undefined",
      "autoGenerated": true
    },
    {
      "id": "rule_128_1756748912807",
      "name": "Post.id must be string",
      "type": "type",
      "severity": "error",
      "path": "Post.id",
      "rule": "typeof id === 'string'",
      "autoGenerated": true
    },
    {
      "id": "rule_129_1756748912807",
      "name": "Post.professional_id is required",
      "type": "type",
      "severity": "error",
      "path": "Post.professional_id",
      "rule": "professional_id !== null && professional_id !== undefined",
      "autoGenerated": true
    },
    {
      "id": "rule_130_1756748912807",
      "name": "Post.professional_id must be string",
      "type": "type",
      "severity": "error",
      "path": "Post.professional_id",
      "rule": "typeof professional_id === 'string'",
      "autoGenerated": true
    },
    {
      "id": "rule_131_1756748912807",
      "name": "Post.created_at is required",
      "type": "type",
      "severity": "error",
      "path": "Post.created_at",
      "rule": "created_at !== null && created_at !== undefined",
      "autoGenerated": true
    },
    {
      "id": "rule_132_1756748912807",
      "name": "Post.created_at must be string",
      "type": "type",
      "severity": "error",
      "path": "Post.created_at",
      "rule": "typeof created_at === 'string'",
      "autoGenerated": true
    },
    {
      "id": "rule_133_1756748912807",
      "name": "Post.updated_at is required",
      "type": "type",
      "severity": "error",
      "path": "Post.updated_at",
      "rule": "updated_at !== null && updated_at !== undefined",
      "autoGenerated": true
    },
    {
      "id": "rule_134_1756748912807",
      "name": "Post.updated_at must be string",
      "type": "type",
      "severity": "error",
      "path": "Post.updated_at",
      "rule": "typeof updated_at === 'string'",
      "autoGenerated": true
    },
    {
      "id": "rule_135_1756748912807",
      "name": "Post.content is required",
      "type": "type",
      "severity": "error",
      "path": "Post.content",
      "rule": "content !== null && content !== undefined",
      "autoGenerated": true
    },
    {
      "id": "rule_136_1756748912807",
      "name": "Post.content must be string",
      "type": "type",
      "severity": "error",
      "path": "Post.content",
      "rule": "typeof content === 'string'",
      "autoGenerated": true
    },
    {
      "id": "rule_137_1756748912807",
      "name": "Post.likes_count is required",
      "type": "type",
      "severity": "error",
      "path": "Post.likes_count",
      "rule": "likes_count !== null && likes_count !== undefined",
      "autoGenerated": true
    },
    {
      "id": "rule_138_1756748912807",
      "name": "Post.likes_count must be number",
      "type": "type",
      "severity": "error",
      "path": "Post.likes_count",
      "rule": "typeof likes_count === 'number'",
      "autoGenerated": true
    },
    {
      "id": "rule_139_1756748912807",
      "name": "Post.comments_count is required",
      "type": "type",
      "severity": "error",
      "path": "Post.comments_count",
      "rule": "comments_count !== null && comments_count !== undefined",
      "autoGenerated": true
    },
    {
      "id": "rule_140_1756748912807",
      "name": "Post.comments_count must be number",
      "type": "type",
      "severity": "error",
      "path": "Post.comments_count",
      "rule": "typeof comments_count === 'number'",
      "autoGenerated": true
    },
    {
      "id": "rule_141_1756748912807",
      "name": "Post.shares_count is required",
      "type": "type",
      "severity": "error",
      "path": "Post.shares_count",
      "rule": "shares_count !== null && shares_count !== undefined",
      "autoGenerated": true
    },
    {
      "id": "rule_142_1756748912807",
      "name": "Post.shares_count must be number",
      "type": "type",
      "severity": "error",
      "path": "Post.shares_count",
      "rule": "typeof shares_count === 'number'",
      "autoGenerated": true
    },
    {
      "id": "rule_143_1756748912807",
      "name": "Post.saves_count is required",
      "type": "type",
      "severity": "error",
      "path": "Post.saves_count",
      "rule": "saves_count !== null && saves_count !== undefined",
      "autoGenerated": true
    },
    {
      "id": "rule_144_1756748912807",
      "name": "Post.saves_count must be number",
      "type": "type",
      "severity": "error",
      "path": "Post.saves_count",
      "rule": "typeof saves_count === 'number'",
      "autoGenerated": true
    },
    {
      "id": "rule_145_1756748912807",
      "name": "Post.views_count is required",
      "type": "type",
      "severity": "error",
      "path": "Post.views_count",
      "rule": "views_count !== null && views_count !== undefined",
      "autoGenerated": true
    },
    {
      "id": "rule_146_1756748912807",
      "name": "Post.views_count must be number",
      "type": "type",
      "severity": "error",
      "path": "Post.views_count",
      "rule": "typeof views_count === 'number'",
      "autoGenerated": true
    },
    {
      "id": "rule_147_1756748912807",
      "name": "Post.post_type is required",
      "type": "type",
      "severity": "error",
      "path": "Post.post_type",
      "rule": "post_type !== null && post_type !== undefined",
      "autoGenerated": true
    },
    {
      "id": "rule_148_1756748912807",
      "name": "Post.is_pinned is required",
      "type": "type",
      "severity": "error",
      "path": "Post.is_pinned",
      "rule": "is_pinned !== null && is_pinned !== undefined",
      "autoGenerated": true
    },
    {
      "id": "rule_149_1756748912807",
      "name": "Post.is_pinned must be boolean",
      "type": "type",
      "severity": "error",
      "path": "Post.is_pinned",
      "rule": "typeof is_pinned === 'boolean'",
      "autoGenerated": true
    },
    {
      "id": "rule_150_1756748912807",
      "name": "Post.is_archived is required",
      "type": "type",
      "severity": "error",
      "path": "Post.is_archived",
      "rule": "is_archived !== null && is_archived !== undefined",
      "autoGenerated": true
    },
    {
      "id": "rule_151_1756748912807",
      "name": "Post.is_archived must be boolean",
      "type": "type",
      "severity": "error",
      "path": "Post.is_archived",
      "rule": "typeof is_archived === 'boolean'",
      "autoGenerated": true
    },
    {
      "id": "rule_152_1756748912807",
      "name": "Post.visibility is required",
      "type": "type",
      "severity": "error",
      "path": "Post.visibility",
      "rule": "visibility !== null && visibility !== undefined",
      "autoGenerated": true
    },
    {
      "id": "rule_153_1756748912807",
      "name": "PostEngagement.id is required",
      "type": "type",
      "severity": "error",
      "path": "PostEngagement.id",
      "rule": "id !== null && id !== undefined",
      "autoGenerated": true
    },
    {
      "id": "rule_154_1756748912807",
      "name": "PostEngagement.id must be string",
      "type": "type",
      "severity": "error",
      "path": "PostEngagement.id",
      "rule": "typeof id === 'string'",
      "autoGenerated": true
    },
    {
      "id": "rule_155_1756748912807",
      "name": "PostEngagement.post_id is required",
      "type": "type",
      "severity": "error",
      "path": "PostEngagement.post_id",
      "rule": "post_id !== null && post_id !== undefined",
      "autoGenerated": true
    },
    {
      "id": "rule_156_1756748912807",
      "name": "PostEngagement.post_id must be string",
      "type": "type",
      "severity": "error",
      "path": "PostEngagement.post_id",
      "rule": "typeof post_id === 'string'",
      "autoGenerated": true
    },
    {
      "id": "rule_157_1756748912807",
      "name": "PostEngagement.professional_id is required",
      "type": "type",
      "severity": "error",
      "path": "PostEngagement.professional_id",
      "rule": "professional_id !== null && professional_id !== undefined",
      "autoGenerated": true
    },
    {
      "id": "rule_158_1756748912807",
      "name": "PostEngagement.professional_id must be string",
      "type": "type",
      "severity": "error",
      "path": "PostEngagement.professional_id",
      "rule": "typeof professional_id === 'string'",
      "autoGenerated": true
    },
    {
      "id": "rule_159_1756748912807",
      "name": "PostEngagement.engagement_type is required",
      "type": "type",
      "severity": "error",
      "path": "PostEngagement.engagement_type",
      "rule": "engagement_type !== null && engagement_type !== undefined",
      "autoGenerated": true
    },
    {
      "id": "rule_160_1756748912807",
      "name": "PostEngagement.created_at is required",
      "type": "type",
      "severity": "error",
      "path": "PostEngagement.created_at",
      "rule": "created_at !== null && created_at !== undefined",
      "autoGenerated": true
    },
    {
      "id": "rule_161_1756748912807",
      "name": "PostEngagement.created_at must be string",
      "type": "type",
      "severity": "error",
      "path": "PostEngagement.created_at",
      "rule": "typeof created_at === 'string'",
      "autoGenerated": true
    },
    {
      "id": "rule_162_1756748912807",
      "name": "Comment.id is required",
      "type": "type",
      "severity": "error",
      "path": "Comment.id",
      "rule": "id !== null && id !== undefined",
      "autoGenerated": true
    },
    {
      "id": "rule_163_1756748912807",
      "name": "Comment.id must be string",
      "type": "type",
      "severity": "error",
      "path": "Comment.id",
      "rule": "typeof id === 'string'",
      "autoGenerated": true
    },
    {
      "id": "rule_164_1756748912807",
      "name": "Comment.post_id is required",
      "type": "type",
      "severity": "error",
      "path": "Comment.post_id",
      "rule": "post_id !== null && post_id !== undefined",
      "autoGenerated": true
    },
    {
      "id": "rule_165_1756748912807",
      "name": "Comment.post_id must be string",
      "type": "type",
      "severity": "error",
      "path": "Comment.post_id",
      "rule": "typeof post_id === 'string'",
      "autoGenerated": true
    },
    {
      "id": "rule_166_1756748912807",
      "name": "Comment.professional_id is required",
      "type": "type",
      "severity": "error",
      "path": "Comment.professional_id",
      "rule": "professional_id !== null && professional_id !== undefined",
      "autoGenerated": true
    },
    {
      "id": "rule_167_1756748912807",
      "name": "Comment.professional_id must be string",
      "type": "type",
      "severity": "error",
      "path": "Comment.professional_id",
      "rule": "typeof professional_id === 'string'",
      "autoGenerated": true
    },
    {
      "id": "rule_168_1756748912807",
      "name": "Comment.parent_comment_id must be string",
      "type": "type",
      "severity": "error",
      "path": "Comment.parent_comment_id",
      "rule": "typeof parent_comment_id === 'string'",
      "autoGenerated": true
    },
    {
      "id": "rule_169_1756748912807",
      "name": "Comment.content is required",
      "type": "type",
      "severity": "error",
      "path": "Comment.content",
      "rule": "content !== null && content !== undefined",
      "autoGenerated": true
    },
    {
      "id": "rule_170_1756748912807",
      "name": "Comment.content must be string",
      "type": "type",
      "severity": "error",
      "path": "Comment.content",
      "rule": "typeof content === 'string'",
      "autoGenerated": true
    },
    {
      "id": "rule_171_1756748912807",
      "name": "Comment.created_at is required",
      "type": "type",
      "severity": "error",
      "path": "Comment.created_at",
      "rule": "created_at !== null && created_at !== undefined",
      "autoGenerated": true
    },
    {
      "id": "rule_172_1756748912807",
      "name": "Comment.created_at must be string",
      "type": "type",
      "severity": "error",
      "path": "Comment.created_at",
      "rule": "typeof created_at === 'string'",
      "autoGenerated": true
    },
    {
      "id": "rule_173_1756748912807",
      "name": "Comment.updated_at is required",
      "type": "type",
      "severity": "error",
      "path": "Comment.updated_at",
      "rule": "updated_at !== null && updated_at !== undefined",
      "autoGenerated": true
    },
    {
      "id": "rule_174_1756748912807",
      "name": "Comment.updated_at must be string",
      "type": "type",
      "severity": "error",
      "path": "Comment.updated_at",
      "rule": "typeof updated_at === 'string'",
      "autoGenerated": true
    },
    {
      "id": "rule_175_1756748912807",
      "name": "Comment.likes_count is required",
      "type": "type",
      "severity": "error",
      "path": "Comment.likes_count",
      "rule": "likes_count !== null && likes_count !== undefined",
      "autoGenerated": true
    },
    {
      "id": "rule_176_1756748912807",
      "name": "Comment.likes_count must be number",
      "type": "type",
      "severity": "error",
      "path": "Comment.likes_count",
      "rule": "typeof likes_count === 'number'",
      "autoGenerated": true
    },
    {
      "id": "rule_177_1756748912807",
      "name": "Comment.is_edited is required",
      "type": "type",
      "severity": "error",
      "path": "Comment.is_edited",
      "rule": "is_edited !== null && is_edited !== undefined",
      "autoGenerated": true
    },
    {
      "id": "rule_178_1756748912807",
      "name": "Comment.is_edited must be boolean",
      "type": "type",
      "severity": "error",
      "path": "Comment.is_edited",
      "rule": "typeof is_edited === 'boolean'",
      "autoGenerated": true
    },
    {
      "id": "rule_179_1756748912807",
      "name": "LiveSession.id is required",
      "type": "type",
      "severity": "error",
      "path": "LiveSession.id",
      "rule": "id !== null && id !== undefined",
      "autoGenerated": true
    },
    {
      "id": "rule_180_1756748912807",
      "name": "LiveSession.id must be string",
      "type": "type",
      "severity": "error",
      "path": "LiveSession.id",
      "rule": "typeof id === 'string'",
      "autoGenerated": true
    },
    {
      "id": "rule_181_1756748912807",
      "name": "LiveSession.host_professional_id is required",
      "type": "type",
      "severity": "error",
      "path": "LiveSession.host_professional_id",
      "rule": "host_professional_id !== null && host_professional_id !== undefined",
      "autoGenerated": true
    },
    {
      "id": "rule_182_1756748912807",
      "name": "LiveSession.host_professional_id must be string",
      "type": "type",
      "severity": "error",
      "path": "LiveSession.host_professional_id",
      "rule": "typeof host_professional_id === 'string'",
      "autoGenerated": true
    },
    {
      "id": "rule_183_1756748912807",
      "name": "LiveSession.created_at is required",
      "type": "type",
      "severity": "error",
      "path": "LiveSession.created_at",
      "rule": "created_at !== null && created_at !== undefined",
      "autoGenerated": true
    },
    {
      "id": "rule_184_1756748912807",
      "name": "LiveSession.created_at must be string",
      "type": "type",
      "severity": "error",
      "path": "LiveSession.created_at",
      "rule": "typeof created_at === 'string'",
      "autoGenerated": true
    },
    {
      "id": "rule_185_1756748912807",
      "name": "LiveSession.started_at must be string",
      "type": "type",
      "severity": "error",
      "path": "LiveSession.started_at",
      "rule": "typeof started_at === 'string'",
      "autoGenerated": true
    },
    {
      "id": "rule_186_1756748912807",
      "name": "LiveSession.ended_at must be string",
      "type": "type",
      "severity": "error",
      "path": "LiveSession.ended_at",
      "rule": "typeof ended_at === 'string'",
      "autoGenerated": true
    },
    {
      "id": "rule_187_1756748912807",
      "name": "LiveSession.title is required",
      "type": "type",
      "severity": "error",
      "path": "LiveSession.title",
      "rule": "title !== null && title !== undefined",
      "autoGenerated": true
    },
    {
      "id": "rule_188_1756748912807",
      "name": "LiveSession.title must be string",
      "type": "type",
      "severity": "error",
      "path": "LiveSession.title",
      "rule": "typeof title === 'string'",
      "autoGenerated": true
    },
    {
      "id": "rule_189_1756748912807",
      "name": "LiveSession.description is required",
      "type": "type",
      "severity": "error",
      "path": "LiveSession.description",
      "rule": "description !== null && description !== undefined",
      "autoGenerated": true
    },
    {
      "id": "rule_190_1756748912807",
      "name": "LiveSession.description must be string",
      "type": "type",
      "severity": "error",
      "path": "LiveSession.description",
      "rule": "typeof description === 'string'",
      "autoGenerated": true
    },
    {
      "id": "rule_191_1756748912807",
      "name": "LiveSession.thumbnail_url must be string",
      "type": "type",
      "severity": "error",
      "path": "LiveSession.thumbnail_url",
      "rule": "typeof thumbnail_url === 'string'",
      "autoGenerated": true
    },
    {
      "id": "rule_192_1756748912807",
      "name": "LiveSession.stream_url must be string",
      "type": "type",
      "severity": "error",
      "path": "LiveSession.stream_url",
      "rule": "typeof stream_url === 'string'",
      "autoGenerated": true
    },
    {
      "id": "rule_193_1756748912807",
      "name": "LiveSession.session_type is required",
      "type": "type",
      "severity": "error",
      "path": "LiveSession.session_type",
      "rule": "session_type !== null && session_type !== undefined",
      "autoGenerated": true
    },
    {
      "id": "rule_194_1756748912807",
      "name": "LiveSession.category is required",
      "type": "type",
      "severity": "error",
      "path": "LiveSession.category",
      "rule": "category !== null && category !== undefined",
      "autoGenerated": true
    },
    {
      "id": "rule_195_1756748912807",
      "name": "LiveSession.viewer_count is required",
      "type": "type",
      "severity": "error",
      "path": "LiveSession.viewer_count",
      "rule": "viewer_count !== null && viewer_count !== undefined",
      "autoGenerated": true
    },
    {
      "id": "rule_196_1756748912807",
      "name": "LiveSession.viewer_count must be number",
      "type": "type",
      "severity": "error",
      "path": "LiveSession.viewer_count",
      "rule": "typeof viewer_count === 'number'",
      "autoGenerated": true
    },
    {
      "id": "rule_197_1756748912807",
      "name": "LiveSession.max_viewers is required",
      "type": "type",
      "severity": "error",
      "path": "LiveSession.max_viewers",
      "rule": "max_viewers !== null && max_viewers !== undefined",
      "autoGenerated": true
    },
    {
      "id": "rule_198_1756748912807",
      "name": "LiveSession.max_viewers must be number",
      "type": "type",
      "severity": "error",
      "path": "LiveSession.max_viewers",
      "rule": "typeof max_viewers === 'number'",
      "autoGenerated": true
    },
    {
      "id": "rule_199_1756748912807",
      "name": "LiveSession.status is required",
      "type": "type",
      "severity": "error",
      "path": "LiveSession.status",
      "rule": "status !== null && status !== undefined",
      "autoGenerated": true
    },
    {
      "id": "rule_200_1756748912807",
      "name": "LiveSession.is_featured is required",
      "type": "type",
      "severity": "error",
      "path": "LiveSession.is_featured",
      "rule": "is_featured !== null && is_featured !== undefined",
      "autoGenerated": true
    },
    {
      "id": "rule_201_1756748912807",
      "name": "LiveSession.is_featured must be boolean",
      "type": "type",
      "severity": "error",
      "path": "LiveSession.is_featured",
      "rule": "typeof is_featured === 'boolean'",
      "autoGenerated": true
    },
    {
      "id": "rule_202_1756748912807",
      "name": "LiveSession.recording_url must be string",
      "type": "type",
      "severity": "error",
      "path": "LiveSession.recording_url",
      "rule": "typeof recording_url === 'string'",
      "autoGenerated": true
    },
    {
      "id": "rule_203_1756748912807",
      "name": "LiveSession.provides_certificate is required",
      "type": "type",
      "severity": "error",
      "path": "LiveSession.provides_certificate",
      "rule": "provides_certificate !== null && provides_certificate !== undefined",
      "autoGenerated": true
    },
    {
      "id": "rule_204_1756748912807",
      "name": "LiveSession.provides_certificate must be boolean",
      "type": "type",
      "severity": "error",
      "path": "LiveSession.provides_certificate",
      "rule": "typeof provides_certificate === 'boolean'",
      "autoGenerated": true
    },
    {
      "id": "rule_205_1756748912807",
      "name": "LiveSession.certificate_requirements must be string",
      "type": "type",
      "severity": "error",
      "path": "LiveSession.certificate_requirements",
      "rule": "typeof certificate_requirements === 'string'",
      "autoGenerated": true
    },
    {
      "id": "rule_206_1756748912807",
      "name": "Product.id is required",
      "type": "type",
      "severity": "error",
      "path": "Product.id",
      "rule": "id !== null && id !== undefined",
      "autoGenerated": true
    },
    {
      "id": "rule_207_1756748912807",
      "name": "Product.id must be string",
      "type": "type",
      "severity": "error",
      "path": "Product.id",
      "rule": "typeof id === 'string'",
      "autoGenerated": true
    },
    {
      "id": "rule_208_1756748912807",
      "name": "Product.created_at is required",
      "type": "type",
      "severity": "error",
      "path": "Product.created_at",
      "rule": "created_at !== null && created_at !== undefined",
      "autoGenerated": true
    },
    {
      "id": "rule_209_1756748912807",
      "name": "Product.created_at must be string",
      "type": "type",
      "severity": "error",
      "path": "Product.created_at",
      "rule": "typeof created_at === 'string'",
      "autoGenerated": true
    },
    {
      "id": "rule_210_1756748912807",
      "name": "Product.updated_at is required",
      "type": "type",
      "severity": "error",
      "path": "Product.updated_at",
      "rule": "updated_at !== null && updated_at !== undefined",
      "autoGenerated": true
    },
    {
      "id": "rule_211_1756748912807",
      "name": "Product.updated_at must be string",
      "type": "type",
      "severity": "error",
      "path": "Product.updated_at",
      "rule": "typeof updated_at === 'string'",
      "autoGenerated": true
    },
    {
      "id": "rule_212_1756748912807",
      "name": "Product.name is required",
      "type": "type",
      "severity": "error",
      "path": "Product.name",
      "rule": "name !== null && name !== undefined",
      "autoGenerated": true
    },
    {
      "id": "rule_213_1756748912807",
      "name": "Product.name must be string",
      "type": "type",
      "severity": "error",
      "path": "Product.name",
      "rule": "typeof name === 'string'",
      "autoGenerated": true
    },
    {
      "id": "rule_214_1756748912807",
      "name": "Product.description is required",
      "type": "type",
      "severity": "error",
      "path": "Product.description",
      "rule": "description !== null && description !== undefined",
      "autoGenerated": true
    },
    {
      "id": "rule_215_1756748912807",
      "name": "Product.description must be string",
      "type": "type",
      "severity": "error",
      "path": "Product.description",
      "rule": "typeof description === 'string'",
      "autoGenerated": true
    },
    {
      "id": "rule_216_1756748912807",
      "name": "Product.category is required",
      "type": "type",
      "severity": "error",
      "path": "Product.category",
      "rule": "category !== null && category !== undefined",
      "autoGenerated": true
    },
    {
      "id": "rule_217_1756748912807",
      "name": "Product.sub_category must be string",
      "type": "type",
      "severity": "error",
      "path": "Product.sub_category",
      "rule": "typeof sub_category === 'string'",
      "autoGenerated": true
    },
    {
      "id": "rule_218_1756748912807",
      "name": "Product.brand is required",
      "type": "type",
      "severity": "error",
      "path": "Product.brand",
      "rule": "brand !== null && brand !== undefined",
      "autoGenerated": true
    },
    {
      "id": "rule_219_1756748912807",
      "name": "Product.brand must be string",
      "type": "type",
      "severity": "error",
      "path": "Product.brand",
      "rule": "typeof brand === 'string'",
      "autoGenerated": true
    },
    {
      "id": "rule_220_1756748912807",
      "name": "Product.sku is required",
      "type": "type",
      "severity": "error",
      "path": "Product.sku",
      "rule": "sku !== null && sku !== undefined",
      "autoGenerated": true
    },
    {
      "id": "rule_221_1756748912807",
      "name": "Product.sku must be string",
      "type": "type",
      "severity": "error",
      "path": "Product.sku",
      "rule": "typeof sku === 'string'",
      "autoGenerated": true
    },
    {
      "id": "rule_222_1756748912807",
      "name": "Product.mrp is required",
      "type": "type",
      "severity": "error",
      "path": "Product.mrp",
      "rule": "mrp !== null && mrp !== undefined",
      "autoGenerated": true
    },
    {
      "id": "rule_223_1756748912807",
      "name": "Product.mrp must be number",
      "type": "type",
      "severity": "error",
      "path": "Product.mrp",
      "rule": "typeof mrp === 'number'",
      "autoGenerated": true
    },
    {
      "id": "rule_224_1756748912807",
      "name": "Product.professional_price is required",
      "type": "type",
      "severity": "error",
      "path": "Product.professional_price",
      "rule": "professional_price !== null && professional_price !== undefined",
      "autoGenerated": true
    },
    {
      "id": "rule_225_1756748912807",
      "name": "Product.professional_price must be number",
      "type": "type",
      "severity": "error",
      "path": "Product.professional_price",
      "rule": "typeof professional_price === 'number'",
      "autoGenerated": true
    },
    {
      "id": "rule_226_1756748912807",
      "name": "Product.bulk_price must be number",
      "type": "type",
      "severity": "error",
      "path": "Product.bulk_price",
      "rule": "typeof bulk_price === 'number'",
      "autoGenerated": true
    },
    {
      "id": "rule_227_1756748912807",
      "name": "Product.bulk_minimum_quantity must be number",
      "type": "type",
      "severity": "error",
      "path": "Product.bulk_minimum_quantity",
      "rule": "typeof bulk_minimum_quantity === 'number'",
      "autoGenerated": true
    },
    {
      "id": "rule_228_1756748912807",
      "name": "Product.currency is required",
      "type": "type",
      "severity": "error",
      "path": "Product.currency",
      "rule": "currency !== null && currency !== undefined",
      "autoGenerated": true
    },
    {
      "id": "rule_229_1756748912807",
      "name": "Product.image_urls is required",
      "type": "type",
      "severity": "error",
      "path": "Product.image_urls",
      "rule": "image_urls !== null && image_urls !== undefined",
      "autoGenerated": true
    },
    {
      "id": "rule_230_1756748912807",
      "name": "Product.video_url must be string",
      "type": "type",
      "severity": "error",
      "path": "Product.video_url",
      "rule": "typeof video_url === 'string'",
      "autoGenerated": true
    },
    {
      "id": "rule_231_1756748912807",
      "name": "Product.stock_quantity is required",
      "type": "type",
      "severity": "error",
      "path": "Product.stock_quantity",
      "rule": "stock_quantity !== null && stock_quantity !== undefined",
      "autoGenerated": true
    },
    {
      "id": "rule_232_1756748912807",
      "name": "Product.stock_quantity must be number",
      "type": "type",
      "severity": "error",
      "path": "Product.stock_quantity",
      "rule": "typeof stock_quantity === 'number'",
      "autoGenerated": true
    },
    {
      "id": "rule_233_1756748912807",
      "name": "Product.is_in_stock is required",
      "type": "type",
      "severity": "error",
      "path": "Product.is_in_stock",
      "rule": "is_in_stock !== null && is_in_stock !== undefined",
      "autoGenerated": true
    },
    {
      "id": "rule_234_1756748912807",
      "name": "Product.is_in_stock must be boolean",
      "type": "type",
      "severity": "error",
      "path": "Product.is_in_stock",
      "rule": "typeof is_in_stock === 'boolean'",
      "autoGenerated": true
    },
    {
      "id": "rule_235_1756748912807",
      "name": "Product.restock_date must be string",
      "type": "type",
      "severity": "error",
      "path": "Product.restock_date",
      "rule": "typeof restock_date === 'string'",
      "autoGenerated": true
    },
    {
      "id": "rule_236_1756748912807",
      "name": "Product.rating is required",
      "type": "type",
      "severity": "error",
      "path": "Product.rating",
      "rule": "rating !== null && rating !== undefined",
      "autoGenerated": true
    },
    {
      "id": "rule_237_1756748912807",
      "name": "Product.rating must be number",
      "type": "type",
      "severity": "error",
      "path": "Product.rating",
      "rule": "typeof rating === 'number'",
      "autoGenerated": true
    },
    {
      "id": "rule_238_1756748912807",
      "name": "Product.reviews_count is required",
      "type": "type",
      "severity": "error",
      "path": "Product.reviews_count",
      "rule": "reviews_count !== null && reviews_count !== undefined",
      "autoGenerated": true
    },
    {
      "id": "rule_239_1756748912807",
      "name": "Product.reviews_count must be number",
      "type": "type",
      "severity": "error",
      "path": "Product.reviews_count",
      "rule": "typeof reviews_count === 'number'",
      "autoGenerated": true
    },
    {
      "id": "rule_240_1756748912807",
      "name": "Product.is_active is required",
      "type": "type",
      "severity": "error",
      "path": "Product.is_active",
      "rule": "is_active !== null && is_active !== undefined",
      "autoGenerated": true
    },
    {
      "id": "rule_241_1756748912807",
      "name": "Product.is_active must be boolean",
      "type": "type",
      "severity": "error",
      "path": "Product.is_active",
      "rule": "typeof is_active === 'boolean'",
      "autoGenerated": true
    },
    {
      "id": "rule_242_1756748912807",
      "name": "Product.is_featured is required",
      "type": "type",
      "severity": "error",
      "path": "Product.is_featured",
      "rule": "is_featured !== null && is_featured !== undefined",
      "autoGenerated": true
    },
    {
      "id": "rule_243_1756748912807",
      "name": "Product.is_featured must be boolean",
      "type": "type",
      "severity": "error",
      "path": "Product.is_featured",
      "rule": "typeof is_featured === 'boolean'",
      "autoGenerated": true
    },
    {
      "id": "rule_244_1756748912807",
      "name": "Order.id is required",
      "type": "type",
      "severity": "error",
      "path": "Order.id",
      "rule": "id !== null && id !== undefined",
      "autoGenerated": true
    },
    {
      "id": "rule_245_1756748912807",
      "name": "Order.id must be string",
      "type": "type",
      "severity": "error",
      "path": "Order.id",
      "rule": "typeof id === 'string'",
      "autoGenerated": true
    },
    {
      "id": "rule_246_1756748912807",
      "name": "Order.professional_id is required",
      "type": "type",
      "severity": "error",
      "path": "Order.professional_id",
      "rule": "professional_id !== null && professional_id !== undefined",
      "autoGenerated": true
    },
    {
      "id": "rule_247_1756748912807",
      "name": "Order.professional_id must be string",
      "type": "type",
      "severity": "error",
      "path": "Order.professional_id",
      "rule": "typeof professional_id === 'string'",
      "autoGenerated": true
    },
    {
      "id": "rule_248_1756748912807",
      "name": "Order.created_at is required",
      "type": "type",
      "severity": "error",
      "path": "Order.created_at",
      "rule": "created_at !== null && created_at !== undefined",
      "autoGenerated": true
    },
    {
      "id": "rule_249_1756748912807",
      "name": "Order.created_at must be string",
      "type": "type",
      "severity": "error",
      "path": "Order.created_at",
      "rule": "typeof created_at === 'string'",
      "autoGenerated": true
    },
    {
      "id": "rule_250_1756748912807",
      "name": "Order.updated_at is required",
      "type": "type",
      "severity": "error",
      "path": "Order.updated_at",
      "rule": "updated_at !== null && updated_at !== undefined",
      "autoGenerated": true
    },
    {
      "id": "rule_251_1756748912807",
      "name": "Order.updated_at must be string",
      "type": "type",
      "severity": "error",
      "path": "Order.updated_at",
      "rule": "typeof updated_at === 'string'",
      "autoGenerated": true
    },
    {
      "id": "rule_252_1756748912807",
      "name": "Order.order_number is required",
      "type": "type",
      "severity": "error",
      "path": "Order.order_number",
      "rule": "order_number !== null && order_number !== undefined",
      "autoGenerated": true
    },
    {
      "id": "rule_253_1756748912807",
      "name": "Order.order_number must be string",
      "type": "type",
      "severity": "error",
      "path": "Order.order_number",
      "rule": "typeof order_number === 'string'",
      "autoGenerated": true
    },
    {
      "id": "rule_254_1756748912807",
      "name": "Order.order_date is required",
      "type": "type",
      "severity": "error",
      "path": "Order.order_date",
      "rule": "order_date !== null && order_date !== undefined",
      "autoGenerated": true
    },
    {
      "id": "rule_255_1756748912807",
      "name": "Order.order_date must be string",
      "type": "type",
      "severity": "error",
      "path": "Order.order_date",
      "rule": "typeof order_date === 'string'",
      "autoGenerated": true
    },
    {
      "id": "rule_256_1756748912807",
      "name": "Order.total_amount is required",
      "type": "type",
      "severity": "error",
      "path": "Order.total_amount",
      "rule": "total_amount !== null && total_amount !== undefined",
      "autoGenerated": true
    },
    {
      "id": "rule_257_1756748912807",
      "name": "Order.total_amount must be number",
      "type": "type",
      "severity": "error",
      "path": "Order.total_amount",
      "rule": "typeof total_amount === 'number'",
      "autoGenerated": true
    },
    {
      "id": "rule_258_1756748912807",
      "name": "Order.tax_amount is required",
      "type": "type",
      "severity": "error",
      "path": "Order.tax_amount",
      "rule": "tax_amount !== null && tax_amount !== undefined",
      "autoGenerated": true
    },
    {
      "id": "rule_259_1756748912807",
      "name": "Order.tax_amount must be number",
      "type": "type",
      "severity": "error",
      "path": "Order.tax_amount",
      "rule": "typeof tax_amount === 'number'",
      "autoGenerated": true
    },
    {
      "id": "rule_260_1756748912807",
      "name": "Order.discount_amount is required",
      "type": "type",
      "severity": "error",
      "path": "Order.discount_amount",
      "rule": "discount_amount !== null && discount_amount !== undefined",
      "autoGenerated": true
    },
    {
      "id": "rule_261_1756748912807",
      "name": "Order.discount_amount must be number",
      "type": "type",
      "severity": "error",
      "path": "Order.discount_amount",
      "rule": "typeof discount_amount === 'number'",
      "autoGenerated": true
    },
    {
      "id": "rule_262_1756748912807",
      "name": "Order.final_amount is required",
      "type": "type",
      "severity": "error",
      "path": "Order.final_amount",
      "rule": "final_amount !== null && final_amount !== undefined",
      "autoGenerated": true
    },
    {
      "id": "rule_263_1756748912807",
      "name": "Order.final_amount must be number",
      "type": "type",
      "severity": "error",
      "path": "Order.final_amount",
      "rule": "typeof final_amount === 'number'",
      "autoGenerated": true
    },
    {
      "id": "rule_264_1756748912807",
      "name": "Order.currency is required",
      "type": "type",
      "severity": "error",
      "path": "Order.currency",
      "rule": "currency !== null && currency !== undefined",
      "autoGenerated": true
    },
    {
      "id": "rule_265_1756748912807",
      "name": "Order.status is required",
      "type": "type",
      "severity": "error",
      "path": "Order.status",
      "rule": "status !== null && status !== undefined",
      "autoGenerated": true
    },
    {
      "id": "rule_266_1756748912807",
      "name": "Order.payment_status is required",
      "type": "type",
      "severity": "error",
      "path": "Order.payment_status",
      "rule": "payment_status !== null && payment_status !== undefined",
      "autoGenerated": true
    },
    {
      "id": "rule_267_1756748912807",
      "name": "Order.payment_method is required",
      "type": "type",
      "severity": "error",
      "path": "Order.payment_method",
      "rule": "payment_method !== null && payment_method !== undefined",
      "autoGenerated": true
    },
    {
      "id": "rule_268_1756748912807",
      "name": "Order.shipping_address is required",
      "type": "type",
      "severity": "error",
      "path": "Order.shipping_address",
      "rule": "shipping_address !== null && shipping_address !== undefined",
      "autoGenerated": true
    },
    {
      "id": "rule_269_1756748912807",
      "name": "Order.tracking_number must be string",
      "type": "type",
      "severity": "error",
      "path": "Order.tracking_number",
      "rule": "typeof tracking_number === 'string'",
      "autoGenerated": true
    },
    {
      "id": "rule_270_1756748912807",
      "name": "Order.expected_delivery must be string",
      "type": "type",
      "severity": "error",
      "path": "Order.expected_delivery",
      "rule": "typeof expected_delivery === 'string'",
      "autoGenerated": true
    },
    {
      "id": "rule_271_1756748912807",
      "name": "Order.delivered_at must be string",
      "type": "type",
      "severity": "error",
      "path": "Order.delivered_at",
      "rule": "typeof delivered_at === 'string'",
      "autoGenerated": true
    },
    {
      "id": "rule_272_1756748912807",
      "name": "OrderItem.id is required",
      "type": "type",
      "severity": "error",
      "path": "OrderItem.id",
      "rule": "id !== null && id !== undefined",
      "autoGenerated": true
    },
    {
      "id": "rule_273_1756748912807",
      "name": "OrderItem.id must be string",
      "type": "type",
      "severity": "error",
      "path": "OrderItem.id",
      "rule": "typeof id === 'string'",
      "autoGenerated": true
    },
    {
      "id": "rule_274_1756748912807",
      "name": "OrderItem.order_id is required",
      "type": "type",
      "severity": "error",
      "path": "OrderItem.order_id",
      "rule": "order_id !== null && order_id !== undefined",
      "autoGenerated": true
    },
    {
      "id": "rule_275_1756748912807",
      "name": "OrderItem.order_id must be string",
      "type": "type",
      "severity": "error",
      "path": "OrderItem.order_id",
      "rule": "typeof order_id === 'string'",
      "autoGenerated": true
    },
    {
      "id": "rule_276_1756748912807",
      "name": "OrderItem.product_id is required",
      "type": "type",
      "severity": "error",
      "path": "OrderItem.product_id",
      "rule": "product_id !== null && product_id !== undefined",
      "autoGenerated": true
    },
    {
      "id": "rule_277_1756748912807",
      "name": "OrderItem.product_id must be string",
      "type": "type",
      "severity": "error",
      "path": "OrderItem.product_id",
      "rule": "typeof product_id === 'string'",
      "autoGenerated": true
    },
    {
      "id": "rule_278_1756748912807",
      "name": "OrderItem.quantity is required",
      "type": "type",
      "severity": "error",
      "path": "OrderItem.quantity",
      "rule": "quantity !== null && quantity !== undefined",
      "autoGenerated": true
    },
    {
      "id": "rule_279_1756748912807",
      "name": "OrderItem.quantity must be number",
      "type": "type",
      "severity": "error",
      "path": "OrderItem.quantity",
      "rule": "typeof quantity === 'number'",
      "autoGenerated": true
    },
    {
      "id": "rule_280_1756748912807",
      "name": "OrderItem.unit_price is required",
      "type": "type",
      "severity": "error",
      "path": "OrderItem.unit_price",
      "rule": "unit_price !== null && unit_price !== undefined",
      "autoGenerated": true
    },
    {
      "id": "rule_281_1756748912807",
      "name": "OrderItem.unit_price must be number",
      "type": "type",
      "severity": "error",
      "path": "OrderItem.unit_price",
      "rule": "typeof unit_price === 'number'",
      "autoGenerated": true
    },
    {
      "id": "rule_282_1756748912807",
      "name": "OrderItem.total_price is required",
      "type": "type",
      "severity": "error",
      "path": "OrderItem.total_price",
      "rule": "total_price !== null && total_price !== undefined",
      "autoGenerated": true
    },
    {
      "id": "rule_283_1756748912807",
      "name": "OrderItem.total_price must be number",
      "type": "type",
      "severity": "error",
      "path": "OrderItem.total_price",
      "rule": "typeof total_price === 'number'",
      "autoGenerated": true
    },
    {
      "id": "rule_284_1756748912807",
      "name": "OrderItem.discount_amount is required",
      "type": "type",
      "severity": "error",
      "path": "OrderItem.discount_amount",
      "rule": "discount_amount !== null && discount_amount !== undefined",
      "autoGenerated": true
    },
    {
      "id": "rule_285_1756748912807",
      "name": "OrderItem.discount_amount must be number",
      "type": "type",
      "severity": "error",
      "path": "OrderItem.discount_amount",
      "rule": "typeof discount_amount === 'number'",
      "autoGenerated": true
    },
    {
      "id": "rule_286_1756748912807",
      "name": "InsurancePolicy.id is required",
      "type": "type",
      "severity": "error",
      "path": "InsurancePolicy.id",
      "rule": "id !== null && id !== undefined",
      "autoGenerated": true
    },
    {
      "id": "rule_287_1756748912807",
      "name": "InsurancePolicy.id must be string",
      "type": "type",
      "severity": "error",
      "path": "InsurancePolicy.id",
      "rule": "typeof id === 'string'",
      "autoGenerated": true
    },
    {
      "id": "rule_288_1756748912807",
      "name": "InsurancePolicy.professional_id is required",
      "type": "type",
      "severity": "error",
      "path": "InsurancePolicy.professional_id",
      "rule": "professional_id !== null && professional_id !== undefined",
      "autoGenerated": true
    },
    {
      "id": "rule_289_1756748912807",
      "name": "InsurancePolicy.professional_id must be string",
      "type": "type",
      "severity": "error",
      "path": "InsurancePolicy.professional_id",
      "rule": "typeof professional_id === 'string'",
      "autoGenerated": true
    },
    {
      "id": "rule_290_1756748912807",
      "name": "InsurancePolicy.created_at is required",
      "type": "type",
      "severity": "error",
      "path": "InsurancePolicy.created_at",
      "rule": "created_at !== null && created_at !== undefined",
      "autoGenerated": true
    },
    {
      "id": "rule_291_1756748912807",
      "name": "InsurancePolicy.created_at must be string",
      "type": "type",
      "severity": "error",
      "path": "InsurancePolicy.created_at",
      "rule": "typeof created_at === 'string'",
      "autoGenerated": true
    },
    {
      "id": "rule_292_1756748912807",
      "name": "InsurancePolicy.updated_at is required",
      "type": "type",
      "severity": "error",
      "path": "InsurancePolicy.updated_at",
      "rule": "updated_at !== null && updated_at !== undefined",
      "autoGenerated": true
    },
    {
      "id": "rule_293_1756748912807",
      "name": "InsurancePolicy.updated_at must be string",
      "type": "type",
      "severity": "error",
      "path": "InsurancePolicy.updated_at",
      "rule": "typeof updated_at === 'string'",
      "autoGenerated": true
    },
    {
      "id": "rule_294_1756748912807",
      "name": "InsurancePolicy.policy_number is required",
      "type": "type",
      "severity": "error",
      "path": "InsurancePolicy.policy_number",
      "rule": "policy_number !== null && policy_number !== undefined",
      "autoGenerated": true
    },
    {
      "id": "rule_295_1756748912807",
      "name": "InsurancePolicy.policy_number must be string",
      "type": "type",
      "severity": "error",
      "path": "InsurancePolicy.policy_number",
      "rule": "typeof policy_number === 'string'",
      "autoGenerated": true
    },
    {
      "id": "rule_296_1756748912807",
      "name": "InsurancePolicy.policy_type is required",
      "type": "type",
      "severity": "error",
      "path": "InsurancePolicy.policy_type",
      "rule": "policy_type !== null && policy_type !== undefined",
      "autoGenerated": true
    },
    {
      "id": "rule_297_1756748912807",
      "name": "InsurancePolicy.provider is required",
      "type": "type",
      "severity": "error",
      "path": "InsurancePolicy.provider",
      "rule": "provider !== null && provider !== undefined",
      "autoGenerated": true
    },
    {
      "id": "rule_298_1756748912807",
      "name": "InsurancePolicy.provider must be string",
      "type": "type",
      "severity": "error",
      "path": "InsurancePolicy.provider",
      "rule": "typeof provider === 'string'",
      "autoGenerated": true
    },
    {
      "id": "rule_299_1756748912807",
      "name": "InsurancePolicy.coverage_amount is required",
      "type": "type",
      "severity": "error",
      "path": "InsurancePolicy.coverage_amount",
      "rule": "coverage_amount !== null && coverage_amount !== undefined",
      "autoGenerated": true
    },
    {
      "id": "rule_300_1756748912807",
      "name": "InsurancePolicy.coverage_amount must be number",
      "type": "type",
      "severity": "error",
      "path": "InsurancePolicy.coverage_amount",
      "rule": "typeof coverage_amount === 'number'",
      "autoGenerated": true
    },
    {
      "id": "rule_301_1756748912807",
      "name": "InsurancePolicy.premium_amount is required",
      "type": "type",
      "severity": "error",
      "path": "InsurancePolicy.premium_amount",
      "rule": "premium_amount !== null && premium_amount !== undefined",
      "autoGenerated": true
    },
    {
      "id": "rule_302_1756748912807",
      "name": "InsurancePolicy.premium_amount must be number",
      "type": "type",
      "severity": "error",
      "path": "InsurancePolicy.premium_amount",
      "rule": "typeof premium_amount === 'number'",
      "autoGenerated": true
    },
    {
      "id": "rule_303_1756748912807",
      "name": "InsurancePolicy.start_date is required",
      "type": "type",
      "severity": "error",
      "path": "InsurancePolicy.start_date",
      "rule": "start_date !== null && start_date !== undefined",
      "autoGenerated": true
    },
    {
      "id": "rule_304_1756748912807",
      "name": "InsurancePolicy.start_date must be string",
      "type": "type",
      "severity": "error",
      "path": "InsurancePolicy.start_date",
      "rule": "typeof start_date === 'string'",
      "autoGenerated": true
    },
    {
      "id": "rule_305_1756748912807",
      "name": "InsurancePolicy.end_date is required",
      "type": "type",
      "severity": "error",
      "path": "InsurancePolicy.end_date",
      "rule": "end_date !== null && end_date !== undefined",
      "autoGenerated": true
    },
    {
      "id": "rule_306_1756748912807",
      "name": "InsurancePolicy.end_date must be string",
      "type": "type",
      "severity": "error",
      "path": "InsurancePolicy.end_date",
      "rule": "typeof end_date === 'string'",
      "autoGenerated": true
    },
    {
      "id": "rule_307_1756748912807",
      "name": "InsurancePolicy.next_premium_date must be string",
      "type": "type",
      "severity": "error",
      "path": "InsurancePolicy.next_premium_date",
      "rule": "typeof next_premium_date === 'string'",
      "autoGenerated": true
    },
    {
      "id": "rule_308_1756748912807",
      "name": "InsurancePolicy.status is required",
      "type": "type",
      "severity": "error",
      "path": "InsurancePolicy.status",
      "rule": "status !== null && status !== undefined",
      "autoGenerated": true
    },
    {
      "id": "rule_309_1756748912807",
      "name": "InsurancePolicy.policy_document_url must be string",
      "type": "type",
      "severity": "error",
      "path": "InsurancePolicy.policy_document_url",
      "rule": "typeof policy_document_url === 'string'",
      "autoGenerated": true
    },
    {
      "id": "rule_310_1756748912807",
      "name": "InsurancePolicy.id_card_url must be string",
      "type": "type",
      "severity": "error",
      "path": "InsurancePolicy.id_card_url",
      "rule": "typeof id_card_url === 'string'",
      "autoGenerated": true
    },
    {
      "id": "rule_311_1756748912807",
      "name": "InsuranceClaim.id is required",
      "type": "type",
      "severity": "error",
      "path": "InsuranceClaim.id",
      "rule": "id !== null && id !== undefined",
      "autoGenerated": true
    },
    {
      "id": "rule_312_1756748912807",
      "name": "InsuranceClaim.id must be string",
      "type": "type",
      "severity": "error",
      "path": "InsuranceClaim.id",
      "rule": "typeof id === 'string'",
      "autoGenerated": true
    },
    {
      "id": "rule_313_1756748912807",
      "name": "InsuranceClaim.policy_id is required",
      "type": "type",
      "severity": "error",
      "path": "InsuranceClaim.policy_id",
      "rule": "policy_id !== null && policy_id !== undefined",
      "autoGenerated": true
    },
    {
      "id": "rule_314_1756748912807",
      "name": "InsuranceClaim.policy_id must be string",
      "type": "type",
      "severity": "error",
      "path": "InsuranceClaim.policy_id",
      "rule": "typeof policy_id === 'string'",
      "autoGenerated": true
    },
    {
      "id": "rule_315_1756748912807",
      "name": "InsuranceClaim.professional_id is required",
      "type": "type",
      "severity": "error",
      "path": "InsuranceClaim.professional_id",
      "rule": "professional_id !== null && professional_id !== undefined",
      "autoGenerated": true
    },
    {
      "id": "rule_316_1756748912807",
      "name": "InsuranceClaim.professional_id must be string",
      "type": "type",
      "severity": "error",
      "path": "InsuranceClaim.professional_id",
      "rule": "typeof professional_id === 'string'",
      "autoGenerated": true
    },
    {
      "id": "rule_317_1756748912807",
      "name": "InsuranceClaim.created_at is required",
      "type": "type",
      "severity": "error",
      "path": "InsuranceClaim.created_at",
      "rule": "created_at !== null && created_at !== undefined",
      "autoGenerated": true
    },
    {
      "id": "rule_318_1756748912807",
      "name": "InsuranceClaim.created_at must be string",
      "type": "type",
      "severity": "error",
      "path": "InsuranceClaim.created_at",
      "rule": "typeof created_at === 'string'",
      "autoGenerated": true
    },
    {
      "id": "rule_319_1756748912807",
      "name": "InsuranceClaim.updated_at is required",
      "type": "type",
      "severity": "error",
      "path": "InsuranceClaim.updated_at",
      "rule": "updated_at !== null && updated_at !== undefined",
      "autoGenerated": true
    },
    {
      "id": "rule_320_1756748912807",
      "name": "InsuranceClaim.updated_at must be string",
      "type": "type",
      "severity": "error",
      "path": "InsuranceClaim.updated_at",
      "rule": "typeof updated_at === 'string'",
      "autoGenerated": true
    },
    {
      "id": "rule_321_1756748912807",
      "name": "InsuranceClaim.claim_number is required",
      "type": "type",
      "severity": "error",
      "path": "InsuranceClaim.claim_number",
      "rule": "claim_number !== null && claim_number !== undefined",
      "autoGenerated": true
    },
    {
      "id": "rule_322_1756748912807",
      "name": "InsuranceClaim.claim_number must be string",
      "type": "type",
      "severity": "error",
      "path": "InsuranceClaim.claim_number",
      "rule": "typeof claim_number === 'string'",
      "autoGenerated": true
    },
    {
      "id": "rule_323_1756748912807",
      "name": "InsuranceClaim.claim_type is required",
      "type": "type",
      "severity": "error",
      "path": "InsuranceClaim.claim_type",
      "rule": "claim_type !== null && claim_type !== undefined",
      "autoGenerated": true
    },
    {
      "id": "rule_324_1756748912807",
      "name": "InsuranceClaim.claim_amount is required",
      "type": "type",
      "severity": "error",
      "path": "InsuranceClaim.claim_amount",
      "rule": "claim_amount !== null && claim_amount !== undefined",
      "autoGenerated": true
    },
    {
      "id": "rule_325_1756748912807",
      "name": "InsuranceClaim.claim_amount must be number",
      "type": "type",
      "severity": "error",
      "path": "InsuranceClaim.claim_amount",
      "rule": "typeof claim_amount === 'number'",
      "autoGenerated": true
    },
    {
      "id": "rule_326_1756748912807",
      "name": "InsuranceClaim.approved_amount must be number",
      "type": "type",
      "severity": "error",
      "path": "InsuranceClaim.approved_amount",
      "rule": "typeof approved_amount === 'number'",
      "autoGenerated": true
    },
    {
      "id": "rule_327_1756748912807",
      "name": "InsuranceClaim.status is required",
      "type": "type",
      "severity": "error",
      "path": "InsuranceClaim.status",
      "rule": "status !== null && status !== undefined",
      "autoGenerated": true
    },
    {
      "id": "rule_328_1756748912807",
      "name": "InsuranceClaim.submitted_date is required",
      "type": "type",
      "severity": "error",
      "path": "InsuranceClaim.submitted_date",
      "rule": "submitted_date !== null && submitted_date !== undefined",
      "autoGenerated": true
    },
    {
      "id": "rule_329_1756748912807",
      "name": "InsuranceClaim.submitted_date must be string",
      "type": "type",
      "severity": "error",
      "path": "InsuranceClaim.submitted_date",
      "rule": "typeof submitted_date === 'string'",
      "autoGenerated": true
    },
    {
      "id": "rule_330_1756748912807",
      "name": "InsuranceClaim.processed_date must be string",
      "type": "type",
      "severity": "error",
      "path": "InsuranceClaim.processed_date",
      "rule": "typeof processed_date === 'string'",
      "autoGenerated": true
    },
    {
      "id": "rule_331_1756748912807",
      "name": "InsuranceClaim.remarks must be string",
      "type": "type",
      "severity": "error",
      "path": "InsuranceClaim.remarks",
      "rule": "typeof remarks === 'string'",
      "autoGenerated": true
    },
    {
      "id": "rule_332_1756748912807",
      "name": "Client.id is required",
      "type": "type",
      "severity": "error",
      "path": "Client.id",
      "rule": "id !== null && id !== undefined",
      "autoGenerated": true
    },
    {
      "id": "rule_333_1756748912807",
      "name": "Client.id must be string",
      "type": "type",
      "severity": "error",
      "path": "Client.id",
      "rule": "typeof id === 'string'",
      "autoGenerated": true
    },
    {
      "id": "rule_334_1756748912807",
      "name": "Client.professional_id is required",
      "type": "type",
      "severity": "error",
      "path": "Client.professional_id",
      "rule": "professional_id !== null && professional_id !== undefined",
      "autoGenerated": true
    },
    {
      "id": "rule_335_1756748912807",
      "name": "Client.professional_id must be string",
      "type": "type",
      "severity": "error",
      "path": "Client.professional_id",
      "rule": "typeof professional_id === 'string'",
      "autoGenerated": true
    },
    {
      "id": "rule_336_1756748912807",
      "name": "Client.created_at is required",
      "type": "type",
      "severity": "error",
      "path": "Client.created_at",
      "rule": "created_at !== null && created_at !== undefined",
      "autoGenerated": true
    },
    {
      "id": "rule_337_1756748912807",
      "name": "Client.created_at must be string",
      "type": "type",
      "severity": "error",
      "path": "Client.created_at",
      "rule": "typeof created_at === 'string'",
      "autoGenerated": true
    },
    {
      "id": "rule_338_1756748912807",
      "name": "Client.updated_at is required",
      "type": "type",
      "severity": "error",
      "path": "Client.updated_at",
      "rule": "updated_at !== null && updated_at !== undefined",
      "autoGenerated": true
    },
    {
      "id": "rule_339_1756748912807",
      "name": "Client.updated_at must be string",
      "type": "type",
      "severity": "error",
      "path": "Client.updated_at",
      "rule": "typeof updated_at === 'string'",
      "autoGenerated": true
    },
    {
      "id": "rule_340_1756748912807",
      "name": "Client.name is required",
      "type": "type",
      "severity": "error",
      "path": "Client.name",
      "rule": "name !== null && name !== undefined",
      "autoGenerated": true
    },
    {
      "id": "rule_341_1756748912807",
      "name": "Client.name must be string",
      "type": "type",
      "severity": "error",
      "path": "Client.name",
      "rule": "typeof name === 'string'",
      "autoGenerated": true
    },
    {
      "id": "rule_342_1756748912807",
      "name": "Client.phone is required",
      "type": "type",
      "severity": "error",
      "path": "Client.phone",
      "rule": "phone !== null && phone !== undefined",
      "autoGenerated": true
    },
    {
      "id": "rule_343_1756748912807",
      "name": "Client.phone must be string",
      "type": "type",
      "severity": "error",
      "path": "Client.phone",
      "rule": "typeof phone === 'string'",
      "autoGenerated": true
    },
    {
      "id": "rule_344_1756748912807",
      "name": "Client.email must be string",
      "type": "type",
      "severity": "error",
      "path": "Client.email",
      "rule": "typeof email === 'string'",
      "autoGenerated": true
    },
    {
      "id": "rule_345_1756748912807",
      "name": "Client.date_of_birth must be string",
      "type": "type",
      "severity": "error",
      "path": "Client.date_of_birth",
      "rule": "typeof date_of_birth === 'string'",
      "autoGenerated": true
    },
    {
      "id": "rule_346_1756748912807",
      "name": "Client.notes must be string",
      "type": "type",
      "severity": "error",
      "path": "Client.notes",
      "rule": "typeof notes === 'string'",
      "autoGenerated": true
    },
    {
      "id": "rule_347_1756748912807",
      "name": "Client.first_visit_date is required",
      "type": "type",
      "severity": "error",
      "path": "Client.first_visit_date",
      "rule": "first_visit_date !== null && first_visit_date !== undefined",
      "autoGenerated": true
    },
    {
      "id": "rule_348_1756748912807",
      "name": "Client.first_visit_date must be string",
      "type": "type",
      "severity": "error",
      "path": "Client.first_visit_date",
      "rule": "typeof first_visit_date === 'string'",
      "autoGenerated": true
    },
    {
      "id": "rule_349_1756748912807",
      "name": "Client.last_visit_date is required",
      "type": "type",
      "severity": "error",
      "path": "Client.last_visit_date",
      "rule": "last_visit_date !== null && last_visit_date !== undefined",
      "autoGenerated": true
    },
    {
      "id": "rule_350_1756748912807",
      "name": "Client.last_visit_date must be string",
      "type": "type",
      "severity": "error",
      "path": "Client.last_visit_date",
      "rule": "typeof last_visit_date === 'string'",
      "autoGenerated": true
    },
    {
      "id": "rule_351_1756748912807",
      "name": "Client.total_visits is required",
      "type": "type",
      "severity": "error",
      "path": "Client.total_visits",
      "rule": "total_visits !== null && total_visits !== undefined",
      "autoGenerated": true
    },
    {
      "id": "rule_352_1756748912807",
      "name": "Client.total_visits must be number",
      "type": "type",
      "severity": "error",
      "path": "Client.total_visits",
      "rule": "typeof total_visits === 'number'",
      "autoGenerated": true
    },
    {
      "id": "rule_353_1756748912807",
      "name": "Client.total_spent is required",
      "type": "type",
      "severity": "error",
      "path": "Client.total_spent",
      "rule": "total_spent !== null && total_spent !== undefined",
      "autoGenerated": true
    },
    {
      "id": "rule_354_1756748912807",
      "name": "Client.total_spent must be number",
      "type": "type",
      "severity": "error",
      "path": "Client.total_spent",
      "rule": "typeof total_spent === 'number'",
      "autoGenerated": true
    },
    {
      "id": "rule_355_1756748912807",
      "name": "Client.average_ticket_size is required",
      "type": "type",
      "severity": "error",
      "path": "Client.average_ticket_size",
      "rule": "average_ticket_size !== null && average_ticket_size !== undefined",
      "autoGenerated": true
    },
    {
      "id": "rule_356_1756748912807",
      "name": "Client.average_ticket_size must be number",
      "type": "type",
      "severity": "error",
      "path": "Client.average_ticket_size",
      "rule": "typeof average_ticket_size === 'number'",
      "autoGenerated": true
    },
    {
      "id": "rule_357_1756748912807",
      "name": "Client.is_active is required",
      "type": "type",
      "severity": "error",
      "path": "Client.is_active",
      "rule": "is_active !== null && is_active !== undefined",
      "autoGenerated": true
    },
    {
      "id": "rule_358_1756748912807",
      "name": "Client.is_active must be boolean",
      "type": "type",
      "severity": "error",
      "path": "Client.is_active",
      "rule": "typeof is_active === 'boolean'",
      "autoGenerated": true
    },
    {
      "id": "rule_359_1756748912807",
      "name": "Appointment.id is required",
      "type": "type",
      "severity": "error",
      "path": "Appointment.id",
      "rule": "id !== null && id !== undefined",
      "autoGenerated": true
    },
    {
      "id": "rule_360_1756748912807",
      "name": "Appointment.id must be string",
      "type": "type",
      "severity": "error",
      "path": "Appointment.id",
      "rule": "typeof id === 'string'",
      "autoGenerated": true
    },
    {
      "id": "rule_361_1756748912807",
      "name": "Appointment.professional_id is required",
      "type": "type",
      "severity": "error",
      "path": "Appointment.professional_id",
      "rule": "professional_id !== null && professional_id !== undefined",
      "autoGenerated": true
    },
    {
      "id": "rule_362_1756748912807",
      "name": "Appointment.professional_id must be string",
      "type": "type",
      "severity": "error",
      "path": "Appointment.professional_id",
      "rule": "typeof professional_id === 'string'",
      "autoGenerated": true
    },
    {
      "id": "rule_363_1756748912807",
      "name": "Appointment.client_id is required",
      "type": "type",
      "severity": "error",
      "path": "Appointment.client_id",
      "rule": "client_id !== null && client_id !== undefined",
      "autoGenerated": true
    },
    {
      "id": "rule_364_1756748912807",
      "name": "Appointment.client_id must be string",
      "type": "type",
      "severity": "error",
      "path": "Appointment.client_id",
      "rule": "typeof client_id === 'string'",
      "autoGenerated": true
    },
    {
      "id": "rule_365_1756748912807",
      "name": "Appointment.created_at is required",
      "type": "type",
      "severity": "error",
      "path": "Appointment.created_at",
      "rule": "created_at !== null && created_at !== undefined",
      "autoGenerated": true
    },
    {
      "id": "rule_366_1756748912807",
      "name": "Appointment.created_at must be string",
      "type": "type",
      "severity": "error",
      "path": "Appointment.created_at",
      "rule": "typeof created_at === 'string'",
      "autoGenerated": true
    },
    {
      "id": "rule_367_1756748912807",
      "name": "Appointment.updated_at is required",
      "type": "type",
      "severity": "error",
      "path": "Appointment.updated_at",
      "rule": "updated_at !== null && updated_at !== undefined",
      "autoGenerated": true
    },
    {
      "id": "rule_368_1756748912807",
      "name": "Appointment.updated_at must be string",
      "type": "type",
      "severity": "error",
      "path": "Appointment.updated_at",
      "rule": "typeof updated_at === 'string'",
      "autoGenerated": true
    },
    {
      "id": "rule_369_1756748912807",
      "name": "Appointment.appointment_date is required",
      "type": "type",
      "severity": "error",
      "path": "Appointment.appointment_date",
      "rule": "appointment_date !== null && appointment_date !== undefined",
      "autoGenerated": true
    },
    {
      "id": "rule_370_1756748912807",
      "name": "Appointment.appointment_date must be string",
      "type": "type",
      "severity": "error",
      "path": "Appointment.appointment_date",
      "rule": "typeof appointment_date === 'string'",
      "autoGenerated": true
    },
    {
      "id": "rule_371_1756748912807",
      "name": "Appointment.start_time is required",
      "type": "type",
      "severity": "error",
      "path": "Appointment.start_time",
      "rule": "start_time !== null && start_time !== undefined",
      "autoGenerated": true
    },
    {
      "id": "rule_372_1756748912807",
      "name": "Appointment.start_time must be string",
      "type": "type",
      "severity": "error",
      "path": "Appointment.start_time",
      "rule": "typeof start_time === 'string'",
      "autoGenerated": true
    },
    {
      "id": "rule_373_1756748912807",
      "name": "Appointment.end_time is required",
      "type": "type",
      "severity": "error",
      "path": "Appointment.end_time",
      "rule": "end_time !== null && end_time !== undefined",
      "autoGenerated": true
    },
    {
      "id": "rule_374_1756748912807",
      "name": "Appointment.end_time must be string",
      "type": "type",
      "severity": "error",
      "path": "Appointment.end_time",
      "rule": "typeof end_time === 'string'",
      "autoGenerated": true
    },
    {
      "id": "rule_375_1756748912807",
      "name": "Appointment.duration_minutes is required",
      "type": "type",
      "severity": "error",
      "path": "Appointment.duration_minutes",
      "rule": "duration_minutes !== null && duration_minutes !== undefined",
      "autoGenerated": true
    },
    {
      "id": "rule_376_1756748912807",
      "name": "Appointment.duration_minutes must be number",
      "type": "type",
      "severity": "error",
      "path": "Appointment.duration_minutes",
      "rule": "typeof duration_minutes === 'number'",
      "autoGenerated": true
    },
    {
      "id": "rule_377_1756748912807",
      "name": "Appointment.services is required",
      "type": "type",
      "severity": "error",
      "path": "Appointment.services",
      "rule": "services !== null && services !== undefined",
      "autoGenerated": true
    },
    {
      "id": "rule_378_1756748912807",
      "name": "Appointment.total_amount is required",
      "type": "type",
      "severity": "error",
      "path": "Appointment.total_amount",
      "rule": "total_amount !== null && total_amount !== undefined",
      "autoGenerated": true
    },
    {
      "id": "rule_379_1756748912807",
      "name": "Appointment.total_amount must be number",
      "type": "type",
      "severity": "error",
      "path": "Appointment.total_amount",
      "rule": "typeof total_amount === 'number'",
      "autoGenerated": true
    },
    {
      "id": "rule_380_1756748912807",
      "name": "Appointment.status is required",
      "type": "type",
      "severity": "error",
      "path": "Appointment.status",
      "rule": "status !== null && status !== undefined",
      "autoGenerated": true
    },
    {
      "id": "rule_381_1756748912807",
      "name": "Appointment.payment_status is required",
      "type": "type",
      "severity": "error",
      "path": "Appointment.payment_status",
      "rule": "payment_status !== null && payment_status !== undefined",
      "autoGenerated": true
    },
    {
      "id": "rule_382_1756748912807",
      "name": "Appointment.notes must be string",
      "type": "type",
      "severity": "error",
      "path": "Appointment.notes",
      "rule": "typeof notes === 'string'",
      "autoGenerated": true
    },
    {
      "id": "rule_383_1756748912807",
      "name": "ServiceItem.id is required",
      "type": "type",
      "severity": "error",
      "path": "ServiceItem.id",
      "rule": "id !== null && id !== undefined",
      "autoGenerated": true
    },
    {
      "id": "rule_384_1756748912807",
      "name": "ServiceItem.id must be string",
      "type": "type",
      "severity": "error",
      "path": "ServiceItem.id",
      "rule": "typeof id === 'string'",
      "autoGenerated": true
    },
    {
      "id": "rule_385_1756748912807",
      "name": "ServiceItem.name is required",
      "type": "type",
      "severity": "error",
      "path": "ServiceItem.name",
      "rule": "name !== null && name !== undefined",
      "autoGenerated": true
    },
    {
      "id": "rule_386_1756748912807",
      "name": "ServiceItem.name must be string",
      "type": "type",
      "severity": "error",
      "path": "ServiceItem.name",
      "rule": "typeof name === 'string'",
      "autoGenerated": true
    },
    {
      "id": "rule_387_1756748912807",
      "name": "ServiceItem.category is required",
      "type": "type",
      "severity": "error",
      "path": "ServiceItem.category",
      "rule": "category !== null && category !== undefined",
      "autoGenerated": true
    },
    {
      "id": "rule_388_1756748912807",
      "name": "ServiceItem.price is required",
      "type": "type",
      "severity": "error",
      "path": "ServiceItem.price",
      "rule": "price !== null && price !== undefined",
      "autoGenerated": true
    },
    {
      "id": "rule_389_1756748912807",
      "name": "ServiceItem.price must be number",
      "type": "type",
      "severity": "error",
      "path": "ServiceItem.price",
      "rule": "typeof price === 'number'",
      "autoGenerated": true
    },
    {
      "id": "rule_390_1756748912807",
      "name": "ServiceItem.duration_minutes is required",
      "type": "type",
      "severity": "error",
      "path": "ServiceItem.duration_minutes",
      "rule": "duration_minutes !== null && duration_minutes !== undefined",
      "autoGenerated": true
    },
    {
      "id": "rule_391_1756748912807",
      "name": "ServiceItem.duration_minutes must be number",
      "type": "type",
      "severity": "error",
      "path": "ServiceItem.duration_minutes",
      "rule": "typeof duration_minutes === 'number'",
      "autoGenerated": true
    },
    {
      "id": "rule_392_1756748912807",
      "name": "Course.id is required",
      "type": "type",
      "severity": "error",
      "path": "Course.id",
      "rule": "id !== null && id !== undefined",
      "autoGenerated": true
    },
    {
      "id": "rule_393_1756748912807",
      "name": "Course.id must be string",
      "type": "type",
      "severity": "error",
      "path": "Course.id",
      "rule": "typeof id === 'string'",
      "autoGenerated": true
    },
    {
      "id": "rule_394_1756748912807",
      "name": "Course.created_at is required",
      "type": "type",
      "severity": "error",
      "path": "Course.created_at",
      "rule": "created_at !== null && created_at !== undefined",
      "autoGenerated": true
    },
    {
      "id": "rule_395_1756748912807",
      "name": "Course.created_at must be string",
      "type": "type",
      "severity": "error",
      "path": "Course.created_at",
      "rule": "typeof created_at === 'string'",
      "autoGenerated": true
    },
    {
      "id": "rule_396_1756748912807",
      "name": "Course.updated_at is required",
      "type": "type",
      "severity": "error",
      "path": "Course.updated_at",
      "rule": "updated_at !== null && updated_at !== undefined",
      "autoGenerated": true
    },
    {
      "id": "rule_397_1756748912807",
      "name": "Course.updated_at must be string",
      "type": "type",
      "severity": "error",
      "path": "Course.updated_at",
      "rule": "typeof updated_at === 'string'",
      "autoGenerated": true
    },
    {
      "id": "rule_398_1756748912807",
      "name": "Course.title is required",
      "type": "type",
      "severity": "error",
      "path": "Course.title",
      "rule": "title !== null && title !== undefined",
      "autoGenerated": true
    },
    {
      "id": "rule_399_1756748912807",
      "name": "Course.title must be string",
      "type": "type",
      "severity": "error",
      "path": "Course.title",
      "rule": "typeof title === 'string'",
      "autoGenerated": true
    },
    {
      "id": "rule_400_1756748912807",
      "name": "Course.description is required",
      "type": "type",
      "severity": "error",
      "path": "Course.description",
      "rule": "description !== null && description !== undefined",
      "autoGenerated": true
    },
    {
      "id": "rule_401_1756748912807",
      "name": "Course.description must be string",
      "type": "type",
      "severity": "error",
      "path": "Course.description",
      "rule": "typeof description === 'string'",
      "autoGenerated": true
    },
    {
      "id": "rule_402_1756748912807",
      "name": "Course.instructor_name is required",
      "type": "type",
      "severity": "error",
      "path": "Course.instructor_name",
      "rule": "instructor_name !== null && instructor_name !== undefined",
      "autoGenerated": true
    },
    {
      "id": "rule_403_1756748912807",
      "name": "Course.instructor_name must be string",
      "type": "type",
      "severity": "error",
      "path": "Course.instructor_name",
      "rule": "typeof instructor_name === 'string'",
      "autoGenerated": true
    },
    {
      "id": "rule_404_1756748912807",
      "name": "Course.instructor_id must be string",
      "type": "type",
      "severity": "error",
      "path": "Course.instructor_id",
      "rule": "typeof instructor_id === 'string'",
      "autoGenerated": true
    },
    {
      "id": "rule_405_1756748912807",
      "name": "Course.category is required",
      "type": "type",
      "severity": "error",
      "path": "Course.category",
      "rule": "category !== null && category !== undefined",
      "autoGenerated": true
    },
    {
      "id": "rule_406_1756748912807",
      "name": "Course.difficulty_level is required",
      "type": "type",
      "severity": "error",
      "path": "Course.difficulty_level",
      "rule": "difficulty_level !== null && difficulty_level !== undefined",
      "autoGenerated": true
    },
    {
      "id": "rule_407_1756748912807",
      "name": "Course.duration_minutes is required",
      "type": "type",
      "severity": "error",
      "path": "Course.duration_minutes",
      "rule": "duration_minutes !== null && duration_minutes !== undefined",
      "autoGenerated": true
    },
    {
      "id": "rule_408_1756748912807",
      "name": "Course.duration_minutes must be number",
      "type": "type",
      "severity": "error",
      "path": "Course.duration_minutes",
      "rule": "typeof duration_minutes === 'number'",
      "autoGenerated": true
    },
    {
      "id": "rule_409_1756748912807",
      "name": "Course.video_url must be string",
      "type": "type",
      "severity": "error",
      "path": "Course.video_url",
      "rule": "typeof video_url === 'string'",
      "autoGenerated": true
    },
    {
      "id": "rule_410_1756748912807",
      "name": "Course.thumbnail_url must be string",
      "type": "type",
      "severity": "error",
      "path": "Course.thumbnail_url",
      "rule": "typeof thumbnail_url === 'string'",
      "autoGenerated": true
    },
    {
      "id": "rule_411_1756748912807",
      "name": "Course.rating is required",
      "type": "type",
      "severity": "error",
      "path": "Course.rating",
      "rule": "rating !== null && rating !== undefined",
      "autoGenerated": true
    },
    {
      "id": "rule_412_1756748912807",
      "name": "Course.rating must be number",
      "type": "type",
      "severity": "error",
      "path": "Course.rating",
      "rule": "typeof rating === 'number'",
      "autoGenerated": true
    },
    {
      "id": "rule_413_1756748912807",
      "name": "Course.enrollments_count is required",
      "type": "type",
      "severity": "error",
      "path": "Course.enrollments_count",
      "rule": "enrollments_count !== null && enrollments_count !== undefined",
      "autoGenerated": true
    },
    {
      "id": "rule_414_1756748912807",
      "name": "Course.enrollments_count must be number",
      "type": "type",
      "severity": "error",
      "path": "Course.enrollments_count",
      "rule": "typeof enrollments_count === 'number'",
      "autoGenerated": true
    },
    {
      "id": "rule_415_1756748912807",
      "name": "Course.completion_rate is required",
      "type": "type",
      "severity": "error",
      "path": "Course.completion_rate",
      "rule": "completion_rate !== null && completion_rate !== undefined",
      "autoGenerated": true
    },
    {
      "id": "rule_416_1756748912807",
      "name": "Course.completion_rate must be number",
      "type": "type",
      "severity": "error",
      "path": "Course.completion_rate",
      "rule": "typeof completion_rate === 'number'",
      "autoGenerated": true
    },
    {
      "id": "rule_417_1756748912807",
      "name": "Course.provides_certificate is required",
      "type": "type",
      "severity": "error",
      "path": "Course.provides_certificate",
      "rule": "provides_certificate !== null && provides_certificate !== undefined",
      "autoGenerated": true
    },
    {
      "id": "rule_418_1756748912807",
      "name": "Course.provides_certificate must be boolean",
      "type": "type",
      "severity": "error",
      "path": "Course.provides_certificate",
      "rule": "typeof provides_certificate === 'boolean'",
      "autoGenerated": true
    },
    {
      "id": "rule_419_1756748912807",
      "name": "Course.certificate_requirements must be string",
      "type": "type",
      "severity": "error",
      "path": "Course.certificate_requirements",
      "rule": "typeof certificate_requirements === 'string'",
      "autoGenerated": true
    },
    {
      "id": "rule_420_1756748912807",
      "name": "Course.is_published is required",
      "type": "type",
      "severity": "error",
      "path": "Course.is_published",
      "rule": "is_published !== null && is_published !== undefined",
      "autoGenerated": true
    },
    {
      "id": "rule_421_1756748912807",
      "name": "Course.is_published must be boolean",
      "type": "type",
      "severity": "error",
      "path": "Course.is_published",
      "rule": "typeof is_published === 'boolean'",
      "autoGenerated": true
    },
    {
      "id": "rule_422_1756748912807",
      "name": "Course.is_featured is required",
      "type": "type",
      "severity": "error",
      "path": "Course.is_featured",
      "rule": "is_featured !== null && is_featured !== undefined",
      "autoGenerated": true
    },
    {
      "id": "rule_423_1756748912807",
      "name": "Course.is_featured must be boolean",
      "type": "type",
      "severity": "error",
      "path": "Course.is_featured",
      "rule": "typeof is_featured === 'boolean'",
      "autoGenerated": true
    },
    {
      "id": "rule_424_1756748912807",
      "name": "Course.price must be number",
      "type": "type",
      "severity": "error",
      "path": "Course.price",
      "rule": "typeof price === 'number'",
      "autoGenerated": true
    },
    {
      "id": "rule_425_1756748912807",
      "name": "CourseEnrollment.id is required",
      "type": "type",
      "severity": "error",
      "path": "CourseEnrollment.id",
      "rule": "id !== null && id !== undefined",
      "autoGenerated": true
    },
    {
      "id": "rule_426_1756748912807",
      "name": "CourseEnrollment.id must be string",
      "type": "type",
      "severity": "error",
      "path": "CourseEnrollment.id",
      "rule": "typeof id === 'string'",
      "autoGenerated": true
    },
    {
      "id": "rule_427_1756748912807",
      "name": "CourseEnrollment.course_id is required",
      "type": "type",
      "severity": "error",
      "path": "CourseEnrollment.course_id",
      "rule": "course_id !== null && course_id !== undefined",
      "autoGenerated": true
    },
    {
      "id": "rule_428_1756748912807",
      "name": "CourseEnrollment.course_id must be string",
      "type": "type",
      "severity": "error",
      "path": "CourseEnrollment.course_id",
      "rule": "typeof course_id === 'string'",
      "autoGenerated": true
    },
    {
      "id": "rule_429_1756748912807",
      "name": "CourseEnrollment.professional_id is required",
      "type": "type",
      "severity": "error",
      "path": "CourseEnrollment.professional_id",
      "rule": "professional_id !== null && professional_id !== undefined",
      "autoGenerated": true
    },
    {
      "id": "rule_430_1756748912807",
      "name": "CourseEnrollment.professional_id must be string",
      "type": "type",
      "severity": "error",
      "path": "CourseEnrollment.professional_id",
      "rule": "typeof professional_id === 'string'",
      "autoGenerated": true
    },
    {
      "id": "rule_431_1756748912807",
      "name": "CourseEnrollment.enrolled_at is required",
      "type": "type",
      "severity": "error",
      "path": "CourseEnrollment.enrolled_at",
      "rule": "enrolled_at !== null && enrolled_at !== undefined",
      "autoGenerated": true
    },
    {
      "id": "rule_432_1756748912807",
      "name": "CourseEnrollment.enrolled_at must be string",
      "type": "type",
      "severity": "error",
      "path": "CourseEnrollment.enrolled_at",
      "rule": "typeof enrolled_at === 'string'",
      "autoGenerated": true
    },
    {
      "id": "rule_433_1756748912807",
      "name": "CourseEnrollment.progress_percentage is required",
      "type": "type",
      "severity": "error",
      "path": "CourseEnrollment.progress_percentage",
      "rule": "progress_percentage !== null && progress_percentage !== undefined",
      "autoGenerated": true
    },
    {
      "id": "rule_434_1756748912807",
      "name": "CourseEnrollment.progress_percentage must be number",
      "type": "type",
      "severity": "error",
      "path": "CourseEnrollment.progress_percentage",
      "rule": "typeof progress_percentage === 'number'",
      "autoGenerated": true
    },
    {
      "id": "rule_435_1756748912807",
      "name": "CourseEnrollment.last_accessed_at must be string",
      "type": "type",
      "severity": "error",
      "path": "CourseEnrollment.last_accessed_at",
      "rule": "typeof last_accessed_at === 'string'",
      "autoGenerated": true
    },
    {
      "id": "rule_436_1756748912807",
      "name": "CourseEnrollment.completed_at must be string",
      "type": "type",
      "severity": "error",
      "path": "CourseEnrollment.completed_at",
      "rule": "typeof completed_at === 'string'",
      "autoGenerated": true
    },
    {
      "id": "rule_437_1756748912807",
      "name": "CourseEnrollment.certificate_issued is required",
      "type": "type",
      "severity": "error",
      "path": "CourseEnrollment.certificate_issued",
      "rule": "certificate_issued !== null && certificate_issued !== undefined",
      "autoGenerated": true
    },
    {
      "id": "rule_438_1756748912807",
      "name": "CourseEnrollment.certificate_issued must be boolean",
      "type": "type",
      "severity": "error",
      "path": "CourseEnrollment.certificate_issued",
      "rule": "typeof certificate_issued === 'boolean'",
      "autoGenerated": true
    },
    {
      "id": "rule_439_1756748912807",
      "name": "CourseEnrollment.certificate_url must be string",
      "type": "type",
      "severity": "error",
      "path": "CourseEnrollment.certificate_url",
      "rule": "typeof certificate_url === 'string'",
      "autoGenerated": true
    },
    {
      "id": "rule_440_1756748912807",
      "name": "CourseEnrollment.certificate_issued_at must be string",
      "type": "type",
      "severity": "error",
      "path": "CourseEnrollment.certificate_issued_at",
      "rule": "typeof certificate_issued_at === 'string'",
      "autoGenerated": true
    },
    {
      "id": "rule_441_1756748912807",
      "name": "CourseEnrollment.rating must be number",
      "type": "type",
      "severity": "error",
      "path": "CourseEnrollment.rating",
      "rule": "typeof rating === 'number'",
      "autoGenerated": true
    },
    {
      "id": "rule_442_1756748912807",
      "name": "CourseEnrollment.review must be string",
      "type": "type",
      "severity": "error",
      "path": "CourseEnrollment.review",
      "rule": "typeof review === 'string'",
      "autoGenerated": true
    },
    {
      "id": "rule_443_1756748912807",
      "name": "Address.line1 is required",
      "type": "type",
      "severity": "error",
      "path": "Address.line1",
      "rule": "line1 !== null && line1 !== undefined",
      "autoGenerated": true
    },
    {
      "id": "rule_444_1756748912807",
      "name": "Address.line1 must be string",
      "type": "type",
      "severity": "error",
      "path": "Address.line1",
      "rule": "typeof line1 === 'string'",
      "autoGenerated": true
    },
    {
      "id": "rule_445_1756748912807",
      "name": "Address.line2 must be string",
      "type": "type",
      "severity": "error",
      "path": "Address.line2",
      "rule": "typeof line2 === 'string'",
      "autoGenerated": true
    },
    {
      "id": "rule_446_1756748912807",
      "name": "Address.city is required",
      "type": "type",
      "severity": "error",
      "path": "Address.city",
      "rule": "city !== null && city !== undefined",
      "autoGenerated": true
    },
    {
      "id": "rule_447_1756748912807",
      "name": "Address.city must be string",
      "type": "type",
      "severity": "error",
      "path": "Address.city",
      "rule": "typeof city === 'string'",
      "autoGenerated": true
    },
    {
      "id": "rule_448_1756748912807",
      "name": "Address.state is required",
      "type": "type",
      "severity": "error",
      "path": "Address.state",
      "rule": "state !== null && state !== undefined",
      "autoGenerated": true
    },
    {
      "id": "rule_449_1756748912807",
      "name": "Address.state must be string",
      "type": "type",
      "severity": "error",
      "path": "Address.state",
      "rule": "typeof state === 'string'",
      "autoGenerated": true
    },
    {
      "id": "rule_450_1756748912807",
      "name": "Address.pincode is required",
      "type": "type",
      "severity": "error",
      "path": "Address.pincode",
      "rule": "pincode !== null && pincode !== undefined",
      "autoGenerated": true
    },
    {
      "id": "rule_451_1756748912807",
      "name": "Address.pincode must be string",
      "type": "type",
      "severity": "error",
      "path": "Address.pincode",
      "rule": "typeof pincode === 'string'",
      "autoGenerated": true
    },
    {
      "id": "rule_452_1756748912807",
      "name": "Address.country is required",
      "type": "type",
      "severity": "error",
      "path": "Address.country",
      "rule": "country !== null && country !== undefined",
      "autoGenerated": true
    },
    {
      "id": "rule_453_1756748912807",
      "name": "Address.country must be string",
      "type": "type",
      "severity": "error",
      "path": "Address.country",
      "rule": "typeof country === 'string'",
      "autoGenerated": true
    },
    {
      "id": "rule_454_1756748912807",
      "name": "Address.landmark must be string",
      "type": "type",
      "severity": "error",
      "path": "Address.landmark",
      "rule": "typeof landmark === 'string'",
      "autoGenerated": true
    },
    {
      "id": "rule_455_1756748912807",
      "name": "Notification.id is required",
      "type": "type",
      "severity": "error",
      "path": "Notification.id",
      "rule": "id !== null && id !== undefined",
      "autoGenerated": true
    },
    {
      "id": "rule_456_1756748912807",
      "name": "Notification.id must be string",
      "type": "type",
      "severity": "error",
      "path": "Notification.id",
      "rule": "typeof id === 'string'",
      "autoGenerated": true
    },
    {
      "id": "rule_457_1756748912807",
      "name": "Notification.professional_id is required",
      "type": "type",
      "severity": "error",
      "path": "Notification.professional_id",
      "rule": "professional_id !== null && professional_id !== undefined",
      "autoGenerated": true
    },
    {
      "id": "rule_458_1756748912807",
      "name": "Notification.professional_id must be string",
      "type": "type",
      "severity": "error",
      "path": "Notification.professional_id",
      "rule": "typeof professional_id === 'string'",
      "autoGenerated": true
    },
    {
      "id": "rule_459_1756748912807",
      "name": "Notification.created_at is required",
      "type": "type",
      "severity": "error",
      "path": "Notification.created_at",
      "rule": "created_at !== null && created_at !== undefined",
      "autoGenerated": true
    },
    {
      "id": "rule_460_1756748912807",
      "name": "Notification.created_at must be string",
      "type": "type",
      "severity": "error",
      "path": "Notification.created_at",
      "rule": "typeof created_at === 'string'",
      "autoGenerated": true
    },
    {
      "id": "rule_461_1756748912807",
      "name": "Notification.title is required",
      "type": "type",
      "severity": "error",
      "path": "Notification.title",
      "rule": "title !== null && title !== undefined",
      "autoGenerated": true
    },
    {
      "id": "rule_462_1756748912807",
      "name": "Notification.title must be string",
      "type": "type",
      "severity": "error",
      "path": "Notification.title",
      "rule": "typeof title === 'string'",
      "autoGenerated": true
    },
    {
      "id": "rule_463_1756748912807",
      "name": "Notification.message is required",
      "type": "type",
      "severity": "error",
      "path": "Notification.message",
      "rule": "message !== null && message !== undefined",
      "autoGenerated": true
    },
    {
      "id": "rule_464_1756748912807",
      "name": "Notification.message must be string",
      "type": "type",
      "severity": "error",
      "path": "Notification.message",
      "rule": "typeof message === 'string'",
      "autoGenerated": true
    },
    {
      "id": "rule_465_1756748912807",
      "name": "Notification.type is required",
      "type": "type",
      "severity": "error",
      "path": "Notification.type",
      "rule": "type !== null && type !== undefined",
      "autoGenerated": true
    },
    {
      "id": "rule_466_1756748912807",
      "name": "Notification.reference_id must be string",
      "type": "type",
      "severity": "error",
      "path": "Notification.reference_id",
      "rule": "typeof reference_id === 'string'",
      "autoGenerated": true
    },
    {
      "id": "rule_467_1756748912807",
      "name": "Notification.reference_type must be string",
      "type": "type",
      "severity": "error",
      "path": "Notification.reference_type",
      "rule": "typeof reference_type === 'string'",
      "autoGenerated": true
    },
    {
      "id": "rule_468_1756748912807",
      "name": "Notification.is_read is required",
      "type": "type",
      "severity": "error",
      "path": "Notification.is_read",
      "rule": "is_read !== null && is_read !== undefined",
      "autoGenerated": true
    },
    {
      "id": "rule_469_1756748912807",
      "name": "Notification.is_read must be boolean",
      "type": "type",
      "severity": "error",
      "path": "Notification.is_read",
      "rule": "typeof is_read === 'boolean'",
      "autoGenerated": true
    },
    {
      "id": "rule_470_1756748912807",
      "name": "Notification.read_at must be string",
      "type": "type",
      "severity": "error",
      "path": "Notification.read_at",
      "rule": "typeof read_at === 'string'",
      "autoGenerated": true
    },
    {
      "id": "rule_471_1756748912807",
      "name": "Notification.action_url must be string",
      "type": "type",
      "severity": "error",
      "path": "Notification.action_url",
      "rule": "typeof action_url === 'string'",
      "autoGenerated": true
    },
    {
      "id": "rule_472_1756748912807",
      "name": "Analytics.id is required",
      "type": "type",
      "severity": "error",
      "path": "Analytics.id",
      "rule": "id !== null && id !== undefined",
      "autoGenerated": true
    },
    {
      "id": "rule_473_1756748912807",
      "name": "Analytics.id must be string",
      "type": "type",
      "severity": "error",
      "path": "Analytics.id",
      "rule": "typeof id === 'string'",
      "autoGenerated": true
    },
    {
      "id": "rule_474_1756748912807",
      "name": "Analytics.professional_id is required",
      "type": "type",
      "severity": "error",
      "path": "Analytics.professional_id",
      "rule": "professional_id !== null && professional_id !== undefined",
      "autoGenerated": true
    },
    {
      "id": "rule_475_1756748912807",
      "name": "Analytics.professional_id must be string",
      "type": "type",
      "severity": "error",
      "path": "Analytics.professional_id",
      "rule": "typeof professional_id === 'string'",
      "autoGenerated": true
    },
    {
      "id": "rule_476_1756748912807",
      "name": "Analytics.date is required",
      "type": "type",
      "severity": "error",
      "path": "Analytics.date",
      "rule": "date !== null && date !== undefined",
      "autoGenerated": true
    },
    {
      "id": "rule_477_1756748912807",
      "name": "Analytics.date must be string",
      "type": "type",
      "severity": "error",
      "path": "Analytics.date",
      "rule": "typeof date === 'string'",
      "autoGenerated": true
    },
    {
      "id": "rule_478_1756748912807",
      "name": "Analytics.profile_views is required",
      "type": "type",
      "severity": "error",
      "path": "Analytics.profile_views",
      "rule": "profile_views !== null && profile_views !== undefined",
      "autoGenerated": true
    },
    {
      "id": "rule_479_1756748912807",
      "name": "Analytics.profile_views must be number",
      "type": "type",
      "severity": "error",
      "path": "Analytics.profile_views",
      "rule": "typeof profile_views === 'number'",
      "autoGenerated": true
    },
    {
      "id": "rule_480_1756748912807",
      "name": "Analytics.post_views is required",
      "type": "type",
      "severity": "error",
      "path": "Analytics.post_views",
      "rule": "post_views !== null && post_views !== undefined",
      "autoGenerated": true
    },
    {
      "id": "rule_481_1756748912807",
      "name": "Analytics.post_views must be number",
      "type": "type",
      "severity": "error",
      "path": "Analytics.post_views",
      "rule": "typeof post_views === 'number'",
      "autoGenerated": true
    },
    {
      "id": "rule_482_1756748912807",
      "name": "Analytics.post_engagement_rate is required",
      "type": "type",
      "severity": "error",
      "path": "Analytics.post_engagement_rate",
      "rule": "post_engagement_rate !== null && post_engagement_rate !== undefined",
      "autoGenerated": true
    },
    {
      "id": "rule_483_1756748912807",
      "name": "Analytics.post_engagement_rate must be number",
      "type": "type",
      "severity": "error",
      "path": "Analytics.post_engagement_rate",
      "rule": "typeof post_engagement_rate === 'number'",
      "autoGenerated": true
    },
    {
      "id": "rule_484_1756748912807",
      "name": "Analytics.clients_served is required",
      "type": "type",
      "severity": "error",
      "path": "Analytics.clients_served",
      "rule": "clients_served !== null && clients_served !== undefined",
      "autoGenerated": true
    },
    {
      "id": "rule_485_1756748912807",
      "name": "Analytics.clients_served must be number",
      "type": "type",
      "severity": "error",
      "path": "Analytics.clients_served",
      "rule": "typeof clients_served === 'number'",
      "autoGenerated": true
    },
    {
      "id": "rule_486_1756748912807",
      "name": "Analytics.revenue is required",
      "type": "type",
      "severity": "error",
      "path": "Analytics.revenue",
      "rule": "revenue !== null && revenue !== undefined",
      "autoGenerated": true
    },
    {
      "id": "rule_487_1756748912807",
      "name": "Analytics.revenue must be number",
      "type": "type",
      "severity": "error",
      "path": "Analytics.revenue",
      "rule": "typeof revenue === 'number'",
      "autoGenerated": true
    },
    {
      "id": "rule_488_1756748912807",
      "name": "Analytics.average_ticket_size is required",
      "type": "type",
      "severity": "error",
      "path": "Analytics.average_ticket_size",
      "rule": "average_ticket_size !== null && average_ticket_size !== undefined",
      "autoGenerated": true
    },
    {
      "id": "rule_489_1756748912807",
      "name": "Analytics.average_ticket_size must be number",
      "type": "type",
      "severity": "error",
      "path": "Analytics.average_ticket_size",
      "rule": "typeof average_ticket_size === 'number'",
      "autoGenerated": true
    },
    {
      "id": "rule_490_1756748912807",
      "name": "Analytics.new_followers is required",
      "type": "type",
      "severity": "error",
      "path": "Analytics.new_followers",
      "rule": "new_followers !== null && new_followers !== undefined",
      "autoGenerated": true
    },
    {
      "id": "rule_491_1756748912807",
      "name": "Analytics.new_followers must be number",
      "type": "type",
      "severity": "error",
      "path": "Analytics.new_followers",
      "rule": "typeof new_followers === 'number'",
      "autoGenerated": true
    },
    {
      "id": "rule_492_1756748912807",
      "name": "Analytics.new_clients is required",
      "type": "type",
      "severity": "error",
      "path": "Analytics.new_clients",
      "rule": "new_clients !== null && new_clients !== undefined",
      "autoGenerated": true
    },
    {
      "id": "rule_493_1756748912807",
      "name": "Analytics.new_clients must be number",
      "type": "type",
      "severity": "error",
      "path": "Analytics.new_clients",
      "rule": "typeof new_clients === 'number'",
      "autoGenerated": true
    },
    {
      "id": "rule_494_1756748912807",
      "name": "Analytics.retention_rate is required",
      "type": "type",
      "severity": "error",
      "path": "Analytics.retention_rate",
      "rule": "retention_rate !== null && retention_rate !== undefined",
      "autoGenerated": true
    },
    {
      "id": "rule_495_1756748912807",
      "name": "Analytics.retention_rate must be number",
      "type": "type",
      "severity": "error",
      "path": "Analytics.retention_rate",
      "rule": "typeof retention_rate === 'number'",
      "autoGenerated": true
    },
    {
      "id": "rule_496_1756748912807",
      "name": "User.id is required",
      "type": "type",
      "severity": "error",
      "path": "User.id",
      "rule": "id !== null && id !== undefined",
      "autoGenerated": true
    },
    {
      "id": "rule_497_1756748912807",
      "name": "User.id must be string",
      "type": "type",
      "severity": "error",
      "path": "User.id",
      "rule": "typeof id === 'string'",
      "autoGenerated": true
    },
    {
      "id": "rule_498_1756748912807",
      "name": "User.email is required",
      "type": "type",
      "severity": "error",
      "path": "User.email",
      "rule": "email !== null && email !== undefined",
      "autoGenerated": true
    },
    {
      "id": "rule_499_1756748912807",
      "name": "User.email must be string",
      "type": "type",
      "severity": "error",
      "path": "User.email",
      "rule": "typeof email === 'string'",
      "autoGenerated": true
    },
    {
      "id": "rule_500_1756748912807",
      "name": "User.name is required",
      "type": "type",
      "severity": "error",
      "path": "User.name",
      "rule": "name !== null && name !== undefined",
      "autoGenerated": true
    },
    {
      "id": "rule_501_1756748912807",
      "name": "User.name must be string",
      "type": "type",
      "severity": "error",
      "path": "User.name",
      "rule": "typeof name === 'string'",
      "autoGenerated": true
    },
    {
      "id": "rule_502_1756748912807",
      "name": "User.username is required",
      "type": "type",
      "severity": "error",
      "path": "User.username",
      "rule": "username !== null && username !== undefined",
      "autoGenerated": true
    },
    {
      "id": "rule_503_1756748912807",
      "name": "User.username must be string",
      "type": "type",
      "severity": "error",
      "path": "User.username",
      "rule": "typeof username === 'string'",
      "autoGenerated": true
    },
    {
      "id": "rule_504_1756748912807",
      "name": "User.avatar must be string",
      "type": "type",
      "severity": "error",
      "path": "User.avatar",
      "rule": "typeof avatar === 'string'",
      "autoGenerated": true
    },
    {
      "id": "rule_505_1756748912807",
      "name": "User.bio must be string",
      "type": "type",
      "severity": "error",
      "path": "User.bio",
      "rule": "typeof bio === 'string'",
      "autoGenerated": true
    },
    {
      "id": "rule_506_1756748912807",
      "name": "User.location must be string",
      "type": "type",
      "severity": "error",
      "path": "User.location",
      "rule": "typeof location === 'string'",
      "autoGenerated": true
    },
    {
      "id": "rule_507_1756748912807",
      "name": "User.isVerified is required",
      "type": "type",
      "severity": "error",
      "path": "User.isVerified",
      "rule": "isVerified !== null && isVerified !== undefined",
      "autoGenerated": true
    },
    {
      "id": "rule_508_1756748912807",
      "name": "User.isVerified must be boolean",
      "type": "type",
      "severity": "error",
      "path": "User.isVerified",
      "rule": "typeof isVerified === 'boolean'",
      "autoGenerated": true
    },
    {
      "id": "rule_509_1756748912807",
      "name": "User.profession is required",
      "type": "type",
      "severity": "error",
      "path": "User.profession",
      "rule": "profession !== null && profession !== undefined",
      "autoGenerated": true
    },
    {
      "id": "rule_510_1756748912807",
      "name": "User.createdAt is required",
      "type": "type",
      "severity": "error",
      "path": "User.createdAt",
      "rule": "createdAt !== null && createdAt !== undefined",
      "autoGenerated": true
    },
    {
      "id": "rule_511_1756748912807",
      "name": "User.createdAt must be string",
      "type": "type",
      "severity": "error",
      "path": "User.createdAt",
      "rule": "typeof createdAt === 'string'",
      "autoGenerated": true
    },
    {
      "id": "rule_512_1756748912807",
      "name": "Post.id is required",
      "type": "type",
      "severity": "error",
      "path": "Post.id",
      "rule": "id !== null && id !== undefined",
      "autoGenerated": true
    },
    {
      "id": "rule_513_1756748912807",
      "name": "Post.id must be string",
      "type": "type",
      "severity": "error",
      "path": "Post.id",
      "rule": "typeof id === 'string'",
      "autoGenerated": true
    },
    {
      "id": "rule_514_1756748912807",
      "name": "Post.userId is required",
      "type": "type",
      "severity": "error",
      "path": "Post.userId",
      "rule": "userId !== null && userId !== undefined",
      "autoGenerated": true
    },
    {
      "id": "rule_515_1756748912807",
      "name": "Post.userId must be string",
      "type": "type",
      "severity": "error",
      "path": "Post.userId",
      "rule": "typeof userId === 'string'",
      "autoGenerated": true
    },
    {
      "id": "rule_516_1756748912807",
      "name": "Post.content is required",
      "type": "type",
      "severity": "error",
      "path": "Post.content",
      "rule": "content !== null && content !== undefined",
      "autoGenerated": true
    },
    {
      "id": "rule_517_1756748912807",
      "name": "Post.content must be string",
      "type": "type",
      "severity": "error",
      "path": "Post.content",
      "rule": "typeof content === 'string'",
      "autoGenerated": true
    },
    {
      "id": "rule_518_1756748912807",
      "name": "Post.video must be string",
      "type": "type",
      "severity": "error",
      "path": "Post.video",
      "rule": "typeof video === 'string'",
      "autoGenerated": true
    },
    {
      "id": "rule_519_1756748912807",
      "name": "Post.likes is required",
      "type": "type",
      "severity": "error",
      "path": "Post.likes",
      "rule": "likes !== null && likes !== undefined",
      "autoGenerated": true
    },
    {
      "id": "rule_520_1756748912807",
      "name": "Post.likes must be number",
      "type": "type",
      "severity": "error",
      "path": "Post.likes",
      "rule": "typeof likes === 'number'",
      "autoGenerated": true
    },
    {
      "id": "rule_521_1756748912807",
      "name": "Post.likedByMe must be boolean",
      "type": "type",
      "severity": "error",
      "path": "Post.likedByMe",
      "rule": "typeof likedByMe === 'boolean'",
      "autoGenerated": true
    },
    {
      "id": "rule_522_1756748912807",
      "name": "Post.comments is required",
      "type": "type",
      "severity": "error",
      "path": "Post.comments",
      "rule": "comments !== null && comments !== undefined",
      "autoGenerated": true
    },
    {
      "id": "rule_523_1756748912807",
      "name": "Post.comments must be number",
      "type": "type",
      "severity": "error",
      "path": "Post.comments",
      "rule": "typeof comments === 'number'",
      "autoGenerated": true
    },
    {
      "id": "rule_524_1756748912807",
      "name": "Post.shares is required",
      "type": "type",
      "severity": "error",
      "path": "Post.shares",
      "rule": "shares !== null && shares !== undefined",
      "autoGenerated": true
    },
    {
      "id": "rule_525_1756748912807",
      "name": "Post.shares must be number",
      "type": "type",
      "severity": "error",
      "path": "Post.shares",
      "rule": "typeof shares === 'number'",
      "autoGenerated": true
    },
    {
      "id": "rule_526_1756748912807",
      "name": "Post.saves is required",
      "type": "type",
      "severity": "error",
      "path": "Post.saves",
      "rule": "saves !== null && saves !== undefined",
      "autoGenerated": true
    },
    {
      "id": "rule_527_1756748912807",
      "name": "Post.saves must be number",
      "type": "type",
      "severity": "error",
      "path": "Post.saves",
      "rule": "typeof saves === 'number'",
      "autoGenerated": true
    },
    {
      "id": "rule_528_1756748912807",
      "name": "Post.createdAt is required",
      "type": "type",
      "severity": "error",
      "path": "Post.createdAt",
      "rule": "createdAt !== null && createdAt !== undefined",
      "autoGenerated": true
    },
    {
      "id": "rule_529_1756748912807",
      "name": "Post.createdAt must be string",
      "type": "type",
      "severity": "error",
      "path": "Post.createdAt",
      "rule": "typeof createdAt === 'string'",
      "autoGenerated": true
    },
    {
      "id": "rule_530_1756748912807",
      "name": "Post.updatedAt is required",
      "type": "type",
      "severity": "error",
      "path": "Post.updatedAt",
      "rule": "updatedAt !== null && updatedAt !== undefined",
      "autoGenerated": true
    },
    {
      "id": "rule_531_1756748912807",
      "name": "Post.updatedAt must be string",
      "type": "type",
      "severity": "error",
      "path": "Post.updatedAt",
      "rule": "typeof updatedAt === 'string'",
      "autoGenerated": true
    },
    {
      "id": "rule_532_1756748912807",
      "name": "Comment.id is required",
      "type": "type",
      "severity": "error",
      "path": "Comment.id",
      "rule": "id !== null && id !== undefined",
      "autoGenerated": true
    },
    {
      "id": "rule_533_1756748912807",
      "name": "Comment.id must be string",
      "type": "type",
      "severity": "error",
      "path": "Comment.id",
      "rule": "typeof id === 'string'",
      "autoGenerated": true
    },
    {
      "id": "rule_534_1756748912807",
      "name": "Comment.postId is required",
      "type": "type",
      "severity": "error",
      "path": "Comment.postId",
      "rule": "postId !== null && postId !== undefined",
      "autoGenerated": true
    },
    {
      "id": "rule_535_1756748912807",
      "name": "Comment.postId must be string",
      "type": "type",
      "severity": "error",
      "path": "Comment.postId",
      "rule": "typeof postId === 'string'",
      "autoGenerated": true
    },
    {
      "id": "rule_536_1756748912807",
      "name": "Comment.userId is required",
      "type": "type",
      "severity": "error",
      "path": "Comment.userId",
      "rule": "userId !== null && userId !== undefined",
      "autoGenerated": true
    },
    {
      "id": "rule_537_1756748912807",
      "name": "Comment.userId must be string",
      "type": "type",
      "severity": "error",
      "path": "Comment.userId",
      "rule": "typeof userId === 'string'",
      "autoGenerated": true
    },
    {
      "id": "rule_538_1756748912807",
      "name": "Comment.content is required",
      "type": "type",
      "severity": "error",
      "path": "Comment.content",
      "rule": "content !== null && content !== undefined",
      "autoGenerated": true
    },
    {
      "id": "rule_539_1756748912807",
      "name": "Comment.content must be string",
      "type": "type",
      "severity": "error",
      "path": "Comment.content",
      "rule": "typeof content === 'string'",
      "autoGenerated": true
    },
    {
      "id": "rule_540_1756748912807",
      "name": "Comment.likes is required",
      "type": "type",
      "severity": "error",
      "path": "Comment.likes",
      "rule": "likes !== null && likes !== undefined",
      "autoGenerated": true
    },
    {
      "id": "rule_541_1756748912807",
      "name": "Comment.likes must be number",
      "type": "type",
      "severity": "error",
      "path": "Comment.likes",
      "rule": "typeof likes === 'number'",
      "autoGenerated": true
    },
    {
      "id": "rule_542_1756748912807",
      "name": "Comment.createdAt is required",
      "type": "type",
      "severity": "error",
      "path": "Comment.createdAt",
      "rule": "createdAt !== null && createdAt !== undefined",
      "autoGenerated": true
    },
    {
      "id": "rule_543_1756748912807",
      "name": "Comment.createdAt must be string",
      "type": "type",
      "severity": "error",
      "path": "Comment.createdAt",
      "rule": "typeof createdAt === 'string'",
      "autoGenerated": true
    },
    {
      "id": "rule_544_1756748912807",
      "name": "LiveSession.id is required",
      "type": "type",
      "severity": "error",
      "path": "LiveSession.id",
      "rule": "id !== null && id !== undefined",
      "autoGenerated": true
    },
    {
      "id": "rule_545_1756748912807",
      "name": "LiveSession.id must be string",
      "type": "type",
      "severity": "error",
      "path": "LiveSession.id",
      "rule": "typeof id === 'string'",
      "autoGenerated": true
    },
    {
      "id": "rule_546_1756748912807",
      "name": "LiveSession.title is required",
      "type": "type",
      "severity": "error",
      "path": "LiveSession.title",
      "rule": "title !== null && title !== undefined",
      "autoGenerated": true
    },
    {
      "id": "rule_547_1756748912807",
      "name": "LiveSession.title must be string",
      "type": "type",
      "severity": "error",
      "path": "LiveSession.title",
      "rule": "typeof title === 'string'",
      "autoGenerated": true
    },
    {
      "id": "rule_548_1756748912807",
      "name": "LiveSession.description is required",
      "type": "type",
      "severity": "error",
      "path": "LiveSession.description",
      "rule": "description !== null && description !== undefined",
      "autoGenerated": true
    },
    {
      "id": "rule_549_1756748912807",
      "name": "LiveSession.description must be string",
      "type": "type",
      "severity": "error",
      "path": "LiveSession.description",
      "rule": "typeof description === 'string'",
      "autoGenerated": true
    },
    {
      "id": "rule_550_1756748912807",
      "name": "LiveSession.instructorId is required",
      "type": "type",
      "severity": "error",
      "path": "LiveSession.instructorId",
      "rule": "instructorId !== null && instructorId !== undefined",
      "autoGenerated": true
    },
    {
      "id": "rule_551_1756748912807",
      "name": "LiveSession.instructorId must be string",
      "type": "type",
      "severity": "error",
      "path": "LiveSession.instructorId",
      "rule": "typeof instructorId === 'string'",
      "autoGenerated": true
    },
    {
      "id": "rule_552_1756748912807",
      "name": "LiveSession.thumbnailUrl must be string",
      "type": "type",
      "severity": "error",
      "path": "LiveSession.thumbnailUrl",
      "rule": "typeof thumbnailUrl === 'string'",
      "autoGenerated": true
    },
    {
      "id": "rule_553_1756748912807",
      "name": "LiveSession.isLive is required",
      "type": "type",
      "severity": "error",
      "path": "LiveSession.isLive",
      "rule": "isLive !== null && isLive !== undefined",
      "autoGenerated": true
    },
    {
      "id": "rule_554_1756748912807",
      "name": "LiveSession.isLive must be boolean",
      "type": "type",
      "severity": "error",
      "path": "LiveSession.isLive",
      "rule": "typeof isLive === 'boolean'",
      "autoGenerated": true
    },
    {
      "id": "rule_555_1756748912807",
      "name": "LiveSession.viewerCount is required",
      "type": "type",
      "severity": "error",
      "path": "LiveSession.viewerCount",
      "rule": "viewerCount !== null && viewerCount !== undefined",
      "autoGenerated": true
    },
    {
      "id": "rule_556_1756748912807",
      "name": "LiveSession.viewerCount must be number",
      "type": "type",
      "severity": "error",
      "path": "LiveSession.viewerCount",
      "rule": "typeof viewerCount === 'number'",
      "autoGenerated": true
    },
    {
      "id": "rule_557_1756748912807",
      "name": "LiveSession.startTime is required",
      "type": "type",
      "severity": "error",
      "path": "LiveSession.startTime",
      "rule": "startTime !== null && startTime !== undefined",
      "autoGenerated": true
    },
    {
      "id": "rule_558_1756748912807",
      "name": "LiveSession.startTime must be string",
      "type": "type",
      "severity": "error",
      "path": "LiveSession.startTime",
      "rule": "typeof startTime === 'string'",
      "autoGenerated": true
    },
    {
      "id": "rule_559_1756748912807",
      "name": "LiveSession.endTime must be string",
      "type": "type",
      "severity": "error",
      "path": "LiveSession.endTime",
      "rule": "typeof endTime === 'string'",
      "autoGenerated": true
    },
    {
      "id": "rule_560_1756748912807",
      "name": "LiveSession.category is required",
      "type": "type",
      "severity": "error",
      "path": "LiveSession.category",
      "rule": "category !== null && category !== undefined",
      "autoGenerated": true
    },
    {
      "id": "rule_561_1756748912807",
      "name": "Product.id is required",
      "type": "type",
      "severity": "error",
      "path": "Product.id",
      "rule": "id !== null && id !== undefined",
      "autoGenerated": true
    },
    {
      "id": "rule_562_1756748912807",
      "name": "Product.id must be string",
      "type": "type",
      "severity": "error",
      "path": "Product.id",
      "rule": "typeof id === 'string'",
      "autoGenerated": true
    },
    {
      "id": "rule_563_1756748912807",
      "name": "Product.name is required",
      "type": "type",
      "severity": "error",
      "path": "Product.name",
      "rule": "name !== null && name !== undefined",
      "autoGenerated": true
    },
    {
      "id": "rule_564_1756748912807",
      "name": "Product.name must be string",
      "type": "type",
      "severity": "error",
      "path": "Product.name",
      "rule": "typeof name === 'string'",
      "autoGenerated": true
    },
    {
      "id": "rule_565_1756748912807",
      "name": "Product.description is required",
      "type": "type",
      "severity": "error",
      "path": "Product.description",
      "rule": "description !== null && description !== undefined",
      "autoGenerated": true
    },
    {
      "id": "rule_566_1756748912807",
      "name": "Product.description must be string",
      "type": "type",
      "severity": "error",
      "path": "Product.description",
      "rule": "typeof description === 'string'",
      "autoGenerated": true
    },
    {
      "id": "rule_567_1756748912807",
      "name": "Product.category is required",
      "type": "type",
      "severity": "error",
      "path": "Product.category",
      "rule": "category !== null && category !== undefined",
      "autoGenerated": true
    },
    {
      "id": "rule_568_1756748912807",
      "name": "Product.price is required",
      "type": "type",
      "severity": "error",
      "path": "Product.price",
      "rule": "price !== null && price !== undefined",
      "autoGenerated": true
    },
    {
      "id": "rule_569_1756748912807",
      "name": "Product.price must be number",
      "type": "type",
      "severity": "error",
      "path": "Product.price",
      "rule": "typeof price === 'number'",
      "autoGenerated": true
    },
    {
      "id": "rule_570_1756748912807",
      "name": "Product.professionalPrice is required",
      "type": "type",
      "severity": "error",
      "path": "Product.professionalPrice",
      "rule": "professionalPrice !== null && professionalPrice !== undefined",
      "autoGenerated": true
    },
    {
      "id": "rule_571_1756748912807",
      "name": "Product.professionalPrice must be number",
      "type": "type",
      "severity": "error",
      "path": "Product.professionalPrice",
      "rule": "typeof professionalPrice === 'number'",
      "autoGenerated": true
    },
    {
      "id": "rule_572_1756748912807",
      "name": "Product.imageUrl is required",
      "type": "type",
      "severity": "error",
      "path": "Product.imageUrl",
      "rule": "imageUrl !== null && imageUrl !== undefined",
      "autoGenerated": true
    },
    {
      "id": "rule_573_1756748912807",
      "name": "Product.imageUrl must be string",
      "type": "type",
      "severity": "error",
      "path": "Product.imageUrl",
      "rule": "typeof imageUrl === 'string'",
      "autoGenerated": true
    },
    {
      "id": "rule_574_1756748912807",
      "name": "Product.inStock is required",
      "type": "type",
      "severity": "error",
      "path": "Product.inStock",
      "rule": "inStock !== null && inStock !== undefined",
      "autoGenerated": true
    },
    {
      "id": "rule_575_1756748912807",
      "name": "Product.inStock must be boolean",
      "type": "type",
      "severity": "error",
      "path": "Product.inStock",
      "rule": "typeof inStock === 'boolean'",
      "autoGenerated": true
    },
    {
      "id": "rule_576_1756748912807",
      "name": "Product.stockCount must be number",
      "type": "type",
      "severity": "error",
      "path": "Product.stockCount",
      "rule": "typeof stockCount === 'number'",
      "autoGenerated": true
    },
    {
      "id": "rule_577_1756748912807",
      "name": "Product.rating must be number",
      "type": "type",
      "severity": "error",
      "path": "Product.rating",
      "rule": "typeof rating === 'number'",
      "autoGenerated": true
    },
    {
      "id": "rule_578_1756748912807",
      "name": "Product.reviewCount must be number",
      "type": "type",
      "severity": "error",
      "path": "Product.reviewCount",
      "rule": "typeof reviewCount === 'number'",
      "autoGenerated": true
    },
    {
      "id": "rule_579_1756748912807",
      "name": "CartItem.productId is required",
      "type": "type",
      "severity": "error",
      "path": "CartItem.productId",
      "rule": "productId !== null && productId !== undefined",
      "autoGenerated": true
    },
    {
      "id": "rule_580_1756748912808",
      "name": "CartItem.productId must be string",
      "type": "type",
      "severity": "error",
      "path": "CartItem.productId",
      "rule": "typeof productId === 'string'",
      "autoGenerated": true
    },
    {
      "id": "rule_581_1756748912808",
      "name": "CartItem.quantity is required",
      "type": "type",
      "severity": "error",
      "path": "CartItem.quantity",
      "rule": "quantity !== null && quantity !== undefined",
      "autoGenerated": true
    },
    {
      "id": "rule_582_1756748912808",
      "name": "CartItem.quantity must be number",
      "type": "type",
      "severity": "error",
      "path": "CartItem.quantity",
      "rule": "typeof quantity === 'number'",
      "autoGenerated": true
    },
    {
      "id": "rule_583_1756748912808",
      "name": "CartItem.price is required",
      "type": "type",
      "severity": "error",
      "path": "CartItem.price",
      "rule": "price !== null && price !== undefined",
      "autoGenerated": true
    },
    {
      "id": "rule_584_1756748912808",
      "name": "CartItem.price must be number",
      "type": "type",
      "severity": "error",
      "path": "CartItem.price",
      "rule": "typeof price === 'number'",
      "autoGenerated": true
    },
    {
      "id": "rule_585_1756748912808",
      "name": "Order.id is required",
      "type": "type",
      "severity": "error",
      "path": "Order.id",
      "rule": "id !== null && id !== undefined",
      "autoGenerated": true
    },
    {
      "id": "rule_586_1756748912808",
      "name": "Order.id must be string",
      "type": "type",
      "severity": "error",
      "path": "Order.id",
      "rule": "typeof id === 'string'",
      "autoGenerated": true
    },
    {
      "id": "rule_587_1756748912808",
      "name": "Order.userId is required",
      "type": "type",
      "severity": "error",
      "path": "Order.userId",
      "rule": "userId !== null && userId !== undefined",
      "autoGenerated": true
    },
    {
      "id": "rule_588_1756748912808",
      "name": "Order.userId must be string",
      "type": "type",
      "severity": "error",
      "path": "Order.userId",
      "rule": "typeof userId === 'string'",
      "autoGenerated": true
    },
    {
      "id": "rule_589_1756748912808",
      "name": "Order.items is required",
      "type": "type",
      "severity": "error",
      "path": "Order.items",
      "rule": "items !== null && items !== undefined",
      "autoGenerated": true
    },
    {
      "id": "rule_590_1756748912808",
      "name": "Order.status is required",
      "type": "type",
      "severity": "error",
      "path": "Order.status",
      "rule": "status !== null && status !== undefined",
      "autoGenerated": true
    },
    {
      "id": "rule_591_1756748912808",
      "name": "Order.totalAmount is required",
      "type": "type",
      "severity": "error",
      "path": "Order.totalAmount",
      "rule": "totalAmount !== null && totalAmount !== undefined",
      "autoGenerated": true
    },
    {
      "id": "rule_592_1756748912808",
      "name": "Order.totalAmount must be number",
      "type": "type",
      "severity": "error",
      "path": "Order.totalAmount",
      "rule": "typeof totalAmount === 'number'",
      "autoGenerated": true
    },
    {
      "id": "rule_593_1756748912808",
      "name": "Order.shippingAddress is required",
      "type": "type",
      "severity": "error",
      "path": "Order.shippingAddress",
      "rule": "shippingAddress !== null && shippingAddress !== undefined",
      "autoGenerated": true
    },
    {
      "id": "rule_594_1756748912808",
      "name": "Order.shippingAddress must be string",
      "type": "type",
      "severity": "error",
      "path": "Order.shippingAddress",
      "rule": "typeof shippingAddress === 'string'",
      "autoGenerated": true
    },
    {
      "id": "rule_595_1756748912808",
      "name": "Order.paymentMethod is required",
      "type": "type",
      "severity": "error",
      "path": "Order.paymentMethod",
      "rule": "paymentMethod !== null && paymentMethod !== undefined",
      "autoGenerated": true
    },
    {
      "id": "rule_596_1756748912808",
      "name": "Order.paymentMethod must be string",
      "type": "type",
      "severity": "error",
      "path": "Order.paymentMethod",
      "rule": "typeof paymentMethod === 'string'",
      "autoGenerated": true
    },
    {
      "id": "rule_597_1756748912808",
      "name": "Order.createdAt is required",
      "type": "type",
      "severity": "error",
      "path": "Order.createdAt",
      "rule": "createdAt !== null && createdAt !== undefined",
      "autoGenerated": true
    },
    {
      "id": "rule_598_1756748912808",
      "name": "Order.createdAt must be string",
      "type": "type",
      "severity": "error",
      "path": "Order.createdAt",
      "rule": "typeof createdAt === 'string'",
      "autoGenerated": true
    },
    {
      "id": "rule_599_1756748912808",
      "name": "Order.updatedAt is required",
      "type": "type",
      "severity": "error",
      "path": "Order.updatedAt",
      "rule": "updatedAt !== null && updatedAt !== undefined",
      "autoGenerated": true
    },
    {
      "id": "rule_600_1756748912808",
      "name": "Order.updatedAt must be string",
      "type": "type",
      "severity": "error",
      "path": "Order.updatedAt",
      "rule": "typeof updatedAt === 'string'",
      "autoGenerated": true
    },
    {
      "id": "rule_601_1756748912808",
      "name": "OrderItem.productId is required",
      "type": "type",
      "severity": "error",
      "path": "OrderItem.productId",
      "rule": "productId !== null && productId !== undefined",
      "autoGenerated": true
    },
    {
      "id": "rule_602_1756748912808",
      "name": "OrderItem.productId must be string",
      "type": "type",
      "severity": "error",
      "path": "OrderItem.productId",
      "rule": "typeof productId === 'string'",
      "autoGenerated": true
    },
    {
      "id": "rule_603_1756748912808",
      "name": "OrderItem.quantity is required",
      "type": "type",
      "severity": "error",
      "path": "OrderItem.quantity",
      "rule": "quantity !== null && quantity !== undefined",
      "autoGenerated": true
    },
    {
      "id": "rule_604_1756748912808",
      "name": "OrderItem.quantity must be number",
      "type": "type",
      "severity": "error",
      "path": "OrderItem.quantity",
      "rule": "typeof quantity === 'number'",
      "autoGenerated": true
    },
    {
      "id": "rule_605_1756748912808",
      "name": "OrderItem.price is required",
      "type": "type",
      "severity": "error",
      "path": "OrderItem.price",
      "rule": "price !== null && price !== undefined",
      "autoGenerated": true
    },
    {
      "id": "rule_606_1756748912808",
      "name": "OrderItem.price must be number",
      "type": "type",
      "severity": "error",
      "path": "OrderItem.price",
      "rule": "typeof price === 'number'",
      "autoGenerated": true
    },
    {
      "id": "rule_607_1756748912808",
      "name": "InsurancePolicy.id is required",
      "type": "type",
      "severity": "error",
      "path": "InsurancePolicy.id",
      "rule": "id !== null && id !== undefined",
      "autoGenerated": true
    },
    {
      "id": "rule_608_1756748912808",
      "name": "InsurancePolicy.id must be string",
      "type": "type",
      "severity": "error",
      "path": "InsurancePolicy.id",
      "rule": "typeof id === 'string'",
      "autoGenerated": true
    },
    {
      "id": "rule_609_1756748912808",
      "name": "InsurancePolicy.userId is required",
      "type": "type",
      "severity": "error",
      "path": "InsurancePolicy.userId",
      "rule": "userId !== null && userId !== undefined",
      "autoGenerated": true
    },
    {
      "id": "rule_610_1756748912808",
      "name": "InsurancePolicy.userId must be string",
      "type": "type",
      "severity": "error",
      "path": "InsurancePolicy.userId",
      "rule": "typeof userId === 'string'",
      "autoGenerated": true
    },
    {
      "id": "rule_611_1756748912808",
      "name": "InsurancePolicy.policyNumber is required",
      "type": "type",
      "severity": "error",
      "path": "InsurancePolicy.policyNumber",
      "rule": "policyNumber !== null && policyNumber !== undefined",
      "autoGenerated": true
    },
    {
      "id": "rule_612_1756748912808",
      "name": "InsurancePolicy.policyNumber must be string",
      "type": "type",
      "severity": "error",
      "path": "InsurancePolicy.policyNumber",
      "rule": "typeof policyNumber === 'string'",
      "autoGenerated": true
    },
    {
      "id": "rule_613_1756748912808",
      "name": "InsurancePolicy.coverage is required",
      "type": "type",
      "severity": "error",
      "path": "InsurancePolicy.coverage",
      "rule": "coverage !== null && coverage !== undefined",
      "autoGenerated": true
    },
    {
      "id": "rule_614_1756748912808",
      "name": "InsurancePolicy.coverage must be number",
      "type": "type",
      "severity": "error",
      "path": "InsurancePolicy.coverage",
      "rule": "typeof coverage === 'number'",
      "autoGenerated": true
    },
    {
      "id": "rule_615_1756748912808",
      "name": "InsurancePolicy.premium is required",
      "type": "type",
      "severity": "error",
      "path": "InsurancePolicy.premium",
      "rule": "premium !== null && premium !== undefined",
      "autoGenerated": true
    },
    {
      "id": "rule_616_1756748912808",
      "name": "InsurancePolicy.premium must be number",
      "type": "type",
      "severity": "error",
      "path": "InsurancePolicy.premium",
      "rule": "typeof premium === 'number'",
      "autoGenerated": true
    },
    {
      "id": "rule_617_1756748912808",
      "name": "InsurancePolicy.validFrom is required",
      "type": "type",
      "severity": "error",
      "path": "InsurancePolicy.validFrom",
      "rule": "validFrom !== null && validFrom !== undefined",
      "autoGenerated": true
    },
    {
      "id": "rule_618_1756748912808",
      "name": "InsurancePolicy.validFrom must be string",
      "type": "type",
      "severity": "error",
      "path": "InsurancePolicy.validFrom",
      "rule": "typeof validFrom === 'string'",
      "autoGenerated": true
    },
    {
      "id": "rule_619_1756748912808",
      "name": "InsurancePolicy.validUntil is required",
      "type": "type",
      "severity": "error",
      "path": "InsurancePolicy.validUntil",
      "rule": "validUntil !== null && validUntil !== undefined",
      "autoGenerated": true
    },
    {
      "id": "rule_620_1756748912808",
      "name": "InsurancePolicy.validUntil must be string",
      "type": "type",
      "severity": "error",
      "path": "InsurancePolicy.validUntil",
      "rule": "typeof validUntil === 'string'",
      "autoGenerated": true
    },
    {
      "id": "rule_621_1756748912808",
      "name": "InsurancePolicy.status is required",
      "type": "type",
      "severity": "error",
      "path": "InsurancePolicy.status",
      "rule": "status !== null && status !== undefined",
      "autoGenerated": true
    },
    {
      "id": "rule_622_1756748912808",
      "name": "InsurancePolicy.type is required",
      "type": "type",
      "severity": "error",
      "path": "InsurancePolicy.type",
      "rule": "type !== null && type !== undefined",
      "autoGenerated": true
    },
    {
      "id": "rule_623_1756748912808",
      "name": "InsuranceClaim.id is required",
      "type": "type",
      "severity": "error",
      "path": "InsuranceClaim.id",
      "rule": "id !== null && id !== undefined",
      "autoGenerated": true
    },
    {
      "id": "rule_624_1756748912808",
      "name": "InsuranceClaim.id must be string",
      "type": "type",
      "severity": "error",
      "path": "InsuranceClaim.id",
      "rule": "typeof id === 'string'",
      "autoGenerated": true
    },
    {
      "id": "rule_625_1756748912808",
      "name": "InsuranceClaim.policyId is required",
      "type": "type",
      "severity": "error",
      "path": "InsuranceClaim.policyId",
      "rule": "policyId !== null && policyId !== undefined",
      "autoGenerated": true
    },
    {
      "id": "rule_626_1756748912808",
      "name": "InsuranceClaim.policyId must be string",
      "type": "type",
      "severity": "error",
      "path": "InsuranceClaim.policyId",
      "rule": "typeof policyId === 'string'",
      "autoGenerated": true
    },
    {
      "id": "rule_627_1756748912808",
      "name": "InsuranceClaim.userId is required",
      "type": "type",
      "severity": "error",
      "path": "InsuranceClaim.userId",
      "rule": "userId !== null && userId !== undefined",
      "autoGenerated": true
    },
    {
      "id": "rule_628_1756748912808",
      "name": "InsuranceClaim.userId must be string",
      "type": "type",
      "severity": "error",
      "path": "InsuranceClaim.userId",
      "rule": "typeof userId === 'string'",
      "autoGenerated": true
    },
    {
      "id": "rule_629_1756748912808",
      "name": "InsuranceClaim.claimNumber is required",
      "type": "type",
      "severity": "error",
      "path": "InsuranceClaim.claimNumber",
      "rule": "claimNumber !== null && claimNumber !== undefined",
      "autoGenerated": true
    },
    {
      "id": "rule_630_1756748912808",
      "name": "InsuranceClaim.claimNumber must be string",
      "type": "type",
      "severity": "error",
      "path": "InsuranceClaim.claimNumber",
      "rule": "typeof claimNumber === 'string'",
      "autoGenerated": true
    },
    {
      "id": "rule_631_1756748912808",
      "name": "InsuranceClaim.amount is required",
      "type": "type",
      "severity": "error",
      "path": "InsuranceClaim.amount",
      "rule": "amount !== null && amount !== undefined",
      "autoGenerated": true
    },
    {
      "id": "rule_632_1756748912808",
      "name": "InsuranceClaim.amount must be number",
      "type": "type",
      "severity": "error",
      "path": "InsuranceClaim.amount",
      "rule": "typeof amount === 'number'",
      "autoGenerated": true
    },
    {
      "id": "rule_633_1756748912808",
      "name": "InsuranceClaim.status is required",
      "type": "type",
      "severity": "error",
      "path": "InsuranceClaim.status",
      "rule": "status !== null && status !== undefined",
      "autoGenerated": true
    },
    {
      "id": "rule_634_1756748912808",
      "name": "InsuranceClaim.type is required",
      "type": "type",
      "severity": "error",
      "path": "InsuranceClaim.type",
      "rule": "type !== null && type !== undefined",
      "autoGenerated": true
    },
    {
      "id": "rule_635_1756748912808",
      "name": "InsuranceClaim.description is required",
      "type": "type",
      "severity": "error",
      "path": "InsuranceClaim.description",
      "rule": "description !== null && description !== undefined",
      "autoGenerated": true
    },
    {
      "id": "rule_636_1756748912808",
      "name": "InsuranceClaim.description must be string",
      "type": "type",
      "severity": "error",
      "path": "InsuranceClaim.description",
      "rule": "typeof description === 'string'",
      "autoGenerated": true
    },
    {
      "id": "rule_637_1756748912808",
      "name": "InsuranceClaim.submittedAt is required",
      "type": "type",
      "severity": "error",
      "path": "InsuranceClaim.submittedAt",
      "rule": "submittedAt !== null && submittedAt !== undefined",
      "autoGenerated": true
    },
    {
      "id": "rule_638_1756748912808",
      "name": "InsuranceClaim.submittedAt must be string",
      "type": "type",
      "severity": "error",
      "path": "InsuranceClaim.submittedAt",
      "rule": "typeof submittedAt === 'string'",
      "autoGenerated": true
    },
    {
      "id": "rule_639_1756748912808",
      "name": "InsuranceClaim.processedAt must be string",
      "type": "type",
      "severity": "error",
      "path": "InsuranceClaim.processedAt",
      "rule": "typeof processedAt === 'string'",
      "autoGenerated": true
    },
    {
      "id": "rule_640_1756748912808",
      "name": "Client.id is required",
      "type": "type",
      "severity": "error",
      "path": "Client.id",
      "rule": "id !== null && id !== undefined",
      "autoGenerated": true
    },
    {
      "id": "rule_641_1756748912808",
      "name": "Client.id must be string",
      "type": "type",
      "severity": "error",
      "path": "Client.id",
      "rule": "typeof id === 'string'",
      "autoGenerated": true
    },
    {
      "id": "rule_642_1756748912808",
      "name": "Client.userId is required",
      "type": "type",
      "severity": "error",
      "path": "Client.userId",
      "rule": "userId !== null && userId !== undefined",
      "autoGenerated": true
    },
    {
      "id": "rule_643_1756748912808",
      "name": "Client.userId must be string",
      "type": "type",
      "severity": "error",
      "path": "Client.userId",
      "rule": "typeof userId === 'string'",
      "autoGenerated": true
    },
    {
      "id": "rule_644_1756748912808",
      "name": "Client.name is required",
      "type": "type",
      "severity": "error",
      "path": "Client.name",
      "rule": "name !== null && name !== undefined",
      "autoGenerated": true
    },
    {
      "id": "rule_645_1756748912808",
      "name": "Client.name must be string",
      "type": "type",
      "severity": "error",
      "path": "Client.name",
      "rule": "typeof name === 'string'",
      "autoGenerated": true
    },
    {
      "id": "rule_646_1756748912808",
      "name": "Client.phone is required",
      "type": "type",
      "severity": "error",
      "path": "Client.phone",
      "rule": "phone !== null && phone !== undefined",
      "autoGenerated": true
    },
    {
      "id": "rule_647_1756748912808",
      "name": "Client.phone must be string",
      "type": "type",
      "severity": "error",
      "path": "Client.phone",
      "rule": "typeof phone === 'string'",
      "autoGenerated": true
    },
    {
      "id": "rule_648_1756748912808",
      "name": "Client.email must be string",
      "type": "type",
      "severity": "error",
      "path": "Client.email",
      "rule": "typeof email === 'string'",
      "autoGenerated": true
    },
    {
      "id": "rule_649_1756748912808",
      "name": "Client.avatar must be string",
      "type": "type",
      "severity": "error",
      "path": "Client.avatar",
      "rule": "typeof avatar === 'string'",
      "autoGenerated": true
    },
    {
      "id": "rule_650_1756748912808",
      "name": "Client.lastVisit is required",
      "type": "type",
      "severity": "error",
      "path": "Client.lastVisit",
      "rule": "lastVisit !== null && lastVisit !== undefined",
      "autoGenerated": true
    },
    {
      "id": "rule_651_1756748912808",
      "name": "Client.lastVisit must be string",
      "type": "type",
      "severity": "error",
      "path": "Client.lastVisit",
      "rule": "typeof lastVisit === 'string'",
      "autoGenerated": true
    },
    {
      "id": "rule_652_1756748912808",
      "name": "Client.totalVisits is required",
      "type": "type",
      "severity": "error",
      "path": "Client.totalVisits",
      "rule": "totalVisits !== null && totalVisits !== undefined",
      "autoGenerated": true
    },
    {
      "id": "rule_653_1756748912808",
      "name": "Client.totalVisits must be number",
      "type": "type",
      "severity": "error",
      "path": "Client.totalVisits",
      "rule": "typeof totalVisits === 'number'",
      "autoGenerated": true
    },
    {
      "id": "rule_654_1756748912808",
      "name": "Client.totalSpent is required",
      "type": "type",
      "severity": "error",
      "path": "Client.totalSpent",
      "rule": "totalSpent !== null && totalSpent !== undefined",
      "autoGenerated": true
    },
    {
      "id": "rule_655_1756748912808",
      "name": "Client.totalSpent must be number",
      "type": "type",
      "severity": "error",
      "path": "Client.totalSpent",
      "rule": "typeof totalSpent === 'number'",
      "autoGenerated": true
    },
    {
      "id": "rule_656_1756748912808",
      "name": "Client.preferredServices is required",
      "type": "type",
      "severity": "error",
      "path": "Client.preferredServices",
      "rule": "preferredServices !== null && preferredServices !== undefined",
      "autoGenerated": true
    },
    {
      "id": "rule_657_1756748912808",
      "name": "Client.notes must be string",
      "type": "type",
      "severity": "error",
      "path": "Client.notes",
      "rule": "typeof notes === 'string'",
      "autoGenerated": true
    },
    {
      "id": "rule_658_1756748912808",
      "name": "Client.birthday must be string",
      "type": "type",
      "severity": "error",
      "path": "Client.birthday",
      "rule": "typeof birthday === 'string'",
      "autoGenerated": true
    },
    {
      "id": "rule_659_1756748912808",
      "name": "Client.createdAt is required",
      "type": "type",
      "severity": "error",
      "path": "Client.createdAt",
      "rule": "createdAt !== null && createdAt !== undefined",
      "autoGenerated": true
    },
    {
      "id": "rule_660_1756748912808",
      "name": "Client.createdAt must be string",
      "type": "type",
      "severity": "error",
      "path": "Client.createdAt",
      "rule": "typeof createdAt === 'string'",
      "autoGenerated": true
    },
    {
      "id": "rule_661_1756748912808",
      "name": "Client.updatedAt is required",
      "type": "type",
      "severity": "error",
      "path": "Client.updatedAt",
      "rule": "updatedAt !== null && updatedAt !== undefined",
      "autoGenerated": true
    },
    {
      "id": "rule_662_1756748912808",
      "name": "Client.updatedAt must be string",
      "type": "type",
      "severity": "error",
      "path": "Client.updatedAt",
      "rule": "typeof updatedAt === 'string'",
      "autoGenerated": true
    },
    {
      "id": "rule_663_1756748912808",
      "name": "Appointment.id is required",
      "type": "type",
      "severity": "error",
      "path": "Appointment.id",
      "rule": "id !== null && id !== undefined",
      "autoGenerated": true
    },
    {
      "id": "rule_664_1756748912808",
      "name": "Appointment.id must be string",
      "type": "type",
      "severity": "error",
      "path": "Appointment.id",
      "rule": "typeof id === 'string'",
      "autoGenerated": true
    },
    {
      "id": "rule_665_1756748912808",
      "name": "Appointment.clientId is required",
      "type": "type",
      "severity": "error",
      "path": "Appointment.clientId",
      "rule": "clientId !== null && clientId !== undefined",
      "autoGenerated": true
    },
    {
      "id": "rule_666_1756748912808",
      "name": "Appointment.clientId must be string",
      "type": "type",
      "severity": "error",
      "path": "Appointment.clientId",
      "rule": "typeof clientId === 'string'",
      "autoGenerated": true
    },
    {
      "id": "rule_667_1756748912808",
      "name": "Appointment.userId is required",
      "type": "type",
      "severity": "error",
      "path": "Appointment.userId",
      "rule": "userId !== null && userId !== undefined",
      "autoGenerated": true
    },
    {
      "id": "rule_668_1756748912808",
      "name": "Appointment.userId must be string",
      "type": "type",
      "severity": "error",
      "path": "Appointment.userId",
      "rule": "typeof userId === 'string'",
      "autoGenerated": true
    },
    {
      "id": "rule_669_1756748912808",
      "name": "Appointment.service is required",
      "type": "type",
      "severity": "error",
      "path": "Appointment.service",
      "rule": "service !== null && service !== undefined",
      "autoGenerated": true
    },
    {
      "id": "rule_670_1756748912808",
      "name": "Appointment.service must be string",
      "type": "type",
      "severity": "error",
      "path": "Appointment.service",
      "rule": "typeof service === 'string'",
      "autoGenerated": true
    },
    {
      "id": "rule_671_1756748912808",
      "name": "Appointment.date is required",
      "type": "type",
      "severity": "error",
      "path": "Appointment.date",
      "rule": "date !== null && date !== undefined",
      "autoGenerated": true
    },
    {
      "id": "rule_672_1756748912808",
      "name": "Appointment.date must be string",
      "type": "type",
      "severity": "error",
      "path": "Appointment.date",
      "rule": "typeof date === 'string'",
      "autoGenerated": true
    },
    {
      "id": "rule_673_1756748912808",
      "name": "Appointment.time is required",
      "type": "type",
      "severity": "error",
      "path": "Appointment.time",
      "rule": "time !== null && time !== undefined",
      "autoGenerated": true
    },
    {
      "id": "rule_674_1756748912808",
      "name": "Appointment.time must be string",
      "type": "type",
      "severity": "error",
      "path": "Appointment.time",
      "rule": "typeof time === 'string'",
      "autoGenerated": true
    },
    {
      "id": "rule_675_1756748912808",
      "name": "Appointment.duration is required",
      "type": "type",
      "severity": "error",
      "path": "Appointment.duration",
      "rule": "duration !== null && duration !== undefined",
      "autoGenerated": true
    },
    {
      "id": "rule_676_1756748912808",
      "name": "Appointment.duration must be number",
      "type": "type",
      "severity": "error",
      "path": "Appointment.duration",
      "rule": "typeof duration === 'number'",
      "autoGenerated": true
    },
    {
      "id": "rule_677_1756748912808",
      "name": "Appointment.price is required",
      "type": "type",
      "severity": "error",
      "path": "Appointment.price",
      "rule": "price !== null && price !== undefined",
      "autoGenerated": true
    },
    {
      "id": "rule_678_1756748912808",
      "name": "Appointment.price must be number",
      "type": "type",
      "severity": "error",
      "path": "Appointment.price",
      "rule": "typeof price === 'number'",
      "autoGenerated": true
    },
    {
      "id": "rule_679_1756748912808",
      "name": "Appointment.status is required",
      "type": "type",
      "severity": "error",
      "path": "Appointment.status",
      "rule": "status !== null && status !== undefined",
      "autoGenerated": true
    },
    {
      "id": "rule_680_1756748912808",
      "name": "Appointment.notes must be string",
      "type": "type",
      "severity": "error",
      "path": "Appointment.notes",
      "rule": "typeof notes === 'string'",
      "autoGenerated": true
    },
    {
      "id": "rule_681_1756748912808",
      "name": "Course.id is required",
      "type": "type",
      "severity": "error",
      "path": "Course.id",
      "rule": "id !== null && id !== undefined",
      "autoGenerated": true
    },
    {
      "id": "rule_682_1756748912808",
      "name": "Course.id must be string",
      "type": "type",
      "severity": "error",
      "path": "Course.id",
      "rule": "typeof id === 'string'",
      "autoGenerated": true
    },
    {
      "id": "rule_683_1756748912808",
      "name": "Course.title is required",
      "type": "type",
      "severity": "error",
      "path": "Course.title",
      "rule": "title !== null && title !== undefined",
      "autoGenerated": true
    },
    {
      "id": "rule_684_1756748912808",
      "name": "Course.title must be string",
      "type": "type",
      "severity": "error",
      "path": "Course.title",
      "rule": "typeof title === 'string'",
      "autoGenerated": true
    },
    {
      "id": "rule_685_1756748912808",
      "name": "Course.description is required",
      "type": "type",
      "severity": "error",
      "path": "Course.description",
      "rule": "description !== null && description !== undefined",
      "autoGenerated": true
    },
    {
      "id": "rule_686_1756748912808",
      "name": "Course.description must be string",
      "type": "type",
      "severity": "error",
      "path": "Course.description",
      "rule": "typeof description === 'string'",
      "autoGenerated": true
    },
    {
      "id": "rule_687_1756748912808",
      "name": "Course.instructorId is required",
      "type": "type",
      "severity": "error",
      "path": "Course.instructorId",
      "rule": "instructorId !== null && instructorId !== undefined",
      "autoGenerated": true
    },
    {
      "id": "rule_688_1756748912808",
      "name": "Course.instructorId must be string",
      "type": "type",
      "severity": "error",
      "path": "Course.instructorId",
      "rule": "typeof instructorId === 'string'",
      "autoGenerated": true
    },
    {
      "id": "rule_689_1756748912808",
      "name": "Course.thumbnailUrl is required",
      "type": "type",
      "severity": "error",
      "path": "Course.thumbnailUrl",
      "rule": "thumbnailUrl !== null && thumbnailUrl !== undefined",
      "autoGenerated": true
    },
    {
      "id": "rule_690_1756748912808",
      "name": "Course.thumbnailUrl must be string",
      "type": "type",
      "severity": "error",
      "path": "Course.thumbnailUrl",
      "rule": "typeof thumbnailUrl === 'string'",
      "autoGenerated": true
    },
    {
      "id": "rule_691_1756748912808",
      "name": "Course.duration is required",
      "type": "type",
      "severity": "error",
      "path": "Course.duration",
      "rule": "duration !== null && duration !== undefined",
      "autoGenerated": true
    },
    {
      "id": "rule_692_1756748912808",
      "name": "Course.duration must be number",
      "type": "type",
      "severity": "error",
      "path": "Course.duration",
      "rule": "typeof duration === 'number'",
      "autoGenerated": true
    },
    {
      "id": "rule_693_1756748912808",
      "name": "Course.category is required",
      "type": "type",
      "severity": "error",
      "path": "Course.category",
      "rule": "category !== null && category !== undefined",
      "autoGenerated": true
    },
    {
      "id": "rule_694_1756748912808",
      "name": "Course.difficulty is required",
      "type": "type",
      "severity": "error",
      "path": "Course.difficulty",
      "rule": "difficulty !== null && difficulty !== undefined",
      "autoGenerated": true
    },
    {
      "id": "rule_695_1756748912808",
      "name": "Course.rating is required",
      "type": "type",
      "severity": "error",
      "path": "Course.rating",
      "rule": "rating !== null && rating !== undefined",
      "autoGenerated": true
    },
    {
      "id": "rule_696_1756748912808",
      "name": "Course.rating must be number",
      "type": "type",
      "severity": "error",
      "path": "Course.rating",
      "rule": "typeof rating === 'number'",
      "autoGenerated": true
    },
    {
      "id": "rule_697_1756748912808",
      "name": "Course.enrollments is required",
      "type": "type",
      "severity": "error",
      "path": "Course.enrollments",
      "rule": "enrollments !== null && enrollments !== undefined",
      "autoGenerated": true
    },
    {
      "id": "rule_698_1756748912808",
      "name": "Course.enrollments must be number",
      "type": "type",
      "severity": "error",
      "path": "Course.enrollments",
      "rule": "typeof enrollments === 'number'",
      "autoGenerated": true
    },
    {
      "id": "rule_699_1756748912808",
      "name": "Course.hasCertificate is required",
      "type": "type",
      "severity": "error",
      "path": "Course.hasCertificate",
      "rule": "hasCertificate !== null && hasCertificate !== undefined",
      "autoGenerated": true
    },
    {
      "id": "rule_700_1756748912808",
      "name": "Course.hasCertificate must be boolean",
      "type": "type",
      "severity": "error",
      "path": "Course.hasCertificate",
      "rule": "typeof hasCertificate === 'boolean'",
      "autoGenerated": true
    },
    {
      "id": "rule_701_1756748912808",
      "name": "Course.price is required",
      "type": "type",
      "severity": "error",
      "path": "Course.price",
      "rule": "price !== null && price !== undefined",
      "autoGenerated": true
    },
    {
      "id": "rule_702_1756748912808",
      "name": "Course.price must be number",
      "type": "type",
      "severity": "error",
      "path": "Course.price",
      "rule": "typeof price === 'number'",
      "autoGenerated": true
    },
    {
      "id": "rule_703_1756748912808",
      "name": "Course.isPremium is required",
      "type": "type",
      "severity": "error",
      "path": "Course.isPremium",
      "rule": "isPremium !== null && isPremium !== undefined",
      "autoGenerated": true
    },
    {
      "id": "rule_704_1756748912808",
      "name": "Course.isPremium must be boolean",
      "type": "type",
      "severity": "error",
      "path": "Course.isPremium",
      "rule": "typeof isPremium === 'boolean'",
      "autoGenerated": true
    },
    {
      "id": "rule_705_1756748912808",
      "name": "Course.createdAt is required",
      "type": "type",
      "severity": "error",
      "path": "Course.createdAt",
      "rule": "createdAt !== null && createdAt !== undefined",
      "autoGenerated": true
    },
    {
      "id": "rule_706_1756748912808",
      "name": "Course.createdAt must be string",
      "type": "type",
      "severity": "error",
      "path": "Course.createdAt",
      "rule": "typeof createdAt === 'string'",
      "autoGenerated": true
    },
    {
      "id": "rule_707_1756748912808",
      "name": "CourseProgress.id is required",
      "type": "type",
      "severity": "error",
      "path": "CourseProgress.id",
      "rule": "id !== null && id !== undefined",
      "autoGenerated": true
    },
    {
      "id": "rule_708_1756748912808",
      "name": "CourseProgress.id must be string",
      "type": "type",
      "severity": "error",
      "path": "CourseProgress.id",
      "rule": "typeof id === 'string'",
      "autoGenerated": true
    },
    {
      "id": "rule_709_1756748912808",
      "name": "CourseProgress.courseId is required",
      "type": "type",
      "severity": "error",
      "path": "CourseProgress.courseId",
      "rule": "courseId !== null && courseId !== undefined",
      "autoGenerated": true
    },
    {
      "id": "rule_710_1756748912808",
      "name": "CourseProgress.courseId must be string",
      "type": "type",
      "severity": "error",
      "path": "CourseProgress.courseId",
      "rule": "typeof courseId === 'string'",
      "autoGenerated": true
    },
    {
      "id": "rule_711_1756748912808",
      "name": "CourseProgress.userId is required",
      "type": "type",
      "severity": "error",
      "path": "CourseProgress.userId",
      "rule": "userId !== null && userId !== undefined",
      "autoGenerated": true
    },
    {
      "id": "rule_712_1756748912808",
      "name": "CourseProgress.userId must be string",
      "type": "type",
      "severity": "error",
      "path": "CourseProgress.userId",
      "rule": "typeof userId === 'string'",
      "autoGenerated": true
    },
    {
      "id": "rule_713_1756748912808",
      "name": "CourseProgress.progress is required",
      "type": "type",
      "severity": "error",
      "path": "CourseProgress.progress",
      "rule": "progress !== null && progress !== undefined",
      "autoGenerated": true
    },
    {
      "id": "rule_714_1756748912808",
      "name": "CourseProgress.progress must be number",
      "type": "type",
      "severity": "error",
      "path": "CourseProgress.progress",
      "rule": "typeof progress === 'number'",
      "autoGenerated": true
    },
    {
      "id": "rule_715_1756748912808",
      "name": "CourseProgress.completed is required",
      "type": "type",
      "severity": "error",
      "path": "CourseProgress.completed",
      "rule": "completed !== null && completed !== undefined",
      "autoGenerated": true
    },
    {
      "id": "rule_716_1756748912808",
      "name": "CourseProgress.completed must be boolean",
      "type": "type",
      "severity": "error",
      "path": "CourseProgress.completed",
      "rule": "typeof completed === 'boolean'",
      "autoGenerated": true
    },
    {
      "id": "rule_717_1756748912808",
      "name": "CourseProgress.certificateUrl must be string",
      "type": "type",
      "severity": "error",
      "path": "CourseProgress.certificateUrl",
      "rule": "typeof certificateUrl === 'string'",
      "autoGenerated": true
    },
    {
      "id": "rule_718_1756748912808",
      "name": "CourseProgress.startedAt is required",
      "type": "type",
      "severity": "error",
      "path": "CourseProgress.startedAt",
      "rule": "startedAt !== null && startedAt !== undefined",
      "autoGenerated": true
    },
    {
      "id": "rule_719_1756748912808",
      "name": "CourseProgress.startedAt must be string",
      "type": "type",
      "severity": "error",
      "path": "CourseProgress.startedAt",
      "rule": "typeof startedAt === 'string'",
      "autoGenerated": true
    },
    {
      "id": "rule_720_1756748912808",
      "name": "CourseProgress.completedAt must be string",
      "type": "type",
      "severity": "error",
      "path": "CourseProgress.completedAt",
      "rule": "typeof completedAt === 'string'",
      "autoGenerated": true
    },
    {
      "id": "rule_721_1756748912808",
      "name": "NavItem.id is required",
      "type": "type",
      "severity": "error",
      "path": "NavItem.id",
      "rule": "id !== null && id !== undefined",
      "autoGenerated": true
    },
    {
      "id": "rule_722_1756748912808",
      "name": "NavItem.label is required",
      "type": "type",
      "severity": "error",
      "path": "NavItem.label",
      "rule": "label !== null && label !== undefined",
      "autoGenerated": true
    },
    {
      "id": "rule_723_1756748912808",
      "name": "NavItem.label must be string",
      "type": "type",
      "severity": "error",
      "path": "NavItem.label",
      "rule": "typeof label === 'string'",
      "autoGenerated": true
    },
    {
      "id": "rule_724_1756748912808",
      "name": "NavItem.icon is required",
      "type": "type",
      "severity": "error",
      "path": "NavItem.icon",
      "rule": "icon !== null && icon !== undefined",
      "autoGenerated": true
    },
    {
      "id": "rule_725_1756748912808",
      "name": "NavItem.icon must be string",
      "type": "type",
      "severity": "error",
      "path": "NavItem.icon",
      "rule": "typeof icon === 'string'",
      "autoGenerated": true
    },
    {
      "id": "rule_726_1756748912808",
      "name": "NavItem.badge must be number",
      "type": "type",
      "severity": "error",
      "path": "NavItem.badge",
      "rule": "typeof badge === 'number'",
      "autoGenerated": true
    },
    {
      "id": "rule_727_1756748912808",
      "name": "NavItem.route is required",
      "type": "type",
      "severity": "error",
      "path": "NavItem.route",
      "rule": "route !== null && route !== undefined",
      "autoGenerated": true
    },
    {
      "id": "rule_728_1756748912808",
      "name": "NavItem.route must be string",
      "type": "type",
      "severity": "error",
      "path": "NavItem.route",
      "rule": "typeof route === 'string'",
      "autoGenerated": true
    },
    {
      "id": "rule_729_1756748912808",
      "name": "ApiResponse.data is required",
      "type": "type",
      "severity": "error",
      "path": "ApiResponse.data",
      "rule": "data !== null && data !== undefined",
      "autoGenerated": true
    },
    {
      "id": "rule_730_1756748912808",
      "name": "ApiResponse.error must be string",
      "type": "type",
      "severity": "error",
      "path": "ApiResponse.error",
      "rule": "typeof error === 'string'",
      "autoGenerated": true
    },
    {
      "id": "rule_731_1756748912808",
      "name": "ApiResponse.message must be string",
      "type": "type",
      "severity": "error",
      "path": "ApiResponse.message",
      "rule": "typeof message === 'string'",
      "autoGenerated": true
    },
    {
      "id": "rule_732_1756748912808",
      "name": "PaginatedResponse.data is required",
      "type": "type",
      "severity": "error",
      "path": "PaginatedResponse.data",
      "rule": "data !== null && data !== undefined",
      "autoGenerated": true
    },
    {
      "id": "rule_733_1756748912808",
      "name": "PaginatedResponse.total is required",
      "type": "type",
      "severity": "error",
      "path": "PaginatedResponse.total",
      "rule": "total !== null && total !== undefined",
      "autoGenerated": true
    },
    {
      "id": "rule_734_1756748912808",
      "name": "PaginatedResponse.total must be number",
      "type": "type",
      "severity": "error",
      "path": "PaginatedResponse.total",
      "rule": "typeof total === 'number'",
      "autoGenerated": true
    },
    {
      "id": "rule_735_1756748912808",
      "name": "PaginatedResponse.page is required",
      "type": "type",
      "severity": "error",
      "path": "PaginatedResponse.page",
      "rule": "page !== null && page !== undefined",
      "autoGenerated": true
    },
    {
      "id": "rule_736_1756748912808",
      "name": "PaginatedResponse.page must be number",
      "type": "type",
      "severity": "error",
      "path": "PaginatedResponse.page",
      "rule": "typeof page === 'number'",
      "autoGenerated": true
    },
    {
      "id": "rule_737_1756748912808",
      "name": "PaginatedResponse.limit is required",
      "type": "type",
      "severity": "error",
      "path": "PaginatedResponse.limit",
      "rule": "limit !== null && limit !== undefined",
      "autoGenerated": true
    },
    {
      "id": "rule_738_1756748912808",
      "name": "PaginatedResponse.limit must be number",
      "type": "type",
      "severity": "error",
      "path": "PaginatedResponse.limit",
      "rule": "typeof limit === 'number'",
      "autoGenerated": true
    },
    {
      "id": "rule_739_1756748912808",
      "name": "PaginatedResponse.hasMore is required",
      "type": "type",
      "severity": "error",
      "path": "PaginatedResponse.hasMore",
      "rule": "hasMore !== null && hasMore !== undefined",
      "autoGenerated": true
    },
    {
      "id": "rule_740_1756748912808",
      "name": "PaginatedResponse.hasMore must be boolean",
      "type": "type",
      "severity": "error",
      "path": "PaginatedResponse.hasMore",
      "rule": "typeof hasMore === 'boolean'",
      "autoGenerated": true
    },
    {
      "id": "rule_741_1756748912808",
      "name": "Professional.email must be valid email",
      "type": "business",
      "severity": "error",
      "path": "Professional.email",
      "rule": "/^[\\w-\\.]+@([\\w-]+\\.)+[\\w-]{2,4}$/.test(email)",
      "autoGenerated": true
    },
    {
      "id": "rule_742_1756748912808",
      "name": "Professional.phone must be valid phone",
      "type": "business",
      "severity": "warning",
      "path": "Professional.phone",
      "rule": "/^[\\+]?[(]?[0-9]{3}[)]?[-\\s\\.]?[0-9]{3}[-\\s\\.]?[0-9]{4,6}$/.test(phone)",
      "autoGenerated": true
    },
    {
      "id": "rule_743_1756748912808",
      "name": "Professional.created_at must be valid date",
      "type": "business",
      "severity": "error",
      "path": "Professional.created_at",
      "rule": "!isNaN(new Date(created_at).getTime())",
      "autoGenerated": true
    },
    {
      "id": "rule_744_1756748912808",
      "name": "Post.created_at must be valid date",
      "type": "business",
      "severity": "error",
      "path": "Post.created_at",
      "rule": "!isNaN(new Date(created_at).getTime())",
      "autoGenerated": true
    },
    {
      "id": "rule_745_1756748912808",
      "name": "PostEngagement.created_at must be valid date",
      "type": "business",
      "severity": "error",
      "path": "PostEngagement.created_at",
      "rule": "!isNaN(new Date(created_at).getTime())",
      "autoGenerated": true
    },
    {
      "id": "rule_746_1756748912808",
      "name": "Comment.created_at must be valid date",
      "type": "business",
      "severity": "error",
      "path": "Comment.created_at",
      "rule": "!isNaN(new Date(created_at).getTime())",
      "autoGenerated": true
    },
    {
      "id": "rule_747_1756748912808",
      "name": "LiveSession.created_at must be valid date",
      "type": "business",
      "severity": "error",
      "path": "LiveSession.created_at",
      "rule": "!isNaN(new Date(created_at).getTime())",
      "autoGenerated": true
    },
    {
      "id": "rule_748_1756748912808",
      "name": "LiveSession.status must be valid status",
      "type": "business",
      "severity": "error",
      "path": "LiveSession.status",
      "rule": "['active', 'inactive', 'pending', 'completed', 'cancelled'].includes(status)",
      "autoGenerated": true
    },
    {
      "id": "rule_749_1756748912808",
      "name": "Product.created_at must be valid date",
      "type": "business",
      "severity": "error",
      "path": "Product.created_at",
      "rule": "!isNaN(new Date(created_at).getTime())",
      "autoGenerated": true
    },
    {
      "id": "rule_750_1756748912808",
      "name": "Product.professional_price must be positive",
      "type": "business",
      "severity": "error",
      "path": "Product.professional_price",
      "rule": "professional_price >= 0",
      "autoGenerated": true
    },
    {
      "id": "rule_751_1756748912808",
      "name": "Order.created_at must be valid date",
      "type": "business",
      "severity": "error",
      "path": "Order.created_at",
      "rule": "!isNaN(new Date(created_at).getTime())",
      "autoGenerated": true
    },
    {
      "id": "rule_752_1756748912808",
      "name": "Order.total_amount must be positive",
      "type": "business",
      "severity": "error",
      "path": "Order.total_amount",
      "rule": "total_amount >= 0",
      "autoGenerated": true
    },
    {
      "id": "rule_753_1756748912808",
      "name": "Order.status must be valid status",
      "type": "business",
      "severity": "error",
      "path": "Order.status",
      "rule": "['active', 'inactive', 'pending', 'completed', 'cancelled'].includes(status)",
      "autoGenerated": true
    },
    {
      "id": "rule_754_1756748912808",
      "name": "OrderItem.unit_price must be positive",
      "type": "business",
      "severity": "error",
      "path": "OrderItem.unit_price",
      "rule": "unit_price >= 0",
      "autoGenerated": true
    },
    {
      "id": "rule_755_1756748912808",
      "name": "InsurancePolicy.created_at must be valid date",
      "type": "business",
      "severity": "error",
      "path": "InsurancePolicy.created_at",
      "rule": "!isNaN(new Date(created_at).getTime())",
      "autoGenerated": true
    },
    {
      "id": "rule_756_1756748912808",
      "name": "InsurancePolicy.coverage_amount must be positive",
      "type": "business",
      "severity": "error",
      "path": "InsurancePolicy.coverage_amount",
      "rule": "coverage_amount >= 0",
      "autoGenerated": true
    },
    {
      "id": "rule_757_1756748912808",
      "name": "InsurancePolicy.status must be valid status",
      "type": "business",
      "severity": "error",
      "path": "InsurancePolicy.status",
      "rule": "['active', 'inactive', 'pending', 'completed', 'cancelled'].includes(status)",
      "autoGenerated": true
    },
    {
      "id": "rule_758_1756748912808",
      "name": "InsuranceClaim.created_at must be valid date",
      "type": "business",
      "severity": "error",
      "path": "InsuranceClaim.created_at",
      "rule": "!isNaN(new Date(created_at).getTime())",
      "autoGenerated": true
    },
    {
      "id": "rule_759_1756748912808",
      "name": "InsuranceClaim.claim_amount must be positive",
      "type": "business",
      "severity": "error",
      "path": "InsuranceClaim.claim_amount",
      "rule": "claim_amount >= 0",
      "autoGenerated": true
    },
    {
      "id": "rule_760_1756748912808",
      "name": "InsuranceClaim.status must be valid status",
      "type": "business",
      "severity": "error",
      "path": "InsuranceClaim.status",
      "rule": "['active', 'inactive', 'pending', 'completed', 'cancelled'].includes(status)",
      "autoGenerated": true
    },
    {
      "id": "rule_761_1756748912808",
      "name": "Client.email must be valid email",
      "type": "business",
      "severity": "error",
      "path": "Client.email",
      "rule": "/^[\\w-\\.]+@([\\w-]+\\.)+[\\w-]{2,4}$/.test(email)",
      "autoGenerated": true
    },
    {
      "id": "rule_762_1756748912808",
      "name": "Client.phone must be valid phone",
      "type": "business",
      "severity": "warning",
      "path": "Client.phone",
      "rule": "/^[\\+]?[(]?[0-9]{3}[)]?[-\\s\\.]?[0-9]{3}[-\\s\\.]?[0-9]{4,6}$/.test(phone)",
      "autoGenerated": true
    },
    {
      "id": "rule_763_1756748912808",
      "name": "Client.created_at must be valid date",
      "type": "business",
      "severity": "error",
      "path": "Client.created_at",
      "rule": "!isNaN(new Date(created_at).getTime())",
      "autoGenerated": true
    },
    {
      "id": "rule_764_1756748912808",
      "name": "Appointment.created_at must be valid date",
      "type": "business",
      "severity": "error",
      "path": "Appointment.created_at",
      "rule": "!isNaN(new Date(created_at).getTime())",
      "autoGenerated": true
    },
    {
      "id": "rule_765_1756748912808",
      "name": "Appointment.total_amount must be positive",
      "type": "business",
      "severity": "error",
      "path": "Appointment.total_amount",
      "rule": "total_amount >= 0",
      "autoGenerated": true
    },
    {
      "id": "rule_766_1756748912808",
      "name": "Appointment.status must be valid status",
      "type": "business",
      "severity": "error",
      "path": "Appointment.status",
      "rule": "['active', 'inactive', 'pending', 'completed', 'cancelled'].includes(status)",
      "autoGenerated": true
    },
    {
      "id": "rule_767_1756748912808",
      "name": "ServiceItem.price must be positive",
      "type": "business",
      "severity": "error",
      "path": "ServiceItem.price",
      "rule": "price >= 0",
      "autoGenerated": true
    },
    {
      "id": "rule_768_1756748912808",
      "name": "Course.created_at must be valid date",
      "type": "business",
      "severity": "error",
      "path": "Course.created_at",
      "rule": "!isNaN(new Date(created_at).getTime())",
      "autoGenerated": true
    },
    {
      "id": "rule_769_1756748912808",
      "name": "Course.price must be positive",
      "type": "business",
      "severity": "error",
      "path": "Course.price",
      "rule": "price >= 0",
      "autoGenerated": true
    },
    {
      "id": "rule_770_1756748912808",
      "name": "CourseEnrollment.enrolled_at must be valid date",
      "type": "business",
      "severity": "error",
      "path": "CourseEnrollment.enrolled_at",
      "rule": "!isNaN(new Date(enrolled_at).getTime())",
      "autoGenerated": true
    },
    {
      "id": "rule_771_1756748912808",
      "name": "Notification.created_at must be valid date",
      "type": "business",
      "severity": "error",
      "path": "Notification.created_at",
      "rule": "!isNaN(new Date(created_at).getTime())",
      "autoGenerated": true
    },
    {
      "id": "rule_772_1756748912808",
      "name": "Analytics.date must be valid date",
      "type": "business",
      "severity": "error",
      "path": "Analytics.date",
      "rule": "!isNaN(new Date(date).getTime())",
      "autoGenerated": true
    },
    {
      "id": "rule_773_1756748912808",
      "name": "User.email must be valid email",
      "type": "business",
      "severity": "error",
      "path": "User.email",
      "rule": "/^[\\w-\\.]+@([\\w-]+\\.)+[\\w-]{2,4}$/.test(email)",
      "autoGenerated": true
    },
    {
      "id": "rule_774_1756748912808",
      "name": "Post.updatedAt must be valid date",
      "type": "business",
      "severity": "error",
      "path": "Post.updatedAt",
      "rule": "!isNaN(new Date(updatedAt).getTime())",
      "autoGenerated": true
    },
    {
      "id": "rule_775_1756748912808",
      "name": "Product.price must be positive",
      "type": "business",
      "severity": "error",
      "path": "Product.price",
      "rule": "price >= 0",
      "autoGenerated": true
    },
    {
      "id": "rule_776_1756748912808",
      "name": "CartItem.price must be positive",
      "type": "business",
      "severity": "error",
      "path": "CartItem.price",
      "rule": "price >= 0",
      "autoGenerated": true
    },
    {
      "id": "rule_777_1756748912808",
      "name": "Order.updatedAt must be valid date",
      "type": "business",
      "severity": "error",
      "path": "Order.updatedAt",
      "rule": "!isNaN(new Date(updatedAt).getTime())",
      "autoGenerated": true
    },
    {
      "id": "rule_778_1756748912808",
      "name": "Order.totalAmount must be positive",
      "type": "business",
      "severity": "error",
      "path": "Order.totalAmount",
      "rule": "totalAmount >= 0",
      "autoGenerated": true
    },
    {
      "id": "rule_779_1756748912808",
      "name": "Order.status must be valid status",
      "type": "business",
      "severity": "error",
      "path": "Order.status",
      "rule": "['active', 'inactive', 'pending', 'completed', 'cancelled'].includes(status)",
      "autoGenerated": true
    },
    {
      "id": "rule_780_1756748912808",
      "name": "OrderItem.price must be positive",
      "type": "business",
      "severity": "error",
      "path": "OrderItem.price",
      "rule": "price >= 0",
      "autoGenerated": true
    },
    {
      "id": "rule_781_1756748912808",
      "name": "InsurancePolicy.status must be valid status",
      "type": "business",
      "severity": "error",
      "path": "InsurancePolicy.status",
      "rule": "['active', 'inactive', 'pending', 'completed', 'cancelled'].includes(status)",
      "autoGenerated": true
    },
    {
      "id": "rule_782_1756748912808",
      "name": "InsuranceClaim.amount must be positive",
      "type": "business",
      "severity": "error",
      "path": "InsuranceClaim.amount",
      "rule": "amount >= 0",
      "autoGenerated": true
    },
    {
      "id": "rule_783_1756748912808",
      "name": "InsuranceClaim.status must be valid status",
      "type": "business",
      "severity": "error",
      "path": "InsuranceClaim.status",
      "rule": "['active', 'inactive', 'pending', 'completed', 'cancelled'].includes(status)",
      "autoGenerated": true
    },
    {
      "id": "rule_784_1756748912808",
      "name": "Client.email must be valid email",
      "type": "business",
      "severity": "error",
      "path": "Client.email",
      "rule": "/^[\\w-\\.]+@([\\w-]+\\.)+[\\w-]{2,4}$/.test(email)",
      "autoGenerated": true
    },
    {
      "id": "rule_785_1756748912808",
      "name": "Client.phone must be valid phone",
      "type": "business",
      "severity": "warning",
      "path": "Client.phone",
      "rule": "/^[\\+]?[(]?[0-9]{3}[)]?[-\\s\\.]?[0-9]{3}[-\\s\\.]?[0-9]{4,6}$/.test(phone)",
      "autoGenerated": true
    },
    {
      "id": "rule_786_1756748912808",
      "name": "Client.updatedAt must be valid date",
      "type": "business",
      "severity": "error",
      "path": "Client.updatedAt",
      "rule": "!isNaN(new Date(updatedAt).getTime())",
      "autoGenerated": true
    },
    {
      "id": "rule_787_1756748912808",
      "name": "Appointment.date must be valid date",
      "type": "business",
      "severity": "error",
      "path": "Appointment.date",
      "rule": "!isNaN(new Date(date).getTime())",
      "autoGenerated": true
    },
    {
      "id": "rule_788_1756748912808",
      "name": "Appointment.price must be positive",
      "type": "business",
      "severity": "error",
      "path": "Appointment.price",
      "rule": "price >= 0",
      "autoGenerated": true
    },
    {
      "id": "rule_789_1756748912808",
      "name": "Appointment.status must be valid status",
      "type": "business",
      "severity": "error",
      "path": "Appointment.status",
      "rule": "['active', 'inactive', 'pending', 'completed', 'cancelled'].includes(status)",
      "autoGenerated": true
    },
    {
      "id": "rule_790_1756748912808",
      "name": "Course.price must be positive",
      "type": "business",
      "severity": "error",
      "path": "Course.price",
      "rule": "price >= 0",
      "autoGenerated": true
    },
    {
      "id": "rule_791_1756748912808",
      "name": "Database queries must have valid ID",
      "type": "business",
      "severity": "error",
      "path": "database.query",
      "rule": "id !== null && id !== undefined",
      "autoGenerated": true
    },
    {
      "id": "rule_792_1756748912808",
      "name": "Professional lists should be paginated",
      "type": "performance",
      "severity": "warning",
      "path": "Professional.list",
      "rule": "limit <= 100",
      "autoGenerated": true
    },
    {
      "id": "rule_793_1756748912808",
      "name": "Post lists should be paginated",
      "type": "performance",
      "severity": "warning",
      "path": "Post.list",
      "rule": "limit <= 100",
      "autoGenerated": true
    },
    {
      "id": "rule_794_1756748912808",
      "name": "PostEngagement lists should be paginated",
      "type": "performance",
      "severity": "warning",
      "path": "PostEngagement.list",
      "rule": "limit <= 100",
      "autoGenerated": true
    },
    {
      "id": "rule_795_1756748912808",
      "name": "Comment lists should be paginated",
      "type": "performance",
      "severity": "warning",
      "path": "Comment.list",
      "rule": "limit <= 100",
      "autoGenerated": true
    },
    {
      "id": "rule_796_1756748912808",
      "name": "LiveSession lists should be paginated",
      "type": "performance",
      "severity": "warning",
      "path": "LiveSession.list",
      "rule": "limit <= 100",
      "autoGenerated": true
    },
    {
      "id": "rule_797_1756748912808",
      "name": "Product lists should be paginated",
      "type": "performance",
      "severity": "warning",
      "path": "Product.list",
      "rule": "limit <= 100",
      "autoGenerated": true
    },
    {
      "id": "rule_798_1756748912808",
      "name": "Order lists should be paginated",
      "type": "performance",
      "severity": "warning",
      "path": "Order.list",
      "rule": "limit <= 100",
      "autoGenerated": true
    },
    {
      "id": "rule_799_1756748912808",
      "name": "OrderItem lists should be paginated",
      "type": "performance",
      "severity": "warning",
      "path": "OrderItem.list",
      "rule": "limit <= 100",
      "autoGenerated": true
    },
    {
      "id": "rule_800_1756748912808",
      "name": "InsurancePolicy lists should be paginated",
      "type": "performance",
      "severity": "warning",
      "path": "InsurancePolicy.list",
      "rule": "limit <= 100",
      "autoGenerated": true
    },
    {
      "id": "rule_801_1756748912808",
      "name": "InsuranceClaim lists should be paginated",
      "type": "performance",
      "severity": "warning",
      "path": "InsuranceClaim.list",
      "rule": "limit <= 100",
      "autoGenerated": true
    },
    {
      "id": "rule_802_1756748912808",
      "name": "Client lists should be paginated",
      "type": "performance",
      "severity": "warning",
      "path": "Client.list",
      "rule": "limit <= 100",
      "autoGenerated": true
    },
    {
      "id": "rule_803_1756748912808",
      "name": "Appointment lists should be paginated",
      "type": "performance",
      "severity": "warning",
      "path": "Appointment.list",
      "rule": "limit <= 100",
      "autoGenerated": true
    },
    {
      "id": "rule_804_1756748912808",
      "name": "ServiceItem lists should be paginated",
      "type": "performance",
      "severity": "warning",
      "path": "ServiceItem.list",
      "rule": "limit <= 100",
      "autoGenerated": true
    },
    {
      "id": "rule_805_1756748912808",
      "name": "Course lists should be paginated",
      "type": "performance",
      "severity": "warning",
      "path": "Course.list",
      "rule": "limit <= 100",
      "autoGenerated": true
    },
    {
      "id": "rule_806_1756748912808",
      "name": "CourseEnrollment lists should be paginated",
      "type": "performance",
      "severity": "warning",
      "path": "CourseEnrollment.list",
      "rule": "limit <= 100",
      "autoGenerated": true
    },
    {
      "id": "rule_807_1756748912808",
      "name": "Address lists should be paginated",
      "type": "performance",
      "severity": "warning",
      "path": "Address.list",
      "rule": "limit <= 100",
      "autoGenerated": true
    },
    {
      "id": "rule_808_1756748912808",
      "name": "Notification lists should be paginated",
      "type": "performance",
      "severity": "warning",
      "path": "Notification.list",
      "rule": "limit <= 100",
      "autoGenerated": true
    },
    {
      "id": "rule_809_1756748912808",
      "name": "Analytics lists should be paginated",
      "type": "performance",
      "severity": "warning",
      "path": "Analytics.list",
      "rule": "limit <= 100",
      "autoGenerated": true
    },
    {
      "id": "rule_810_1756748912808",
      "name": "User lists should be paginated",
      "type": "performance",
      "severity": "warning",
      "path": "User.list",
      "rule": "limit <= 100",
      "autoGenerated": true
    },
    {
      "id": "rule_811_1756748912808",
      "name": "Post lists should be paginated",
      "type": "performance",
      "severity": "warning",
      "path": "Post.list",
      "rule": "limit <= 100",
      "autoGenerated": true
    },
    {
      "id": "rule_812_1756748912808",
      "name": "Comment lists should be paginated",
      "type": "performance",
      "severity": "warning",
      "path": "Comment.list",
      "rule": "limit <= 100",
      "autoGenerated": true
    },
    {
      "id": "rule_813_1756748912808",
      "name": "LiveSession lists should be paginated",
      "type": "performance",
      "severity": "warning",
      "path": "LiveSession.list",
      "rule": "limit <= 100",
      "autoGenerated": true
    },
    {
      "id": "rule_814_1756748912808",
      "name": "Product lists should be paginated",
      "type": "performance",
      "severity": "warning",
      "path": "Product.list",
      "rule": "limit <= 100",
      "autoGenerated": true
    },
    {
      "id": "rule_815_1756748912808",
      "name": "CartItem lists should be paginated",
      "type": "performance",
      "severity": "warning",
      "path": "CartItem.list",
      "rule": "limit <= 100",
      "autoGenerated": true
    },
    {
      "id": "rule_816_1756748912808",
      "name": "Order lists should be paginated",
      "type": "performance",
      "severity": "warning",
      "path": "Order.list",
      "rule": "limit <= 100",
      "autoGenerated": true
    },
    {
      "id": "rule_817_1756748912808",
      "name": "OrderItem lists should be paginated",
      "type": "performance",
      "severity": "warning",
      "path": "OrderItem.list",
      "rule": "limit <= 100",
      "autoGenerated": true
    },
    {
      "id": "rule_818_1756748912808",
      "name": "InsurancePolicy lists should be paginated",
      "type": "performance",
      "severity": "warning",
      "path": "InsurancePolicy.list",
      "rule": "limit <= 100",
      "autoGenerated": true
    },
    {
      "id": "rule_819_1756748912808",
      "name": "InsuranceClaim lists should be paginated",
      "type": "performance",
      "severity": "warning",
      "path": "InsuranceClaim.list",
      "rule": "limit <= 100",
      "autoGenerated": true
    },
    {
      "id": "rule_820_1756748912808",
      "name": "Client lists should be paginated",
      "type": "performance",
      "severity": "warning",
      "path": "Client.list",
      "rule": "limit <= 100",
      "autoGenerated": true
    },
    {
      "id": "rule_821_1756748912808",
      "name": "Appointment lists should be paginated",
      "type": "performance",
      "severity": "warning",
      "path": "Appointment.list",
      "rule": "limit <= 100",
      "autoGenerated": true
    },
    {
      "id": "rule_822_1756748912808",
      "name": "Course lists should be paginated",
      "type": "performance",
      "severity": "warning",
      "path": "Course.list",
      "rule": "limit <= 100",
      "autoGenerated": true
    },
    {
      "id": "rule_823_1756748912808",
      "name": "CourseProgress lists should be paginated",
      "type": "performance",
      "severity": "warning",
      "path": "CourseProgress.list",
      "rule": "limit <= 100",
      "autoGenerated": true
    },
    {
      "id": "rule_824_1756748912808",
      "name": "NavItem lists should be paginated",
      "type": "performance",
      "severity": "warning",
      "path": "NavItem.list",
      "rule": "limit <= 100",
      "autoGenerated": true
    },
    {
      "id": "rule_825_1756748912808",
      "name": "ApiResponse lists should be paginated",
      "type": "performance",
      "severity": "warning",
      "path": "ApiResponse.list",
      "rule": "limit <= 100",
      "autoGenerated": true
    },
    {
      "id": "rule_826_1756748912808",
      "name": "PaginatedResponse lists should be paginated",
      "type": "performance",
      "severity": "warning",
      "path": "PaginatedResponse.list",
      "rule": "limit <= 100",
      "autoGenerated": true
    },
    {
      "id": "rule_827_1756748912808",
      "name": "CategoryCardProps lists should be paginated",
      "type": "performance",
      "severity": "warning",
      "path": "CategoryCardProps.list",
      "rule": "limit <= 100",
      "autoGenerated": true
    },
    {
      "id": "rule_828_1756748912808",
      "name": "ClientCardProps lists should be paginated",
      "type": "performance",
      "severity": "warning",
      "path": "ClientCardProps.list",
      "rule": "limit <= 100",
      "autoGenerated": true
    },
    {
      "id": "rule_829_1756748912808",
      "name": "LiveSessionBannerProps lists should be paginated",
      "type": "performance",
      "severity": "warning",
      "path": "LiveSessionBannerProps.list",
      "rule": "limit <= 100",
      "autoGenerated": true
    },
    {
      "id": "rule_830_1756748912808",
      "name": "PostCardProps lists should be paginated",
      "type": "performance",
      "severity": "warning",
      "path": "PostCardProps.list",
      "rule": "limit <= 100",
      "autoGenerated": true
    },
    {
      "id": "rule_831_1756748912808",
      "name": "PostComposerProps lists should be paginated",
      "type": "performance",
      "severity": "warning",
      "path": "PostComposerProps.list",
      "rule": "limit <= 100",
      "autoGenerated": true
    },
    {
      "id": "rule_832_1756748912808",
      "name": "ProductCardProps lists should be paginated",
      "type": "performance",
      "severity": "warning",
      "path": "ProductCardProps.list",
      "rule": "limit <= 100",
      "autoGenerated": true
    },
    {
      "id": "rule_833_1756748912808",
      "name": "Images should be optimized",
      "type": "performance",
      "severity": "info",
      "path": "assets.images",
      "rule": "fileSize < 1048576",
      "autoGenerated": true
    },
    {
      "id": "rule_834_1756748912808",
      "name": "Bundle size should be optimal",
      "type": "performance",
      "severity": "warning",
      "path": "build.bundle",
      "rule": "bundleSize < 5242880",
      "autoGenerated": true
    },
    {
      "id": "rule_835_1756748912808",
      "name": "Prevent SQL injection",
      "type": "security",
      "severity": "error",
      "path": "database.query",
      "rule": "!query.includes('DROP') && !query.includes('DELETE FROM') && !query.includes('--')",
      "autoGenerated": true
    },
    {
      "id": "rule_836_1756748912808",
      "name": "Prevent XSS attacks",
      "type": "security",
      "severity": "error",
      "path": "ui.render",
      "rule": "!content.includes('<script>') && !content.includes('javascript:')",
      "autoGenerated": true
    },
    {
      "id": "rule_837_1756748912808",
      "name": "Protected routes require authentication",
      "type": "security",
      "severity": "error",
      "path": "auth.protected",
      "rule": "user.isAuthenticated === true",
      "autoGenerated": true
    }
  ],
  "timestamp": "2025-09-01T17:48:32.808Z"
}